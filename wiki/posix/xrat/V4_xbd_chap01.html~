<!-- Copyright 2001-2013 IEEE and The Open Group, All Rights Reserved -->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link type="text/css" rel="stylesheet" href="style.css"><!-- Generated by The Open Group's rhtm tool v1.2.4 -->
<!-- Copyright (c) 2001-2013 The Open Group, All Rights Reserved -->
<title>Rationale for Base Definitions</title>
</head>
<body bgcolor="white">
<div class="NAVHEADER">
<table summary="Header navigation table" class="nav" width="100%" border="0" cellpadding="0" cellspacing="0">
<tr class="nav">
<td class="nav" width="15%" align="left" valign="bottom"><a href="../xrat/V4_title.html" accesskey="P">&lt;&lt;&lt; Previous</a></td>
<td class="nav" width="70%" align="center" valign="bottom"><a href="contents.html">Home</a></td>
<td class="nav" width="15%" align="right" valign="bottom"><a href="../xrat/V4_xbd_chap02.html" accesskey="N">Next
&gt;&gt;&gt;</a></td>
</tr>
</table>

<hr align="LEFT" width="100%">
</div>


<basefont size="3"> 

<center><font size="2">The Open Group Base Specifications Issue 7, 2018 edition<br>
IEEE Std 1003.1-2017 (Revision of IEEE Std 1003.1-2008)<br>
Copyright &copy; 2001-2018 IEEE and The Open Group</font></center>

<hr size="2" noshade>
<a name="top"></a> 

<h2><a name="tag_21">  A.  </a>Rationale for Base Definitions</h2>

<h3><a name="tag_21_01">   A.1  </a>Introduction</h3>

<h4><a name="tag_21_01_01">  A.1.1  </a>Scope</h4>

<p>POSIX.1-2017 is one of a family of standards known as POSIX. The family of standards extends to many topics; POSIX.1 consists of
both operating system interfaces and shell and utilities. POSIX.1-2017 is technically identical to The Open Group Base
Specifications, Issue 7.</p>

<h5><a name="tag_21_01_01_01"></a>Scope of POSIX.1-2017</h5>

<p>The (paraphrased) goals of this development were to revise the single document that is ISO/IEC 9945:2003 Parts 1 through 4, IEEE
Std 1003.1, 2004 Edition, and the appropriate parts of The Open Group Single UNIX Specification, Version 3. This work has been
undertaken by the Austin Group, a joint working group of IEEE, The Open Group, and ISO/IEC JTC 1/SC 22.</p>

<p>The following are the base documents in this version:</p>

<ul>
<li>
<p>IEEE Std 1003.1, 2004 Edition</p>
</li>

<li>
<p>ISO/IEC 9899:1999, Programming Languages - C, including ISO/IEC 9899:1999/Cor.1:2001(E), ISO/IEC 9899:1999/Cor.2:2004(E), and
ISO/IEC 9899:1999/Cor.3</p>
</li>

<li>
<p>The Open Group Extended API Sets, Parts 1 through 4</p>
</li>
</ul>

<p>This version has addressed the following areas:</p>

<ul>
<li>
<p>Issues raised by Austin Group defect reports, IEEE Interpretations against IEEE Std 1003.1, and ISO/IEC defect reports against
ISO/IEC 9945</p>

<p>The repository of interpretations can be accessed at <a href=
"http://www.opengroup.org/austin/interps">www.opengroup.org/austin/interps</a>.</p>
</li>

<li>
<p>Issues raised in corrigenda for The Open Group Technical Standards and working group resolutions from The Open Group</p>
</li>

<li>
<p>Issues arising from ISO TR 24715:2006, Conflicts between POSIX and the LSB</p>

<p>This is a Type 3 informative technical report highlighting differences between the LSB 3.1 and the 2004 Edition of this
standard.</p>
</li>

<li>
<p>Changes to make the text self-consistent with the additional material merged</p>

<p>The new material merged has come from the The Open Group Extended API Sets, Parts 1 through 4. A list of the new interfaces is
included in <a href="../xrat/V4_xsh_chap01.html#tag_22_01_01"><i>Change History</i></a>.</p>
</li>

<li>
<p>Features, marked legacy or obsolescent in the base documents, have been considered for removal in this version</p>

<p>See <a href="../xrat/V4_xsh_chap01.html#tag_22_01_01"><i>Change History</i></a> and <a href=
"../xrat/V4_xcu_chap01.html#tag_23_01_01"><i>Change History</i></a>.</p>
</li>

<li>
<p>A review and reorganization of the options within the standard</p>

<p>This has included marking the following options obsolescent:</p>

<ul>
<li>
<p>Batch Environment Services and Utilities</p>
</li>

<li>
<p>Tracing</p>
</li>

<li>
<p>XSI STREAMS</p>
</li>
</ul>

<p>The UUCP Utilities option is a new option for this version.</p>

<p>Functionality from the following former options is now mandatory in this version:</p>

<table cellpadding="3">
<tr valign="top">
<td align="left">
<p class="tent">AIO</p>
</td>
<td align="left">
<p class="tent">_POSIX_ASYNCHRONOUS_IO (Asynchronous Input and Output)</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">BAR</p>
</td>
<td align="left">
<p class="tent">_POSIX_BARRIERS (Barriers)</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">CS</p>
</td>
<td align="left">
<p class="tent">_POSIX_CLOCK_SELECTION (Clock Selection)</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">MF</p>
</td>
<td align="left">
<p class="tent">_POSIX_MAPPED_FILES (Memory Mapped Files)</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">MPR</p>
</td>
<td align="left">
<p class="tent">_POSIX_MEMORY_PROTECTION (Memory Protection)</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">RTS</p>
</td>
<td align="left">
<p class="tent">_POSIX_REALTIME_SIGNALS (Realtime Signals Extension)</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">RWL</p>
</td>
<td align="left">
<p class="tent">_POSIX_READER_WRITER_LOCKS (Read-Write Locks)</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">SEM</p>
</td>
<td align="left">
<p class="tent">_POSIX_SEMAPHORES (Semaphores)</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">SPI</p>
</td>
<td align="left">
<p class="tent">_POSIX_SPIN_LOCKS (Spin Locks)</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">THR</p>
</td>
<td align="left">
<p class="tent">_POSIX_THREADS (Threads)</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">TMO</p>
</td>
<td align="left">
<p class="tent">_POSIX_TIMEOUTS (Timeouts)</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">TMR</p>
</td>
<td align="left">
<p class="tent">_POSIX_TIMERS (Timers)</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">TSF</p>
</td>
<td align="left">
<p class="tent">_POSIX_THREAD_SAFE_FUNCTIONS (Thread-Safe Functions)</p>
</td>
</tr>
</table>
</li>

<li>
<p>Alignment with the ISO/IEC 9899:1999 standard, including ISO/IEC 9899:1999/Cor.2:2004(E)</p>
</li>

<li>
<p>A review of the use of fixed path filenames within the standard</p>

<p>For example, the <a href="../utilities/at.html"><i>at</i></a>, <a href="../utilities/batch.html"><i>batch</i></a>, and <a href=
"../utilities/crontab.html"><i>crontab</i></a> utilities previously had a requirement for use of the directory
<b>/usr/lib/cron</b>.</p>
</li>
</ul>

<p>The following were requirements on POSIX.1-2017:</p>

<ul>
<li>
<p>Backward-compatibility</p>

<p>For interfaces carried forward, it was agreed that there should be no breakage of functionality in the existing base documents.
All strictly conforming applications will be conforming but not necessarily strictly conforming to the revised standard. The goal
is for system implementations to be able to support the existing and revised standards simultaneously.</p>
</li>

<li>
<p>Architecture and <i>n</i>-bit-neutral</p>

<p>The common standard should not make any implicit assumptions about the system architecture or size of data types; for example,
previously some 32-bit implicit assumptions had crept into the standards.</p>
</li>

<li>
<p>Extensibility</p>

<p>It should be possible to extend the common standard without breaking backwards-compatibility; for example, the name space should
be reserved and structured to avoid duplication of names between the standard and extensions to it.</p>
</li>
</ul>

<h5><a name="tag_21_01_01_02"></a>POSIX.1 and the ISO C Standard</h5>

<p>The standard developers believed it essential for a programmer to have a single complete reference place, but recognized that
deference to the formal standard has to be addressed for the duplicate interface definitions between the ISO&nbsp;C standard and
POSIX.1-2017.</p>

<p>Where an interface has a version in the ISO&nbsp;C standard, the DESCRIPTION section describes the relationship to the
ISO&nbsp;C standard and markings are included as appropriate to show where the ISO&nbsp;C standard has been extended in the
text.</p>

<p>A block of text is included at the start of each affected reference page stating whether the page is aligned with the ISO&nbsp;C
standard or extended. Each page has been parsed for additions beyond the ISO&nbsp;C standard (that is, including both POSIX and
UNIX extensions), and these extensions are marked as CX extensions (for C extensions).</p>

<h5><a name="tag_21_01_01_03"></a>FIPS Requirements</h5>

<p>The Federal Information Processing Standards (FIPS) are a series of US government procurement standards managed and maintained
on behalf of the US Department of Commerce by the National Institute of Standards and Technology (NIST).</p>

<p>The following restrictions were integrated into IEEE&nbsp;Std&nbsp;1003.1-2001. They originally came from FIPS 151-2 which was
withdrawn by NIST on February 25 2000.</p>

<ul>
<li>
<p>The implementation supports _POSIX_CHOWN_RESTRICTED.</p>
</li>

<li>
<p>The limit {NGROUPS_MAX} is greater than or equal to 8.</p>
</li>

<li>
<p>The implementation supports the setting of the group ID of a file (when it is created) to that of the parent directory.</p>
</li>

<li>
<p>The implementation supports _POSIX_SAVED_IDS.</p>
</li>

<li>
<p>The implementation supports _POSIX_VDISABLE.</p>
</li>

<li>
<p>The implementation supports _POSIX_JOB_CONTROL.</p>
</li>

<li>
<p>The implementation supports _POSIX_NO_TRUNC.</p>
</li>

<li>
<p>The <a href="../functions/read.html"><i>read</i>()</a> function returns the number of bytes read when interrupted by a signal
and does not return -1.</p>
</li>

<li>
<p>The <a href="../functions/write.html"><i>write</i>()</a> function returns the number of bytes written when interrupted by a
signal and does not return -1.</p>
</li>

<li>
<p>In the environment for the login shell, the environment variables <i>LOGNAME</i> and <i>HOME</i> are defined and have the
properties described in POSIX.1-2017.</p>
</li>

<li>
<p>The value of {CHILD_MAX} is greater than or equal to 25.</p>
</li>

<li>
<p>The value of {OPEN_MAX} is greater than or equal to 20.</p>
</li>

<li>
<p>The implementation supports the functionality associated with the symbols CS7, CS8, CSTOPB, PARODD, and PARENB defined in <a
href="../basedefs/termios.h.html"><i>&lt;termios.h&gt;</i></a>.</p>
</li>
</ul>

<h4><a name="tag_21_01_02">  A.1.2  </a>Conformance</h4>

<p>See <a href="../xrat/V4_xbd_chap02.html#tag_21_02"><i>Conformance</i></a>.</p>

<h4><a name="tag_21_01_03">  A.1.3  </a>Normative References</h4>

<p>There is no additional rationale provided for this section.</p>

<h4><a name="tag_21_01_04">  A.1.4  </a>Change History</h4>

<p>For Issue 7 onwards, in references to Technical Corrigenda, the original Austin Group defect report numbers that gave rise to
the change are included in square brackets after the change number from the Technical Corrigendum. For more information on Austin
Group defect reports see <a href=
"http://www.opengroup.org/austin/defectform.html">www.opengroup.org/austin/defectform.html</a>.</p>

<h4><a name="tag_21_01_05">  A.1.5  </a>Terminology</h4>

<p>The meanings specified in POSIX.1-2017 for the words <i>shall</i>, <i>should</i>, and <i>may</i> are mandated by ISO/IEC
directives.</p>

<p>In the Rationale (Informative) volume of POSIX.1-2017, the words <i>shall</i>, <i>should</i>, and <i>may</i> are sometimes used
to illustrate similar usages in POSIX.1-2017. However, the rationale itself does not specify anything regarding implementations or
applications.</p>

<h4 class="term"><a name="tag_21_01_06"></a>conformance document</h4>

<p>As a practical matter, the conformance document is effectively part of the system documentation. Conformance documents are
distinguished by POSIX.1-2017 so that they can be referred to distinctly.</p>

<h4 class="term"><a name="tag_21_01_07"></a>implementation-defined</h4>

<p>This definition is analogous to that of the ISO&nbsp;C standard and, together with &quot;undefined&quot; and &quot;unspecified&quot;, provides a
range of specification of freedom allowed to the interface implementor.</p>

<h4 class="term"><a name="tag_21_01_08"></a>may</h4>

<p>The use of <i>may</i> has been limited as much as possible, due both to confusion stemming from its ordinary English meaning and
to objections regarding the desirability of having as few options as possible and those as clearly specified as possible.</p>

<p>The usage of <i>can</i> and <i>may</i> were selected to contrast optional application behavior (can) against optional
implementation behavior (may).</p>

<h4 class="term"><a name="tag_21_01_09"></a>shall</h4>

<p>Declarative sentences are sometimes used in POSIX.1-2017 as if they included the word <i>shall</i>, and facilities thus
specified are no less required. For example, the two statements:</p>

<ol>
<li>
<p>The <i>foo</i>() function shall return zero.</p>
</li>

<li>
<p>The <i>foo</i>() function returns zero.</p>
</li>
</ol>

<p>are meant to be exactly equivalent.</p>

<h4 class="term"><a name="tag_21_01_10"></a>should</h4>

<p>In POSIX.1-2017, the word <i>should</i> does not usually apply to the implementation, but rather to the application. Thus, the
important words regarding implementations are <i>shall</i>, which indicates requirements, and <i>may</i>, which indicates
options.</p>

<h4 class="term"><a name="tag_21_01_11"></a>obsolescent</h4>

<p>The term &quot;obsolescent&quot; means &quot;do not use this feature in new applications&quot;. A feature noted as obsolescent is supported by
all implementations, but may be removed in a future version; new applications should not use these features. The obsolescence
concept is not an ideal solution, but was used as a method of increasing consensus: many more objections would be heard from the
user community if some of these historical features were suddenly removed without the grace period obsolescence implies. The phrase
&quot;may be removed in a future version&quot; implies that the result of that consideration might in fact keep those features indefinitely
if the predominance of applications do not migrate away from them quickly.</p>

<h4 class="term"><a name="tag_21_01_12"></a>legacy</h4>

<p>The term &quot;legacy&quot; was included in earlier versions of this standard but is no longer used in the current version.</p>

<h4 class="term"><a name="tag_21_01_13"></a>system documentation</h4>

<p>The system documentation should normally describe the whole of the implementation, including any extensions provided by the
implementation. Such documents normally contain information at least as detailed as the specifications in POSIX.1-2017. Few
requirements are made on the system documentation, but the term is needed to avoid a dangling pointer where the conformance
document is permitted to point to the system documentation.</p>

<h4 class="term"><a name="tag_21_01_14"></a>undefined</h4>

<p>See <i>implementation-defined</i>.</p>

<h4 class="term"><a name="tag_21_01_15"></a>unspecified</h4>

<p>See <i>implementation-defined</i>.</p>

<p>The definitions for &quot;unspecified&quot; and &quot;undefined&quot; appear nearly identical at first examination, but are not. The term
&quot;unspecified&quot; means that a conforming application may deal with the unspecified behavior, and it should not care what the outcome
is. The term &quot;undefined&quot; says that a conforming application should not do it because no definition is provided for what it does
(and implicitly it would care what the outcome was if it tried it). It is important to remember, however, that if the syntax
permits the statement at all, it must have some outcome in a real implementation.</p>

<p>Thus, the terms &quot;undefined&quot; and &quot;unspecified&quot; apply to the way the application should think about the feature. In terms of
the implementation, it is always &quot;defined''-there is always some result, even if it is an error. The implementation is free to
choose the behavior it prefers.</p>

<p>This also implies that an implementation, or another standard, could specify or define the result in a useful fashion. The terms
apply to POSIX.1-2017 specifically.</p>

<p>The term &quot;implementation-defined&quot; implies requirements for documentation that are not required for &quot;undefined&quot; (or
&quot;unspecified&quot;). Where there is no need for a conforming program to know the definition, the term &quot;undefined&quot; is used, even
though &quot;implementation-defined&quot; could also have been used in this context. There could be a fourth term, specifying &quot;this
standard does not say what this does; it is acceptable to define it in an implementation, but it does not need to be documented&quot;,
and undefined would then be used very rarely for the few things for which any definition is not useful. In particular,
implementation-defined is used where it is believed that certain classes of application will need to know such details to determine
whether the application can be successfully ported to the implementation. Such applications are not always strictly portable, but
nevertheless are common and useful; often the requirements met by the application cannot be met without dealing with the issues
implied by &quot;implementation-defined&quot;. In some places the text refers to facilities supplied by the implementation that are outside
the standard as implementation-supplied or implementation-provided. This is not intended to imply a requirement for documentation.
If it were, the term &quot;implementation-defined&quot; would have been used.</p>

<p>In many places POSIX.1-2017 is silent about the behavior of some possible construct. For example, a variable may be defined for
a specified range of values and behaviors are described for those values; nothing is said about what happens if the variable has
any other value. That kind of silence can imply an error in the standard, but it may also imply that the standard was intentionally
silent and that any behavior is permitted. There is a natural tendency to infer that if the standard is silent, a behavior is
prohibited. That is not the intent. Silence is intended to be equivalent to the term &quot;unspecified&quot;.</p>

<p>Three terms used within POSIX.1-2017 overlap in meaning: &quot;macro&quot;, &quot;symbolic name&quot;, and &quot;symbolic constant&quot;.</p>

<h4 class="term"><a name="tag_21_01_16"></a>macro</h4>

<p>This usually describes a C preprocessor symbol, the result of the <b>#define</b> operator, with or without an argument. It may
also be used to describe similar mechanisms in editors and text processors.</p>

<h4 class="term"><a name="tag_21_01_17"></a>symbolic name</h4>

<p>In earlier versions of this standard this was also sometimes used to refer to a C preprocessor symbol (without arguments), but
the intention is for all such uses to have been removed. It is now mainly used to refer to the names for characters in character
sets, but is sometimes used to refer to host names and even filenames.</p>

<h4 class="term"><a name="tag_21_01_18"></a>symbolic constant</h4>

<p>This also refers to a C preprocessor symbol, with specific associated requirements. See the definition in <a href=
"../basedefs/V1_chap03.html#tag_03_380"><i>Symbolic Constant</i></a>.</p>

<h4><a name="tag_21_01_19">  A.1.19  </a>Definitions and Concepts</h4>

<p>There is no additional rationale provided for this section.</p>

<h4><a name="tag_21_01_20">  A.1.20  </a>Portability</h4>

<p>To aid the identification of options within POSIX.1-2017, a notation consisting of margin codes and shading is used. This is
based on the notation used in earlier versions of The Open Group Base specifications.</p>

<p>The benefit of this approach is a reduction in the number of <i>if</i> statements within the running text, that makes the text
easier to read, and also an identification to the programmer that they need to ensure that their target platforms support the
underlying options. For example, if functionality is marked with RPP in the margin, it will be available on all systems supporting
the Robust Mutex Priority Protection option, but may not be available on some others.</p>

<h5><a name="tag_21_01_20_01"></a>Codes</h5>

<p>This section includes codes for options defined in XBD <a href="../basedefs/V1_chap02.html#tag_02_01_06"><i>Options</i></a>,
and the following additional codes for other purposes:</p>

<dl compact>
<dt>CX</dt>

<dd>This margin code is used to denote extensions beyond the ISO&nbsp;C standard. For interfaces that are duplicated between
POSIX.1-2017 and the ISO&nbsp;C standard, a CX introduction block describes the nature of the duplication, with any extensions
appropriately CX marked and shaded. 

<p>Where an interface is added to an ISO&nbsp;C standard header, within the header the interface has an appropriate margin marker
and shading (for example, CX, XSI, TSF, and so on) and the same marking appears on the reference page in the SYNOPSIS section. This
enables a programmer to easily identify that the interface is extending an ISO&nbsp;C standard header.</p>
</dd>

<dt>MX and MXX</dt>

<dd>
These two margin codes both relate to the IEC 60559 Floating-Point option. The MX code denotes functionality that is mandated by
the ISO&nbsp;C standard for IEC 60559 implementations; the MXX code denotes IEC 60559 functionality that is an extension to the
ISO&nbsp;C standard.</dd>

<dt>OB</dt>

<dd>This margin code is used to denote obsolescent behavior and thus flag a possible future applications portability warning.</dd>

<dt>OH</dt>

<dd>The Single UNIX Specification has historically tried to reduce the number of headers an application has had to include when
using a particular interface. Sometimes this was fewer than the base standard, and hence a notation is used to flag which headers
are optional if you are using a system supporting the XSI option.</dd>
</dl>

<p>POSIX.1-2008, Technical Corrigendum 2, XBD/TC2-2008/0001 [591] is applied.</p>

<h5><a name="tag_21_01_20_02"></a>Margin Code Notation</h5>

<p>Since some features may depend on one or more options, or require more than one option, a notation is used. Where a feature
requires support of a single option, a single margin code will occur in the margin. If it depends on two options and both are
required, then the codes will appear with a &lt;space&gt; separator. If either of two options are required, then a logical OR is
denoted using the <tt>'|'</tt> symbol. If more than two codes are used, a special notation is used.</p>

<p>&nbsp;</p>

<a href="#top"><span class="topOfPage">return to top of page</span></a><br>
<hr size="2" noshade>
<center><font size="2">UNIX &reg; is a registered Trademark of The Open Group.<br>
POSIX &reg; is a registered Trademark of The IEEE.<br>
Copyright &copy; 2001-2018 IEEE and The Open Group, All Rights Reserved<br>
[ <a href="../mindex.html">Main Index</a> | <a href="../basedefs/contents.html">XBD</a> | <a href=
"../functions/contents.html">XSH</a> | <a href="../utilities/contents.html">XCU</a> | <a href="../xrat/contents.html">XRAT</a>
]</font></center>

<hr size="2" noshade>
<div class="NAVHEADER">
<table summary="Header navigation table" class="nav" width="100%" border="0" cellpadding="0" cellspacing="0">
<tr class="nav">
<td class="nav" width="15%" align="left" valign="bottom"><a href="../xrat/V4_title.html" accesskey="P">&lt;&lt;&lt; Previous</a></td>
<td class="nav" width="70%" align="center" valign="bottom"><a href="contents.html">Home</a></td>
<td class="nav" width="15%" align="right" valign="bottom"><a href="../xrat/V4_xbd_chap02.html" accesskey="N">Next
&gt;&gt;&gt;</a></td>
</tr>
</table>

<hr align="LEFT" width="100%">
</div>
</body>
</html>

