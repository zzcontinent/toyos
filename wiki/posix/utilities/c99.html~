<!-- Copyright 2001-2013 IEEE and The Open Group, All Rights Reserved -->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link type="text/css" rel="stylesheet" href="style.css"><!-- Generated by The Open Group's rhtm tool v1.2.4 -->
<!-- Copyright (c) 2001-2013 The Open Group, All Rights Reserved -->
<title>c99</title>
</head>
<body bgcolor="white">
<div class="NAVHEADER">
<table summary="Header navigation table" class="nav" width="100%" border="0" cellpadding="0" cellspacing="0">
<tr class="nav">
<td class="nav" width="15%" align="left" valign="bottom"><a href="../utilities/bg.html" accesskey="P">&lt;&lt;&lt; Previous</a></td>
<td class="nav" width="70%" align="center" valign="bottom"><a href="contents.html">Home</a></td>
<td class="nav" width="15%" align="right" valign="bottom"><a href="../utilities/cal.html" accesskey="N">Next &gt;&gt;&gt;</a></td>
</tr>
</table>

<hr align="LEFT" width="100%">
</div>

<script type="text/javascript" language="JavaScript" src="../jscript/codes.js">
</script>

<basefont size="3"> 

<center><font size="2">The Open Group Base Specifications Issue 7, 2018 edition<br>
IEEE Std 1003.1-2017 (Revision of IEEE Std 1003.1-2008)<br>
Copyright &copy; 2001-2018 IEEE and The Open Group</font></center>

<hr size="2" noshade>
<a name="top"></a> <a name="c99"></a> <a name="tag_20_11"></a><!-- c99 -->
 

<h4 class="mansect"><a name="tag_20_11_01"></a>NAME</h4>

<blockquote>c99 - compile standard C programs</blockquote>

<h4 class="mansect"><a name="tag_20_11_02"></a>SYNOPSIS</h4>

<blockquote class="synopsis">
<div class="box"><code><tt><sup>[<a href="javascript:open_code('CD')">CD</a>]</sup> <img src="../images/opt-start.gif" alt=
"[Option Start]" border="0"> c99</tt> <b>[</b><i>options</i><tt>...</tt><b>]</b> <i>pathname</i> <b>[[</b><i>pathname</i><b>]
[</b><tt>-I</tt> <i>directory</i><b>]<br>
</b> <tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt> <b>[</b><tt>-L</tt> <i>directory</i><b>] [</b><tt>-l</tt>
<i>library</i><b>]]</b><tt>... <img src="../images/opt-end.gif" alt="[Option End]" border="0"></tt></code></div>
</blockquote>

<h4 class="mansect"><a name="tag_20_11_03"></a>DESCRIPTION</h4>

<blockquote>
<p>The <i>c99</i> utility is an interface to the standard C compilation system; it shall accept source code conforming to the
ISO&nbsp;C standard. The system conceptually consists of a compiler and link editor. The input files referenced by <i>pathname</i>
operands and <b>-l</b> option-arguments shall be compiled and linked to produce an executable file. (It is unspecified whether the
linking occurs entirely within the operation of <i>c99</i>; some implementations may produce objects that are not fully resolved
until the file is executed.)</p>

<p>If the <b>-c</b> option is specified, for all pathname operands of the form <i>file</i> <b>.c</b>, the files:</p>

<pre>
<tt>$(basename</tt> <i>pathname</i> <tt>.c).o
</tt>
</pre>

<p>shall be created as the result of successful compilation. If the <b>-c</b> option is not specified, it is unspecified whether
such <b>.o</b> files are created or deleted for the <i>file</i> <b>.c</b> operands.</p>

<p>If there are no options that prevent link editing (such as <b>-c</b> or <b>-E</b>), and all input files compile and link without
error, the resulting executable file shall be written according to the <b>-o</b> <i>outfile</i> option (if present) or to the file
<b>a.out</b>.</p>

<p>The executable file shall be created as specified in <a href="../utilities/V3_chap01.html#tag_17_01_01_04"><i>File Read, Write,
and Creation</i></a>, except that the file permission bits shall be set to: S_IRWXO | S_IRWXG | S_IRWXU</p>

<p>and the bits specified by the <a href="../utilities/umask.html"><i>umask</i></a> of the process shall be cleared.</p>
</blockquote>

<h4 class="mansect"><a name="tag_20_11_04"></a>OPTIONS</h4>

<blockquote>
<p>The <i>c99</i> utility shall conform to XBD <a href="../basedefs/V1_chap12.html#tag_12_02"><i>Utility Syntax Guidelines</i></a>
, except that:</p>

<ul>
<li>
<p>Options can be interspersed with operands.</p>
</li>

<li>
<p>The order of specifying the <b>-L</b> and <b>-l</b> options, and the order of specifying <b>-l</b> options with respect to
<i>pathname</i> operands is significant.</p>
</li>

<li>
<p>Conforming applications shall specify each option separately; that is, grouping option letters (for example, <b>-cO</b>) need
not be recognized by all implementations.</p>
</li>
</ul>

<p>The following options shall be supported:</p>

<dl compact>
<dt><b>-c</b></dt>

<dd>Suppress the link-edit phase of the compilation, and do not remove any object files that are produced.</dd>

<dt><b>-D&nbsp;</b> <i>name</i><b>[=</b><i>value</i><b>]</b></dt>

<dd>
Define <i>name</i> as if by a C-language <b>#define</b> directive. If no = <i>value</i> is given, a value of 1 shall be used. The
<b>-D</b> option has lower precedence than the <b>-U</b> option. That is, if <i>name</i> is used in both a <b>-U</b> and a
<b>-D</b> option, <i>name</i> shall be undefined regardless of the order of the options. Additional implementation-defined
<i>name</i>s may be provided by the compiler. Implementations shall support at least 2048 bytes of <b>-D</b> definitions and 256
<i>names</i>.</dd>

<dt><b>-E</b></dt>

<dd>Copy C-language source files to standard output, executing all preprocessor directives; no compilation shall be performed. If
any operand is not a text file, the effects are unspecified.</dd>

<dt><b>-g</b></dt>

<dd>Produce symbolic information in the object or executable files; the nature of this information is unspecified, and may be
modified by implementation-defined interactions with other options.</dd>

<dt><b>-I&nbsp;</b> <i>directory</i></dt>

<dd>Change the algorithm for searching for headers whose names are not absolute pathnames to look in the directory named by the
<i>directory</i> pathname before looking in the usual places. Thus, headers whose names are enclosed in double-quotes ( <tt>""</tt>
) shall be searched for first in the directory of the file with the <b>#include</b> line, then in directories named in <b>-I</b>
options, and last in the usual places. For headers whose names are enclosed in angle brackets ( <tt>"&lt;&gt;"</tt> ), the header
shall be searched for only in directories named in <b>-I</b> options and then in the usual places. Directories named in <b>-I</b>
options shall be searched in the order specified. If the <b>-I</b> option is used to specify a directory that is one of the usual
places searched by default, the results are unspecified. Implementations shall support at least ten instances of this option in a
single <i>c99</i> command invocation.</dd>

<dt><b>-L&nbsp;</b> <i>directory</i></dt>

<dd>Change the algorithm of searching for the libraries named in the <b>-l</b> objects to look in the directory named by the
<i>directory</i> pathname before looking in the usual places. Directories named in <b>-L</b> options shall be searched in the order
specified. If the <b>-L</b> option is used to specify a directory that is one of the usual places searched by default, the results
are unspecified. Implementations shall support at least ten instances of this option in a single <i>c99</i> command invocation. If
a directory specified by a <b>-L</b> option contains files with names starting with any of the strings <tt>"libc."</tt>,
<tt>"libl."</tt>, <tt>"libpthread."</tt>, <tt>"libm."</tt>, <tt>"librt."</tt>, <tt>"libtrace."</tt>, <tt>"libxnet."</tt>, or
<tt>"liby."</tt>, the results are unspecified.</dd>

<dt><b>-l&nbsp;</b> <i>library</i></dt>

<dd>Search the library named <b>liblibrary.a</b>. A library shall be searched when its name is encountered, so the placement of a
<b>-l</b> option is significant. Several standard libraries can be specified in this manner, as described in the EXTENDED
DESCRIPTION section. Implementations may recognize implementation-defined suffixes other than <b>.a</b> as denoting libraries.</dd>

<dt><b>-O&nbsp;</b> <i>optlevel</i></dt>

<dd>Specify the level of code optimization. If the <i>optlevel</i> option-argument is the digit <tt>'0'</tt>, all special code
optimizations shall be disabled. If it is the digit <tt>'1'</tt>, the nature of the optimization is unspecified. If the <b>-O</b>
option is omitted, the nature of the system's default optimization is unspecified. It is unspecified whether code generated in the
presence of the <b>-O</b> 0 option is the same as that generated when <b>-O</b> is omitted. Other <i>optlevel</i> values may be
supported.</dd>

<dt><b>-o&nbsp;</b> <i>outfile</i></dt>

<dd>Use the pathname <i>outfile</i>, instead of the default <b>a.out</b>, for the executable file produced. If the <b>-o</b> option
is present with <b>-c</b> or <b>-E</b>, the result is unspecified.</dd>

<dt><b>-s</b></dt>

<dd>Produce object or executable files, or both, from which symbolic and other information not required for proper execution using
the <i>exec</i> family defined in the System Interfaces volume of POSIX.1-2017 has been removed (stripped). If both <b>-g</b> and
<b>-s</b> options are present, the action taken is unspecified.</dd>

<dt><b>-U&nbsp;</b> <i>name</i></dt>

<dd>Remove any initial definition of <i>name</i>.</dd>
</dl>

<p>Multiple instances of the <b>-D</b>, <b>-I</b>, <b>-L</b>, <b>-l</b>, and <b>-U</b> options can be specified.</p>
</blockquote>

<h4 class="mansect"><a name="tag_20_11_05"></a>OPERANDS</h4>

<blockquote>
<p>The application shall ensure that at least one <i>pathname</i> operand is specified. The following forms for <i>pathname</i>
operands shall be supported:</p>

<dl compact>
<dt><i>file.</i><b>c</b></dt>

<dd>A C-language source file to be compiled and optionally linked. The application shall ensure that the operand is of this form if
the <b>-c</b> option is used.</dd>

<dt><i>file.</i><b>a</b></dt>

<dd>A library of object files typically produced by the <a href="../utilities/ar.html"><i>ar</i></a> utility, and passed directly
to the link editor. Implementations may recognize implementation-defined suffixes other than <b>.a</b> as denoting object file
libraries.</dd>

<dt><i>file.</i><b>o</b></dt>

<dd>An object file produced by <i>c99</i> <b>-c</b> and passed directly to the link editor. Implementations may recognize
implementation-defined suffixes other than <b>.o</b> as denoting object files.</dd>
</dl>

<p>The processing of other files is implementation-defined.</p>
</blockquote>

<h4 class="mansect"><a name="tag_20_11_06"></a>STDIN</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class="mansect"><a name="tag_20_11_07"></a>INPUT FILES</h4>

<blockquote>
<p>Each input file shall be one of the following: a text file containing a C-language source program, an object file in the format
produced by <i>c99</i> <b>-c</b>, or a library of object files, in the format produced by archiving zero or more object files,
using <a href="../utilities/ar.html"><i>ar</i></a>. Implementations may supply additional utilities that produce files in these
formats. Additional input file formats are implementation-defined.</p>
</blockquote>

<h4 class="mansect"><a name="tag_20_11_08"></a>ENVIRONMENT VARIABLES</h4>

<blockquote>
<p>The following environment variables shall affect the execution of <i>c99</i>:</p>

<dl compact>
<dt><i>LANG</i></dt>

<dd>Provide a default value for the internationalization variables that are unset or null. (See XBD <a href=
"../basedefs/V1_chap08.html#tag_08_02"><i>Internationalization Variables</i></a> for the precedence of internationalization
variables used to determine the values of locale categories.)</dd>

<dt><i>LC_ALL</i></dt>

<dd>If set to a non-empty string value, override the values of all the other internationalization variables.</dd>

<dt><i>LC_CTYPE</i></dt>

<dd>Determine the locale for the interpretation of sequences of bytes of text data as characters (for example, single-byte as
opposed to multi-byte characters in arguments and input files).</dd>

<dt><i>LC_MESSAGES</i></dt>

<dd>
Determine the locale that should be used to affect the format and contents of diagnostic messages written to standard error.</dd>

<dt><i>NLSPATH</i></dt>

<dd><sup>[<a href="javascript:open_code('XSI')">XSI</a>]</sup> <img src="../images/opt-start.gif" alt="[Option Start]" border="0">
Determine the location of message catalogs for the processing of <i>LC_MESSAGES.</i> <img src="../images/opt-end.gif" alt=
"[Option End]" border="0"></dd>

<dt><i>TMPDIR</i></dt>

<dd>Provide a pathname that should override the default directory for temporary files, if any. <sup>[<a href=
"javascript:open_code('XSI')">XSI</a>]</sup> <img src="../images/opt-start.gif" alt="[Option Start]" border="0"> &nbsp;On
XSI-conforming systems, provide a pathname that shall override the default directory for temporary files, if any. <img src=
"../images/opt-end.gif" alt="[Option End]" border="0"></dd>
</dl>
</blockquote>

<h4 class="mansect"><a name="tag_20_11_09"></a>ASYNCHRONOUS EVENTS</h4>

<blockquote>
<p>Default.</p>
</blockquote>

<h4 class="mansect"><a name="tag_20_11_10"></a>STDOUT</h4>

<blockquote>
<p>If more than one <i>pathname</i> operand ending in <b>.c</b> (or possibly other unspecified suffixes) is given, for each such
file:</p>

<pre>
<tt>"%s:\n", &lt;</tt><i>pathname</i><tt>&gt;
</tt>
</pre>

<p>may be written. These messages, if written, shall precede the processing of each input file; they shall not be written to the
standard output if they are written to the standard error, as described in the STDERR section.</p>

<p>If the <b>-E</b> option is specified, the standard output shall be a text file that represents the results of the preprocessing
stage of the language; it may contain extra information appropriate for subsequent compilation passes.</p>
</blockquote>

<h4 class="mansect"><a name="tag_20_11_11"></a>STDERR</h4>

<blockquote>
<p>The standard error shall be used only for diagnostic messages. If more than one <i>pathname</i> operand ending in <b>.c</b> (or
possibly other unspecified suffixes) is given, for each such file:</p>

<pre>
<tt>"%s:\n", &lt;</tt><i>pathname</i><tt>&gt;
</tt>
</pre>

<p>may be written to allow identification of the diagnostic and warning messages with the appropriate input file. These messages,
if written, shall precede the processing of each input file; they shall not be written to the standard error if they are written to
the standard output, as described in the STDOUT section.</p>

<p>This utility may produce warning messages about certain conditions that do not warrant returning an error (non-zero) exit
value.</p>
</blockquote>

<h4 class="mansect"><a name="tag_20_11_12"></a>OUTPUT FILES</h4>

<blockquote>
<p>Object files or executable files or both are produced in unspecified formats. If the pathname of an object file or executable
file to be created by <i>c99</i> resolves to an existing directory entry for a file that is not a regular file, it is unspecified
whether <i>c99</i> shall attempt to create the file or shall issue a diagnostic and exit with a non-zero exit status.</p>
</blockquote>

<h4 class="mansect"><a name="tag_20_11_13"></a>EXTENDED DESCRIPTION</h4>

<blockquote>
<h5><a name="tag_20_11_13_01"></a>Standard Libraries</h5>

<p>The <i>c99</i> utility shall recognize the following <b>-l</b> options for standard libraries:</p>

<dl compact>
<dt><b>-l&nbsp;c</b></dt>

<dd>This option shall make available all interfaces referenced in the System Interfaces volume of POSIX.1-2017, with the possible
exception of those interfaces listed as residing in <a href="../basedefs/aio.h.html"><i>&lt;aio.h&gt;</i></a>, <a href=
"../basedefs/arpa_inet.h.html"><i>&lt;arpa/inet.h&gt;</i></a>, <a href="../basedefs/complex.h.html"><i>&lt;complex.h&gt;</i></a>,
<a href="../basedefs/fenv.h.html"><i>&lt;fenv.h&gt;</i></a>, <a href="../basedefs/math.h.html"><i>&lt;math.h&gt;</i></a>, <a href=
"../basedefs/mqueue.h.html"><i>&lt;mqueue.h&gt;</i></a>, <a href="../basedefs/netdb.h.html"><i>&lt;netdb.h&gt;</i></a>, <a href=
"../basedefs/net_if.h.html"><i>&lt;net/if.h&gt;</i></a>, <a href="../basedefs/netinet_in.h.html"><i>&lt;netinet/in.h&gt;</i></a>,
<a href="../basedefs/pthread.h.html"><i>&lt;pthread.h&gt;</i></a>, <a href="../basedefs/sched.h.html"><i>&lt;sched.h&gt;</i></a>,
<a href="../basedefs/semaphore.h.html"><i>&lt;semaphore.h&gt;</i></a>, <a href=
"../basedefs/spawn.h.html"><i>&lt;spawn.h&gt;</i></a>, <a href="../basedefs/sys_socket.h.html"><i>&lt;sys/socket.h&gt;</i></a>, <a
href="../functions/pthread_kill.html"><i>pthread_kill</i>()</a>, and <a href=
"../functions/pthread_sigmask.html"><i>pthread_sigmask</i>()</a> in <a href=
"../basedefs/signal.h.html"><i>&lt;signal.h&gt;</i></a>, <a href="../basedefs/trace.h.html"><i>&lt;trace.h&gt;</i></a>, interfaces
marked as optional in <a href="../basedefs/sys_mman.h.html"><i>&lt;sys/mman.h&gt;</i></a>, interfaces marked as ADV (Advisory
Information) in <a href="../basedefs/fcntl.h.html"><i>&lt;fcntl.h&gt;</i></a>, and interfaces beginning with the prefix clock_ or
timer_ in <a href="../basedefs/time.h.html"><i>&lt;time.h&gt;</i></a>. This option shall not be required to be present to cause a
search of this library.</dd>

<dt><b>-l&nbsp;l</b></dt>

<dd>This option shall make available all interfaces required by the C-language output of <a href=
"../utilities/lex.html"><i>lex</i></a> that are not made available through the <b>-l&nbsp;c</b> option.</dd>

<dt><b>-l&nbsp;pthread</b></dt>

<dd>This option shall make available all interfaces referenced in <a href="../basedefs/pthread.h.html"><i>&lt;pthread.h&gt;</i></a>
and <a href="../functions/pthread_kill.html"><i>pthread_kill</i>()</a> and <a href=
"../functions/pthread_sigmask.html"><i>pthread_sigmask</i>()</a> referenced in <a href=
"../basedefs/signal.h.html"><i>&lt;signal.h&gt;</i></a>. An implementation may search this library in the absence of this
option.</dd>

<dt><b>-l&nbsp;m</b></dt>

<dd>This option shall make available all interfaces referenced in <a href="../basedefs/math.h.html"><i>&lt;math.h&gt;</i></a>, <a
href="../basedefs/complex.h.html"><i>&lt;complex.h&gt;</i></a>, and <a href="../basedefs/fenv.h.html"><i>&lt;fenv.h&gt;</i></a>. An
implementation may search this library in the absence of this option.</dd>

<dt><b>-l&nbsp;rt</b></dt>

<dd>This option shall make available all interfaces referenced in <a href="../basedefs/aio.h.html"><i>&lt;aio.h&gt;</i></a>, <a
href="../basedefs/mqueue.h.html"><i>&lt;mqueue.h&gt;</i></a>, <a href="../basedefs/sched.h.html"><i>&lt;sched.h&gt;</i></a>, <a
href="../basedefs/semaphore.h.html"><i>&lt;semaphore.h&gt;</i></a>, and <a href=
"../basedefs/spawn.h.html"><i>&lt;spawn.h&gt;</i></a>, interfaces marked as optional in <a href=
"../basedefs/sys_mman.h.html"><i>&lt;sys/mman.h&gt;</i></a>, interfaces marked as ADV (Advisory Information) in <a href=
"../basedefs/fcntl.h.html"><i>&lt;fcntl.h&gt;</i></a>, and interfaces beginning with the prefix clock_ and timer_ in <a href=
"../basedefs/time.h.html"><i>&lt;time.h&gt;</i></a>. An implementation may search this library in the absence of this option.</dd>

<dt><b>-l&nbsp;trace</b></dt>

<dd><sup>[<a href="javascript:open_code('OB')">OB</a>]</sup> <img src="../images/opt-start.gif" alt="[Option Start]" border="0">
This option shall make available all interfaces referenced in <a href="../basedefs/trace.h.html"><i>&lt;trace.h&gt;</i></a>. An
implementation may search this library in the absence of this option. <img src="../images/opt-end.gif" alt="[Option End]" border=
"0"></dd>

<dt><b>-l&nbsp;xnet</b></dt>

<dd>This option shall make available all interfaces referenced in <a href=
"../basedefs/arpa_inet.h.html"><i>&lt;arpa/inet.h&gt;</i></a>, <a href="../basedefs/netdb.h.html"><i>&lt;netdb.h&gt;</i></a>, <a
href="../basedefs/net_if.h.html"><i>&lt;net/if.h&gt;</i></a>, <a href=
"../basedefs/netinet_in.h.html"><i>&lt;netinet/in.h&gt;</i></a>, and <a href=
"../basedefs/sys_socket.h.html"><i>&lt;sys/socket.h&gt;</i></a>. An implementation may search this library in the absence of this
option.</dd>

<dt><b>-l&nbsp;y</b></dt>

<dd>This option shall make available all interfaces required by the C-language output of <a href=
"../utilities/yacc.html"><i>yacc</i></a> that are not made available through the <b>-l&nbsp;c</b> option.</dd>
</dl>

<p>In the absence of options that inhibit invocation of the link editor, such as <b>-c</b> or <b>-E</b>, the <i>c99</i> utility
shall cause the equivalent of a <b>-l&nbsp;c</b> option to be passed to the link editor after the last <i>pathname</i> operand or
<b>-l</b> option, causing it to be searched after all other object files and libraries are loaded.</p>

<p>It is unspecified whether the libraries <b>libc.a</b>, <b>libl.a</b>, <b>libm.a</b>, <b>libpthread.a</b>, <b>librt.a</b>,
<sup>[<a href="javascript:open_code('OB')">OB</a>]</sup> <img src="../images/opt-start.gif" alt="[Option Start]" border="0">
<b>libtrace.a</b>, <img src="../images/opt-end.gif" alt="[Option End]" border="0"> <b>libxnet.a</b>, or <b>liby.a</b> exist as
regular files. The implementation may accept as <b>-l</b> option-arguments names of objects that do not exist as regular files.</p>

<h5><a name="tag_20_11_13_02"></a>External Symbols</h5>

<p>The C compiler and link editor shall support the significance of external symbols up to a length of at least 31 bytes; the
action taken upon encountering symbols exceeding the implementation-defined maximum symbol length is unspecified.</p>

<p>The compiler and link editor shall support a minimum of 511 external symbols per source or object file, and a minimum of 4095
external symbols in total. A diagnostic message shall be written to the standard output if the implementation-defined limit is
exceeded; other actions are unspecified.</p>

<h5><a name="tag_20_11_13_03"></a>Header Search</h5>

<p>If a file with the same name as one of the standard headers defined in XBD <a href=
"../basedefs/V1_chap13.html#tag_13"><i>Headers</i></a>, not provided as part of the implementation, is placed in any of the usual
places that are searched by default for headers, the results are unspecified.</p>

<h5><a name="tag_20_11_13_04"></a>Programming Environments</h5>

<p>All implementations shall support one of the following programming environments as a default. Implementations may support more
than one of the following programming environments. Applications can use <a href="../functions/sysconf.html"><i>sysconf</i>()</a>
or <a href="../utilities/getconf.html"><i>getconf</i></a> to determine which programming environments are supported.<br>
</p>

<center><b><a name="tagtcjh_24"></a> Table: Programming Environments: Type Sizes</b></center>

<center>
<table border="1" cellpadding="3" align="center">
<tr valign="top">
<th align="center">
<p class="tent"><b>Programming Environment</b></p>
</th>
<th align="center">
<p class="tent"><b>Bits in</b></p>
</th>
<th align="center">
<p class="tent"><b>Bits in</b></p>
</th>
<th align="center">
<p class="tent"><b>Bits in</b></p>
</th>
<th align="center">
<p class="tent"><b>Bits in</b></p>
</th>
</tr>

<tr valign="top">
<th align="center">
<p class="tent"><b><i>getconf</i> Name</b></p>
</th>
<th align="center">
<p class="tent"><b>int</b></p>
</th>
<th align="center">
<p class="tent"><b>long</b></p>
</th>
<th align="center">
<p class="tent"><b>pointer</b></p>
</th>
<th align="center">
<p class="tent"><b>off_t</b></p>
</th>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">_POSIX_V7_ILP32_OFF32</p>
</td>
<td align="left">
<p class="tent">32</p>
</td>
<td align="left">
<p class="tent">32</p>
</td>
<td align="left">
<p class="tent">32</p>
</td>
<td align="left">
<p class="tent">32</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">_POSIX_V7_ILP32_OFFBIG</p>
</td>
<td align="left">
<p class="tent">32</p>
</td>
<td align="left">
<p class="tent">32</p>
</td>
<td align="left">
<p class="tent">32</p>
</td>
<td align="left">
<p class="tent">&gt;=64</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">_POSIX_V7_LP64_OFF64</p>
</td>
<td align="left">
<p class="tent">32</p>
</td>
<td align="left">
<p class="tent">64</p>
</td>
<td align="left">
<p class="tent">64</p>
</td>
<td align="left">
<p class="tent">64</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">_POSIX_V7_LPBIG_OFFBIG</p>
</td>
<td align="left">
<p class="tent">&gt;=32</p>
</td>
<td align="left">
<p class="tent">&gt;=64</p>
</td>
<td align="left">
<p class="tent">&gt;=64</p>
</td>
<td align="left">
<p class="tent">&gt;=64</p>
</td>
</tr>
</table>
</center>

<p>All implementations shall support one or more environments where the widths of the following types are no greater than the width
of type <b>long</b>:</p>

<center>
<table cellpadding="3" align="center">
<tr valign="top">
<td align="left">
<p class="tent"><b><br>
blksize_t<br>
 cc_t<br>
 mode_t<br>
 nfds_t<br>
 pid_t<br>
</b></p>
</td>
<td align="left">
<p class="tent"><b><br>
ptrdiff_t<br>
 size_t<br>
 speed_t<br>
 ssize_t<br>
 suseconds_t<br>
</b></p>
</td>
<td align="left">
<p class="tent"><b><br>
tcflag_t<br>
 wchar_t<br>
 wint_t<br>
</b></p>
</td>
</tr>
</table>
</center>

<p>The executable files created when these environments are selected shall be in a proper format for execution by the <i>exec</i>
family of functions. Each environment may be one of the ones in <a href="#tagtcjh_24">Programming Environments: Type Sizes</a>, or
it may be another environment. The names for the environments that meet this requirement shall be output by a <a href=
"../utilities/getconf.html"><i>getconf</i></a> command using the POSIX_V7_WIDTH_RESTRICTED_ENVS argument, as a
&lt;newline&gt;-separated list of names suitable for use with the <a href="../utilities/getconf.html"><i>getconf</i></a> <b>-v</b>
option. If more than one environment meets the requirement, the names of all such environments shall be output on separate lines.
Any of these names can then be used in a subsequent <a href="../utilities/getconf.html"><i>getconf</i></a> command to obtain the
flags specific to that environment with the following suffixes added as appropriate:</p>

<dl compact>
<dt>_CFLAGS</dt>

<dd>To get the C compiler flags.</dd>

<dt>_LDFLAGS</dt>

<dd>To get the linker/loader flags.</dd>

<dt>_LIBS</dt>

<dd>To get the libraries.</dd>
</dl>

<p>This requirement may be removed in a future version.</p>

<p>When this utility processes a file containing a function called <i>main</i>(), it shall be defined with a return type equivalent
to <b>int</b>. Using return from the initial call to <i>main</i>() shall be equivalent (other than with respect to language scope
issues) to calling <a href="../functions/exit.html"><i>exit</i>()</a> with the returned value. Reaching the end of the initial call
to <i>main</i>() shall be equivalent to calling <i>exit</i>(0). The implementation shall not declare a prototype for this
function.</p>

<p>Implementations provide configuration strings for C compiler flags, linker/loader flags, and libraries for each supported
environment. When an application needs to use a specific programming environment rather than the implementation default programming
environment while compiling, the application shall first verify that the implementation supports the desired environment. If the
desired programming environment is supported, the application shall then invoke <i>c99</i> with the appropriate C compiler flags as
the first options for the compile, the appropriate linker/loader flags after any other options except <b>-l</b> but before any
operands or <b>-l</b> options, and the appropriate libraries at the end of the operands and <b>-l</b> options.</p>

<p>Conforming applications shall not attempt to link together object files compiled for different programming models. Applications
shall also be aware that binary data placed in shared memory or in files might not be recognized by applications built for other
programming models.<br>
</p>

<center><b>Table: Programming Environments: <i>c99</i> Arguments</b></center>

<center>
<table border="1" cellpadding="3" align="center">
<tr valign="top">
<th align="center">
<p class="tent"><b>Programming Environment</b></p>
</th>
<th align="center">
<p class="tent"><b>&nbsp;</b></p>
</th>
<th align="center">
<p class="tent"><b><i>c99</i> Arguments</b></p>
</th>
</tr>

<tr valign="top">
<th align="center">
<p class="tent"><b><i>getconf</i> Name</b></p>
</th>
<th align="center">
<p class="tent"><b>Use</b></p>
</th>
<th align="center">
<p class="tent"><b><i>getconf</i> Name</b></p>
</th>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">_POSIX_V7_ILP32_OFF32</p>
</td>
<td align="left">
<p class="tent">C Compiler Flags</p>
</td>
<td align="left">
<p class="tent">POSIX_V7_ILP32_OFF32_CFLAGS</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">&nbsp;</p>
</td>
<td align="left">
<p class="tent">Linker/Loader Flags</p>
</td>
<td align="left">
<p class="tent">POSIX_V7_ILP32_OFF32_LDFLAGS</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">&nbsp;</p>
</td>
<td align="left">
<p class="tent">Libraries</p>
</td>
<td align="left">
<p class="tent">POSIX_V7_ILP32_OFF32_LIBS</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">_POSIX_V7_ILP32_OFFBIG</p>
</td>
<td align="left">
<p class="tent">C Compiler Flags</p>
</td>
<td align="left">
<p class="tent">POSIX_V7_ILP32_OFFBIG_CFLAGS</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">&nbsp;</p>
</td>
<td align="left">
<p class="tent">Linker/Loader Flags</p>
</td>
<td align="left">
<p class="tent">POSIX_V7_ILP32_OFFBIG_LDFLAGS</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">&nbsp;</p>
</td>
<td align="left">
<p class="tent">Libraries</p>
</td>
<td align="left">
<p class="tent">POSIX_V7_ILP32_OFFBIG_LIBS</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">_POSIX_V7_LP64_OFF64</p>
</td>
<td align="left">
<p class="tent">C Compiler Flags</p>
</td>
<td align="left">
<p class="tent">POSIX_V7_LP64_OFF64_CFLAGS</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">&nbsp;</p>
</td>
<td align="left">
<p class="tent">Linker/Loader Flags</p>
</td>
<td align="left">
<p class="tent">POSIX_V7_LP64_OFF64_LDFLAGS</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">&nbsp;</p>
</td>
<td align="left">
<p class="tent">Libraries</p>
</td>
<td align="left">
<p class="tent">POSIX_V7_LP64_OFF64_LIBS</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">_POSIX_V7_LPBIG_OFFBIG</p>
</td>
<td align="left">
<p class="tent">C Compiler Flags</p>
</td>
<td align="left">
<p class="tent">POSIX_V7_LPBIG_OFFBIG_CFLAGS</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">&nbsp;</p>
</td>
<td align="left">
<p class="tent">Linker/Loader Flags</p>
</td>
<td align="left">
<p class="tent">POSIX_V7_LPBIG_OFFBIG_LDFLAGS</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">&nbsp;</p>
</td>
<td align="left">
<p class="tent">Libraries</p>
</td>
<td align="left">
<p class="tent">POSIX_V7_LPBIG_OFFBIG_LIBS</p>
</td>
</tr>
</table>
</center>

<p>In addition to the type size programming environments above, all implementations also support a multi-threaded programming
environment that is orthogonal to all of the programming environments listed above. The <a href=
"../utilities/getconf.html"><i>getconf</i></a> utility can be used to get flags for the threaded programming environment, as
indicated in <a href="#tagtcjh_24">Programming Environments: Type Sizes</a>.</p>

<center><b>Table: Threaded Programming Environment: <i>c99</i> Arguments</b></center>

<center>
<table border="1" cellpadding="3" align="center">
<tr valign="top">
<th align="center">
<p class="tent"><b>Programming Environment</b></p>
</th>
<th align="center">
<p class="tent"><b>&nbsp;</b></p>
</th>
<th align="center">
<p class="tent"><b><i>c99</i> Arguments</b></p>
</th>
</tr>

<tr valign="top">
<th align="center">
<p class="tent"><b><i>getconf</i> Name</b></p>
</th>
<th align="center">
<p class="tent"><b>Use</b></p>
</th>
<th align="center">
<p class="tent"><b><i>getconf</i> Name</b></p>
</th>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">_POSIX_THREADS</p>
</td>
<td align="left">
<p class="tent">C Compiler Flags</p>
</td>
<td align="left">
<p class="tent">POSIX_V7_THREADS_CFLAGS</p>
</td>
</tr>

<tr valign="top">
<td align="left">
<p class="tent">&nbsp;</p>
</td>
<td align="left">
<p class="tent">Linker/Loader Flags</p>
</td>
<td align="left">
<p class="tent">POSIX_V7_THREADS_LDFLAGS</p>
</td>
</tr>
</table>
</center>

<p>These programming environment flags may be used in conjunction with any of the type size programming environments supported by
the implementation.</p>
</blockquote>

<h4 class="mansect"><a name="tag_20_11_14"></a>EXIT STATUS</h4>

<blockquote>
<p>The following exit values shall be returned:</p>

<dl compact>
<dt>&nbsp;0</dt>

<dd>Successful compilation or link edit.</dd>

<dt>&gt;0</dt>

<dd>An error occurred.</dd>
</dl>
</blockquote>

<h4 class="mansect"><a name="tag_20_11_15"></a>CONSEQUENCES OF ERRORS</h4>

<blockquote>
<p>When <i>c99</i> encounters a compilation error that causes an object file not to be created, it shall write a diagnostic to
standard error and continue to compile other source code operands, but it shall not perform the link phase and it shall return a
non-zero exit status. If the link edit is unsuccessful, a diagnostic message shall be written to standard error and <i>c99</i>
exits with a non-zero status. A conforming application shall rely on the exit status of <i>c99</i>, rather than on the existence or
mode of the executable file.</p>
</blockquote>

<hr>
<div class="box"><em>The following sections are informative.</em></div>

<h4 class="mansect"><a name="tag_20_11_16"></a>APPLICATION USAGE</h4>

<blockquote>
<p>Since the <i>c99</i> utility usually creates files in the current directory during the compilation process, it is typically
necessary to run the <i>c99</i> utility in a directory in which a file can be created.</p>

<p>On systems providing POSIX Conformance (see XBD <a href="../basedefs/V1_chap02.html#tag_02"><i>Conformance</i></a>), <i>c99</i>
is required only with the C-Language Development option; XSI-conformant systems always provide <i>c99</i>.</p>

<p>Some historical implementations have created <b>.o</b> files when <b>-c</b> is not specified and more than one source file is
given. Since this area is left unspecified, the application cannot rely on <b>.o</b> files being created, but it also must be
prepared for any related <b>.o</b> files that already exist being deleted at the completion of the link edit.</p>

<p>There is the possible implication that if a user supplies versions of the standard functions (before they would be encountered
by an implicit <b>-l&nbsp;c</b> or explicit <b>-l&nbsp;m</b>), that those versions would be used in place of the standard versions.
There are various reasons this might not be true (functions defined as macros, manipulations for clean name space, and so on), so
the existence of files named in the same manner as the standard libraries within the <b>-L</b> directories is explicitly stated to
produce unspecified behavior.</p>

<p>All of the functions specified in the System Interfaces volume of POSIX.1-2017 may be made visible by implementations when the
Standard C Library is searched. Conforming applications must explicitly request searching the other standard libraries when
functions made visible by those libraries are used.</p>

<p>In the ISO&nbsp;C standard the mapping from physical source characters to the C source character set is implementation-defined.
Implementations may strip white-space characters before the terminating &lt;newline&gt; of a (physical) line as part of this
mapping and, as a consequence of this, one or more white-space characters (and no other characters) between a &lt;backslash&gt;
character and the &lt;newline&gt; character that terminates the line produces implementation-defined results. Portable applications
should not use such constructs.</p>

<p>Some <i>c99</i> compilers not conforming to POSIX.1-2017 do not support trigraphs by default.</p>
</blockquote>

<h4 class="mansect"><a name="tag_20_11_17"></a>EXAMPLES</h4>

<blockquote>
<ol>
<li>
<p>The following usage example compiles <b>foo.c</b> and creates the executable file <b>foo</b>:</p>

<pre>
<tt>c99 -o foo foo.c
</tt>
</pre>

<p>The following usage example compiles <b>foo.c</b> and creates the object file <b>foo.o</b>:</p>

<pre>
<tt>c99 -c foo.c
</tt>
</pre>

<p>The following usage example compiles <b>foo.c</b> and creates the executable file <b>a.out</b>:</p>

<pre>
<tt>c99 foo.c
</tt>
</pre>

<p>The following usage example compiles <b>foo.c</b>, links it with <b>bar.o</b>, and creates the executable file <b>a.out</b>. It
may also create and leave <b>foo.o</b>:</p>

<pre>
<tt>c99 foo.c bar.o
</tt>
</pre>
</li>

<li>
<p>The following example shows how an application using threads interfaces can test for support of and use a programming
environment supporting 32-bit <b>int</b>, <b>long</b>, and <b>pointer</b> types and an <b>off_t</b> type using at least 64
bits:</p>

<pre>
<tt>offbig_env=$(getconf _POSIX_V7_ILP32_OFFBIG)
if [ $offbig_env != "-1" ] &amp;&amp; [ $offbig_env != "undefined" ]
then
    c99 $(getconf POSIX_V7_ILP32_OFFBIG_CFLAGS) \
    $(getconf POSIX_V7_THREADS_CFLAGS) -D_XOPEN_SOURCE=700 \
    $(getconf POSIX_V7_ILP32_OFFBIG_LDFLAGS) \
    $(getconf POSIX_V7_THREADS_LDFLAGS) foo.c -o foo \
    $(getconf POSIX_V7_ILP32_OFFBIG_LIBS) \
    -l pthread
else
    echo ILP32_OFFBIG programming environment not supported
    exit 1
fi
</tt>
</pre>
</li>

<li>
<p>The following examples clarify the use and interactions of <b>-L</b> and <b>-l</b> options.</p>

<p>Consider the case in which module <b>a.c</b> calls function <i>f</i>() in library <b>libQ.a</b>, and module <b>b.c</b> calls
function <i>g</i>() in library <b>libp.a</b>. Assume that both libraries reside in <b>/a/b/c</b>. The command line to compile and
link in the desired way is:</p>

<pre>
<tt>c99 -L /a/b/c main.o a.c -l Q b.c -l p
</tt>
</pre>

<p>In this case the <b>-L</b> option need only precede the first <b>-l</b> option, since both <b>libQ.a</b> and <b>libp.a</b>
reside in the same directory.</p>

<p>Multiple <b>-L</b> options can be used when library name collisions occur. Building on the previous example, suppose that the
user wants to use a new <b>libp.a</b>, in <b>/a/a/a</b>, but still wants <i>f</i>() from <b>/a/b/c/libQ.a</b>:</p>

<pre>
<tt>c99 -L /a/a/a -L /a/b/c main.o a.c -l Q b.c -l p
</tt>
</pre>

<p>In this example, the linker searches the <b>-L</b> options in the order specified, and finds <b>/a/a/a/libp.a</b> before
<b>/a/b/c/libp.a</b> when resolving references for <b>b.c</b>. The order of the <b>-l</b> options is still important, however.</p>
</li>

<li>
<p>The following example shows how an application can use a programming environment where the widths of the following types:
<b>blksize_t</b>, <b>cc_t</b>, <b>mode_t</b>, <b>nfds_t</b>, <b>pid_t</b>, <b>ptrdiff_t</b>, <b>size_t</b>, <b>speed_t</b>,
<b>ssize_t</b>, <b>suseconds_t</b>, <b>tcflag_t</b>, <b>wchar_t</b>, <b>wint_t</b></p>

<p>are no greater than the width of type <b>long</b>:</p>

<pre>
<tt># First choose one of the listed environments ...
<br>
# ... if there are no additional constraints, the first one will do:
CENV=$(getconf POSIX_V7_WIDTH_RESTRICTED_ENVS | head -n l)
<br>
# ... or, if an environment that supports large files is preferred,
# look for names that contain "OFF64" or "OFFBIG". (This chooses
# the last one in the list if none match.)
for CENV in $(getconf POSIX_V7_WIDTH_RESTRICTED_ENVS)
do
    case $CENV in
    *OFF64*|*OFFBIG*) break ;;
    esac
done
<br>
# The chosen environment name can now be used like this:
<br>
c99 $(getconf ${CENV}_CFLAGS) -D _POSIX_C_SOURCE=200809L \
$(getconf ${CENV}_LDFLAGS) foo.c -o foo \
$(getconf ${CENV}_LIBS)
</tt>
</pre>
</li>
</ol>
</blockquote>

<h4 class="mansect"><a name="tag_20_11_18"></a>RATIONALE</h4>

<blockquote>
<p>The <i>c99</i> utility is based on the <i>c89</i> utility originally introduced in the ISO&nbsp;POSIX-2:1993 standard.</p>

<p>Some of the changes from <i>c89</i> include the ability to intersperse options and operands (which many <i>c89</i>
implementations allowed despite it not being specified), the description of <b>-l</b> as an option instead of an operand, and the
modification to the contents of the Standard Libraries section to account for new headers and options; for example, <a href=
"../basedefs/spawn.h.html"><i>&lt;spawn.h&gt;</i></a> added to the description of <b>-l&nbsp;rt</b>, and <b>-l&nbsp;trace</b> added
for the Tracing option.</p>

<p>POSIX.1-2017 specifies that the <i>c99</i> utility must be able to use regular files for <b>*.o</b> files and for <b>a.out</b>
files. Implementations are free to overwrite existing files of other types when attempting to create object files and executable
files, but are not required to do so. If something other than a regular file is specified and using it fails for any reason,
<i>c99</i> is required to issue a diagnostic message and exit with a non-zero exit status. But for some file types, the problem may
not be noticed for a long time. For example, if a FIFO named <b>a.out</b> exists in the current directory, <i>c99</i> may attempt
to open <b>a.out</b> and will hang in the <a href="../functions/open.html"><i>open</i>()</a> call until another process opens the
FIFO for reading. Then <i>c99</i> may write most of the <b>a.out</b> to the FIFO and fail when it tries to seek back close to the
start of the file to insert a timestamp (FIFOs are not seekable files). The <i>c99</i> utility is also allowed to issue a
diagnostic immediately if it encounters an <b>a.out</b> or <b>*.o</b> file that is not a regular file. For portable use,
applications should ensure that any <b>a.out</b>, <b>-o</b> option-argument, or <b>*.o</b> files corresponding to any <b>*.c</b>
files do not conflict with names already in use that are not regular files or symbolic links that point to regular files.</p>

<p>On many systems, multi-threaded applications run in a programming environment that is distinct from that used by single-threaded
applications. This multi-threaded programming environment (in addition to needing to specify <b>-l pthread</b> at link time) may
require additional flags to be set when headers are processed at compile time (<b>-D_REENTRANT</b> being common). This programming
environment is orthogonal to the type size programming environments discussed above and listed in <a href="#tagtcjh_24">Programming
Environments: Type Sizes</a>. This version of the standard adds <a href="../utilities/getconf.html"><i>getconf</i></a> utility
calls to provide the C compiler flags and linker/loader flags needed to support multi-threaded applications. Note that on a system
where single-threaded applications are a special case of a multi-threaded application, both of these <a href=
"../utilities/getconf.html"><i>getconf</i></a> calls may return NULL strings; on other implementations both of these strings may be
non-NULL strings.</p>

<p>The C standardization committee invented trigraphs (e.g., <tt>"??!"</tt> to represent <tt>'|'</tt> ) to address character
portability problems in development environments based on national variants of the 7-bit ISO/IEC&nbsp;646:1991 standard character
set. However, these environments were already obsolete by the time the first ISO&nbsp;C standard was published, and in practice
trigraphs have not been used for their intended purpose, and usually are intended to have their original meaning in K&amp;R C. For
example, in practice a C-language source string like <tt>"What??!"</tt> is usually intended to end in two &lt;question-mark&gt;
characters and an &lt;exclamation-mark&gt;, not in <tt>'|'</tt>.</p>

<p>When the <b>-E</b> option is used, execution of some <b>#pragma</b> preprocessor directives may simply result in a copy of the
directive being included in the output as part of the allowed extra information used by subsequent compilation passes (see
STDOUT).</p>
</blockquote>

<h4 class="mansect"><a name="tag_20_11_19"></a>FUTURE DIRECTIONS</h4>

<blockquote>
<p>Unlike all of the other non-OB-shaded utilities in this standard, a utility by this name probably will not appear in the next
version of this standard. This utility's name is tied to the current revision of the ISO&nbsp;C standard at the time this standard
is approved. Since the ISO&nbsp;C standard and this standard are maintained by different organizations on different schedules, we
cannot predict what the compiler will be named in the next version of the standard.</p>
</blockquote>

<h4 class="mansect"><a name="tag_20_11_20"></a>SEE ALSO</h4>

<blockquote>
<p><a href="../utilities/V3_chap01.html#tag_17_01_01_04"><i>File Read, Write, and Creation</i></a>, <a href=
"../utilities/ar.html#"><i>ar</i></a>, <a href="../utilities/getconf.html#"><i>getconf</i></a>, <a href=
"../utilities/make.html#"><i>make</i></a>, <a href="../utilities/nm.html#"><i>nm</i></a>, <a href=
"../utilities/strip.html#"><i>strip</i></a>, <a href="../utilities/umask.html#tag_20_138"><i>umask</i></a></p>

<p>XBD <a href="../basedefs/V1_chap08.html#tag_08"><i>Environment Variables</i></a>, <a href=
"../basedefs/V1_chap12.html#tag_12_02"><i>Utility Syntax Guidelines</i></a>, <a href=
"../basedefs/V1_chap13.html#tag_13"><i>Headers</i></a></p>

<p>XSH <a href="../functions/exec.html#tag_16_111"><i>exec</i></a>, <a href="../functions/sysconf.html#"><i>sysconf</i></a></p>
</blockquote>

<h4 class="mansect"><a name="tag_20_11_21"></a>CHANGE HISTORY</h4>

<blockquote>
<p>First released in Issue 6. Included for alignment with the ISO/IEC&nbsp;9899:1999 standard.</p>

<p>IEEE&nbsp;Std&nbsp;1003.1-2001/Cor&nbsp;1-2002, item XCU/TC1/D6/12 is applied, correcting the EXTENDED DESCRIPTION of
<b>-l&nbsp;c</b> and <b>-l&nbsp;m</b>. Previously, the text did not take into account the presence of the <i>c99</i> math
headers.</p>

<p>IEEE&nbsp;Std&nbsp;1003.1-2001/Cor&nbsp;1-2002, item XCU/TC1/D6/13 is applied, changing the reference to the <b>libxnet</b>
library to <b>libxnet.a</b>.</p>

<p>IEEE&nbsp;Std&nbsp;1003.1-2001/Cor&nbsp;2-2004, item XCU/TC2/D6/5 is applied, updating the OPTIONS section, so that the names of
files contained in the directory specified by the <b>-L</b> option are not assumed to end in the <b>.a</b> suffix. The set of
library prefixes is also updated.</p>

<p>IEEE&nbsp;Std&nbsp;1003.1-2001/Cor&nbsp;2-2004, item XCU/TC2/D6/6 is applied, removing the lead underscore from the
POSIX_V6_WIDTH_RESTRICTED_ENVS variable in the EXTENDED DESCRIPTION and the EXAMPLES sections.</p>
</blockquote>

<h4 class="mansect"><a name="tag_20_11_22"></a>Issue 7</h4>

<blockquote>
<p>Austin Group Interpretation 1003.1-2001 #020 (SD5-XCU-ERN-10) is applied, adding to the OUTPUT FILES section and also adding
associated RATIONALE.</p>

<p>Austin Group Interpretation 1003.1-2001 #095 is applied, clarifying the <b>-l</b> <i>library</i> operand.</p>

<p>Austin Group Interpretation 1003.1-2001 #166 is applied.</p>

<p>Austin Group Interpretation 1003.1-2001 #190 is applied, clarifying the handling of trailing white-space characters.</p>

<p>Austin Group Interpretation 1003.1-2001 #191 is applied, adding APPLICATION USAGE and RATIONALE regarding C-language
trigraphs.</p>

<p>SD5-XCU-ERN-6 is applied, clarifying that Guideline 9 of the Utility Syntax Guidelines does not apply (options can be
interspersed with operands).</p>

<p>SD5-XCU-ERN-11 is applied, adding the <a href="../basedefs/net_if.h.html"><i>&lt;net/if.h&gt;</i></a> header to the descriptions
of <b>-l&nbsp;c</b> and <b>-l&nbsp;xnet</b>.</p>

<p>SD5-XCU-ERN-65 is applied, updating the EXAMPLES section.</p>

<p>SD5-XCU-ERN-67 and SD5-XCU-ERN-97 are applied, updating the SYNOPSIS.</p>

<p>SD5-XCU-ERN-133 is applied, updating the EXTENDED DESCRIPTION.</p>

<p>The <a href="../utilities/getconf.html"><i>getconf</i></a> variables for the supported programming environments are updated to
be V7.</p>

<p>The <b>-l&nbsp;trace</b> operand is marked obsolescent.</p>

<p>The <i>c99</i> reference page is rewritten to describe <b>-l</b> as an option rather than an operand.</p>

<p>POSIX.1-2008, Technical Corrigendum 1, XCU/TC1-2008/0068 [129], XCU/TC1-2008/0069 [187], XCU/TC1-2008/0070 [187],
XCU/TC1-2008/0071 [131], XCU/TC1-2008/0072 [187], and XCU/TC1-2008/0073 [364,430] are applied.</p>

<p>POSIX.1-2008, Technical Corrigendum 2, XCU/TC2-2008/0068 [650], XCU/TC2-2008/0069 [670], XCU/TC2-2008/0070 [638],
XCU/TC2-2008/0071 [650], and XCU/TC2-2008/0072 [784] are applied.</p>
</blockquote>

<div class="box"><em>End of informative text.</em></div>

<hr>
<p>&nbsp;</p>

<a href="#top"><span class="topOfPage">return to top of page</span></a><br>
<hr size="2" noshade>
<center><font size="2">UNIX &reg; is a registered Trademark of The Open Group.<br>
POSIX &reg; is a registered Trademark of The IEEE.<br>
Copyright &copy; 2001-2018 IEEE and The Open Group, All Rights Reserved<br>
[ <a href="../mindex.html">Main Index</a> | <a href="../basedefs/contents.html">XBD</a> | <a href=
"../functions/contents.html">XSH</a> | <a href="../utilities/contents.html">XCU</a> | <a href="../xrat/contents.html">XRAT</a>
]</font></center>

<hr size="2" noshade>
<div class="NAVHEADER">
<table summary="Header navigation table" class="nav" width="100%" border="0" cellpadding="0" cellspacing="0">
<tr class="nav">
<td class="nav" width="15%" align="left" valign="bottom"><a href="../utilities/bg.html" accesskey="P">&lt;&lt;&lt; Previous</a></td>
<td class="nav" width="70%" align="center" valign="bottom"><a href="contents.html">Home</a></td>
<td class="nav" width="15%" align="right" valign="bottom"><a href="../utilities/cal.html" accesskey="N">Next &gt;&gt;&gt;</a></td>
</tr>
</table>

<hr align="LEFT" width="100%">
</div>
</body>
</html>

