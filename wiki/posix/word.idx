@f /functions/FD_CLR.html 
@t FD_CLR - macros for synchronous I/O multiplexing  
=FD_CLR - macros for synchronous I/O multiplexing 
@f /functions/_Exit.html 
@t _Exit, _exit - terminate a process  
=_Exit, _exit - terminate a process 
@f /functions/_longjmp.html 
@t _longjmp, _setjmp - non-local goto  
=_longjmp, _setjmp - non-local goto 
@f /functions/_tolower.html 
@t _tolower - transliterate uppercase characters to lowercase  
=_tolower - transliterate uppercase characters to lowercase 
@f /functions/_toupper.html 
@t _toupper - transliterate lowercase characters to uppercase  
=_toupper - transliterate lowercase characters to uppercase 
@f /functions/a64l.html 
@t a64l, l64a - convert between a 32-bit integer and a radix-64 ASCII string  
=a64l, l64a - convert between a 32-bit integer and a radix-64 ASCII string 
@f /functions/abort.html 
@t abort - generate an abnormal process abort  
=abort - generate an abnormal process abort 
@f /functions/abs.html 
@t abs - return an integer absolute value  
=abs - return an integer absolute value 
@f /functions/accept.html 
@t accept - accept a new connection on a socket  
=accept - accept a new connection on a socket 
@f /functions/access.html 
@t access, faccessat - determine accessibility of a file relative to directory file descriptor  
=access, faccessat - determine accessibility of a file relative to directory file descriptor 
@f /functions/acos.html 
@t acos, acosf, acosl - arc cosine functions  
=acos, acosf, acosl - arc cosine functions 
@f /functions/acosh.html 
@t acosh, acoshf, acoshl - inverse hyperbolic cosine functions  
=acosh, acoshf, acoshl - inverse hyperbolic cosine functions 
@f /functions/acosl.html 
@t acosl - arc cosine functions  
=acosl - arc cosine functions 
@f /functions/aio_cancel.html 
@t aio_cancel - cancel an asynchronous I/O request  
=aio_cancel - cancel an asynchronous I/O request 
@f /functions/aio_error.html 
@t aio_error - retrieve errors status for an asynchronous I/O operation  
=aio_error - retrieve errors status for an asynchronous I/O operation 
@f /functions/aio_fsync.html 
@t aio_fsync - asynchronous file synchronization  
=aio_fsync - asynchronous file synchronization 
@f /functions/aio_read.html 
@t aio_read - asynchronous read from a file  
=aio_read - asynchronous read from a file 
@f /functions/aio_return.html 
@t aio_return - retrieve return status of an asynchronous I/O operation  
=aio_return - retrieve return status of an asynchronous I/O operation 
@f /functions/aio_suspend.html 
@t aio_suspend - wait for an asynchronous I/O request  
=aio_suspend - wait for an asynchronous I/O request 
@f /functions/aio_write.html 
@t aio_write - asynchronous write to a file  
=aio_write - asynchronous write to a file 
@f /functions/alarm.html 
@t alarm - schedule an alarm signal  
=alarm - schedule an alarm signal 
@f /functions/alphasort.html 
@t alphasort, scandir - scan a directory  
=alphasort, scandir - scan a directory 
@f /functions/asctime.html 
@t asctime, asctime_r - convert date and time to a string  
=asctime, asctime_r - convert date and time to a string 
@f /functions/asin.html 
@t asin, asinf, asinl - arc sine function  
=asin, asinf, asinl - arc sine function 
@f /functions/asinh.html 
@t asinh, asinhf, asinhl - inverse hyperbolic sine functions  
=asinh, asinhf, asinhl - inverse hyperbolic sine functions 
@f /functions/asinl.html 
@t asinl - arc sine function  
=asinl - arc sine function 
@f /functions/assert.html 
@t assert - insert program diagnostics  
=assert - insert program diagnostics 
@f /functions/atan.html 
@t atan, atanf, atanl - arc tangent function  
=atan, atanf, atanl - arc tangent function 
@f /functions/atan2.html 
@t atan2, atan2f, atan2l - arc tangent functions  
=atan2, atan2f, atan2l - arc tangent functions 
@f /functions/atanf.html 
@t atanf - arc tangent function  
=atanf - arc tangent function 
@f /functions/atanh.html 
@t atanh, atanhf, atanhl - inverse hyperbolic tangent functions  
=atanh, atanhf, atanhl - inverse hyperbolic tangent functions 
@f /functions/atanl.html 
@t atanl - arc tangent function  
=atanl - arc tangent function 
@f /functions/atexit.html 
@t atexit - register a function to run at process termination  
=atexit - register a function to run at process termination 
@f /functions/atof.html 
@t atof - convert a string to a double-precision number  
=atof - convert a string to a double-precision number 
@f /functions/atoi.html 
@t atoi - convert a string to an integer  
=atoi - convert a string to an integer 
@f /functions/atol.html 
@t atol, atoll - convert a string to a long integer  
=atol, atoll - convert a string to a long integer 
@f /functions/basename.html 
@t basename - return the last component of a pathname  
=basename - return the last component of a pathname 
@f /functions/bind.html 
@t bind - bind a name to a socket  
=bind - bind a name to a socket 
@f /functions/bsearch.html 
@t bsearch - binary search a sorted table  
=bsearch - binary search a sorted table 
@f /functions/btowc.html 
@t btowc - single byte to wide character conversion  
=btowc - single byte to wide character conversion 
@f /functions/cabs.html 
@t cabs, cabsf, cabsl - return a complex absolute value  
=cabs, cabsf, cabsl - return a complex absolute value 
@f /functions/cacos.html 
@t cacos, cacosf, cacosl - complex arc cosine functions  
=cacos, cacosf, cacosl - complex arc cosine functions 
@f /functions/cacosh.html 
@t cacosh, cacoshf, cacoshl - complex arc hyperbolic cosine functions  
=cacosh, cacoshf, cacoshl - complex arc hyperbolic cosine functions 
@f /functions/cacosl.html 
@t cacosl - complex arc cosine functions  
=cacosl - complex arc cosine functions 
@f /functions/calloc.html 
@t calloc - a memory allocator  
=calloc - a memory allocator 
@f /functions/carg.html 
@t carg, cargf, cargl - complex argument functions  
=carg, cargf, cargl - complex argument functions 
@f /functions/casin.html 
@t casin, casinf, casinl - complex arc sine functions  
=casin, casinf, casinl - complex arc sine functions 
@f /functions/casinh.html 
@t casinh, casinhf, casinhl - complex arc hyperbolic sine functions  
=casinh, casinhf, casinhl - complex arc hyperbolic sine functions 
@f /functions/casinl.html 
@t casinl - complex arc sine functions  
=casinl - complex arc sine functions 
@f /functions/catan.html 
@t catan, catanf, catanl - complex arc tangent functions  
=catan, catanf, catanl - complex arc tangent functions 
@f /functions/catanh.html 
@t catanh, catanhf, catanhl - complex arc hyperbolic tangent functions  
=catanh, catanhf, catanhl - complex arc hyperbolic tangent functions 
@f /functions/catanl.html 
@t catanl - complex arc tangent functions  
=catanl - complex arc tangent functions 
@f /functions/catclose.html 
@t catclose - close a message catalog descriptor  
=catclose - close a message catalog descriptor 
@f /functions/catgets.html 
@t catgets - read a program message  
=catgets - read a program message 
@f /functions/catopen.html 
@t catopen - open a message catalog  
=catopen - open a message catalog 
@f /functions/cbrt.html 
@t cbrt, cbrtf, cbrtl - cube root functions  
=cbrt, cbrtf, cbrtl - cube root functions 
@f /functions/ccos.html 
@t ccos, ccosf, ccosl - complex cosine functions  
=ccos, ccosf, ccosl - complex cosine functions 
@f /functions/ccosh.html 
@t ccosh, ccoshf, ccoshl - complex hyperbolic cosine functions  
=ccosh, ccoshf, ccoshl - complex hyperbolic cosine functions 
@f /functions/ccosl.html 
@t ccosl - complex cosine functions  
=ccosl - complex cosine functions 
@f /functions/ceil.html 
@t ceil, ceilf, ceill - ceiling value function  
=ceil, ceilf, ceill - ceiling value function 
@f /functions/cexp.html 
@t cexp, cexpf, cexpl - complex exponential functions  
=cexp, cexpf, cexpl - complex exponential functions 
@f /functions/cfgetispeed.html 
@t cfgetispeed - get input baud rate  
=cfgetispeed - get input baud rate 
@f /functions/cfgetospeed.html 
@t cfgetospeed - get output baud rate  
=cfgetospeed - get output baud rate 
@f /functions/cfsetispeed.html 
@t cfsetispeed - set input baud rate  
=cfsetispeed - set input baud rate 
@f /functions/cfsetospeed.html 
@t cfsetospeed - set output baud rate  
=cfsetospeed - set output baud rate 
@f /functions/chdir.html 
@t chdir - change working directory  
=chdir - change working directory 
@f /functions/chmod.html 
@t chmod, fchmodat - change mode of a file relative to directory file descriptor  
=chmod, fchmodat - change mode of a file relative to directory file descriptor 
@f /functions/chown.html 
@t chown, fchownat - change owner and group of a file relative to directory file descriptor  
=chown, fchownat - change owner and group of a file relative to directory file descriptor 
@f /functions/cimag.html 
@t cimag, cimagf, cimagl - complex imaginary functions  
=cimag, cimagf, cimagl - complex imaginary functions 
@f /functions/clearerr.html 
@t clearerr - clear indicators on a stream  
=clearerr - clear indicators on a stream 
@f /functions/clock.html 
@t clock - report CPU time used  
=clock - report CPU time used 
@f /functions/clock_getcpuclockid.html 
@t clock_getcpuclockid - access a process CPU-time clock (ADVANCED REALTIME)  
=clock_getcpuclockid - access a process CPU-time clock (ADVANCED REALTIME) 
@f /functions/clock_getres.html 
@t clock_getres, clock_gettime, clock_settime - clock and timer functions  
=clock_getres, clock_gettime, clock_settime - clock and timer functions 
@f /functions/clock_nanosleep.html 
@t clock_nanosleep - high resolution sleep with specifiable clock  
=clock_nanosleep - high resolution sleep with specifiable clock 
@f /functions/clock_settime.html 
@t clock_settime - clock and timer functions  
=clock_settime - clock and timer functions 
@f /functions/clog.html 
@t clog, clogf, clogl - complex natural logarithm functions  
=clog, clogf, clogl - complex natural logarithm functions 
@f /functions/close.html 
@t close - close a file descriptor  
=close - close a file descriptor 
@f /functions/closedir.html 
@t closedir - close a directory stream  
=closedir - close a directory stream 
@f /functions/closelog.html 
@t closelog, openlog, setlogmask, syslog - control system log  
=closelog, openlog, setlogmask, syslog - control system log 
@f /functions/confstr.html 
@t confstr - get configurable variables  
=confstr - get configurable variables 
@f /functions/conj.html 
@t conj, conjf, conjl - complex conjugate functions  
=conj, conjf, conjl - complex conjugate functions 
@f /functions/connect.html 
@t connect - connect a socket  
=connect - connect a socket 
@f /functions/copysign.html 
@t copysign, copysignf, copysignl - number manipulation function  
=copysign, copysignf, copysignl - number manipulation function 
@f /functions/cos.html 
@t cos, cosf, cosl - cosine function  
=cos, cosf, cosl - cosine function 
@f /functions/cosh.html 
@t cosh, coshf, coshl - hyperbolic cosine functions  
=cosh, coshf, coshl - hyperbolic cosine functions 
@f /functions/cosl.html 
@t cosl - cosine function  
=cosl - cosine function 
@f /functions/cpow.html 
@t cpow, cpowf, cpowl - complex power functions  
=cpow, cpowf, cpowl - complex power functions 
@f /functions/cproj.html 
@t cproj, cprojf, cprojl - complex projection functions  
=cproj, cprojf, cprojl - complex projection functions 
@f /functions/creal.html 
@t creal, crealf, creall - complex real functions  
=creal, crealf, creall - complex real functions 
@f /functions/creat.html 
@t creat - create a new file or rewrite an existing one  
=creat - create a new file or rewrite an existing one 
@f /functions/crypt.html 
@t crypt - string encoding function (CRYPT)  
=crypt - string encoding function (CRYPT) 
@f /functions/csin.html 
@t csin, csinf, csinl - complex sine functions  
=csin, csinf, csinl - complex sine functions 
@f /functions/csinh.html 
@t csinh, csinhf, csinhl - complex hyperbolic sine functions  
=csinh, csinhf, csinhl - complex hyperbolic sine functions 
@f /functions/csinl.html 
@t csinl - complex sine functions  
=csinl - complex sine functions 
@f /functions/csqrt.html 
@t csqrt, csqrtf, csqrtl - complex square root functions  
=csqrt, csqrtf, csqrtl - complex square root functions 
@f /functions/ctan.html 
@t ctan, ctanf, ctanl - complex tangent functions  
=ctan, ctanf, ctanl - complex tangent functions 
@f /functions/ctanh.html 
@t ctanh, ctanhf, ctanhl - complex hyperbolic tangent functions  
=ctanh, ctanhf, ctanhl - complex hyperbolic tangent functions 
@f /functions/ctanl.html 
@t ctanl - complex tangent functions  
=ctanl - complex tangent functions 
@f /functions/ctermid.html 
@t ctermid - generate a pathname for the controlling terminal  
=ctermid - generate a pathname for the controlling terminal 
@f /functions/ctime.html 
@t ctime, ctime_r - convert a time value to a date and time string  
=ctime, ctime_r - convert a time value to a date and time string 
@f /functions/daylight.html 
@t daylight - daylight savings time flag  
=daylight - daylight savings time flag 
@f /functions/dbm_clearerr.html 
@t dbm_clearerr, dbm_close, dbm_delete, dbm_error, dbm_fetch, dbm_firstkey, dbm_nextkey, dbm_open, dbm_store - database functions  
=dbm_clearerr, dbm_close, dbm_delete, dbm_error, dbm_fetch, dbm_firstkey, dbm_nextkey, dbm_open, dbm_store - database functions 
@f /functions/difftime.html 
@t difftime - compute the difference between two calendar time values  
=difftime - compute the difference between two calendar time values 
@f /functions/dirfd.html 
@t dirfd - extract the file descriptor used by a DIR stream  
=dirfd - extract the file descriptor used by a DIR stream 
@f /functions/dirname.html 
@t dirname - report the parent directory name of a file pathname  
=dirname - report the parent directory name of a file pathname 
@f /functions/div.html 
@t div - compute the quotient and remainder of an integer division  
=div - compute the quotient and remainder of an integer division 
@f /functions/dlclose.html 
@t dlclose - close a dlopen object  
=dlclose - close a dlopen object 
@f /functions/dlerror.html 
@t dlerror - get diagnostic information  
=dlerror - get diagnostic information 
@f /functions/dlopen.html 
@t dlopen - gain access to an executable object file  
=dlopen - gain access to an executable object file 
@f /functions/dlsym.html 
@t dlsym - obtain the address of a symbol from a dlopen object  
=dlsym - obtain the address of a symbol from a dlopen object 
@f /functions/dprintf.html 
@t dprintf - print formatted output  
=dprintf - print formatted output 
@f /functions/drand48.html 
@t drand48, erand48, jrand48, lcong48, lrand48, mrand48, nrand48, seed48, srand48 - generate uniformly distributed pseudo-random numbers  
=drand48, erand48, jrand48, lcong48, lrand48, mrand48, nrand48, seed48, srand48 - generate uniformly distributed pseudo-random numbers 
@f /functions/dup.html 
@t dup, dup2 - duplicate an open file descriptor  
=dup, dup2 - duplicate an open file descriptor 
@f /functions/duplocale.html 
@t duplocale - duplicate a locale object  
=duplocale - duplicate a locale object 
@f /functions/encrypt.html 
@t encrypt - encoding function (CRYPT)  
=encrypt - encoding function (CRYPT) 
@f /functions/endgrent.html 
@t endgrent, getgrent, setgrent - group database entry functions  
=endgrent, getgrent, setgrent - group database entry functions 
@f /functions/endhostent.html 
@t endhostent, gethostent, sethostent - network host database functions  
=endhostent, gethostent, sethostent - network host database functions 
@f /functions/endnetent.html 
@t endnetent, getnetbyaddr, getnetbyname, getnetent, setnetent - network database functions  
=endnetent, getnetbyaddr, getnetbyname, getnetent, setnetent - network database functions 
@f /functions/endprotoent.html 
@t endprotoent, getprotobyname, getprotobynumber, getprotoent, setprotoent - network protocol database functions  
=endprotoent, getprotobyname, getprotobynumber, getprotoent, setprotoent - network protocol database functions 
@f /functions/endpwent.html 
@t endpwent, getpwent, setpwent - user database functions  
=endpwent, getpwent, setpwent - user database functions 
@f /functions/endservent.html 
@t endservent, getservbyname, getservbyport, getservent, setservent - network services database functions  
=endservent, getservbyname, getservbyport, getservent, setservent - network services database functions 
@f /functions/endutxent.html 
@t endutxent, getutxent, getutxid, getutxline, pututxline, setutxent - user accounting database functions  
=endutxent, getutxent, getutxid, getutxline, pututxline, setutxent - user accounting database functions 
@f /functions/environ.html 
@t environ - array of character pointers to the environment strings  
=environ - array of character pointers to the environment strings 
@f /functions/erand48.html 
@t erand48 - generate uniformly distributed pseudo-random numbers  
=erand48 - generate uniformly distributed pseudo-random numbers 
@f /functions/erf.html 
@t erf, erff, erfl - error functions  
=erf, erff, erfl - error functions 
@f /functions/erfc.html 
@t erfc, erfcf, erfcl - complementary error functions  
=erfc, erfcf, erfcl - complementary error functions 
@f /functions/erff.html 
@t erff, erfl - error functions  
=erff, erfl - error functions 
@f /functions/errno.html 
@t errno - error return value  
=errno - error return value 
@f /functions/exec.html 
@t environ, execl, execle, execlp, execv, execve, execvp, fexecve - execute a file  
=environ, execl, execle, execlp, execv, execve, execvp, fexecve - execute a file 
@f /functions/exit.html 
@t exit - terminate a process  
=exit - terminate a process 
@f /functions/exp.html 
@t exp, expf, expl - exponential function  
=exp, expf, expl - exponential function 
@f /functions/exp2.html 
@t exp2, exp2f, exp2l - exponential base 2 functions  
=exp2, exp2f, exp2l - exponential base 2 functions 
@f /functions/expm1.html 
@t expm1, expm1f, expm1l - compute exponential functions  
=expm1, expm1f, expm1l - compute exponential functions 
@f /functions/fabs.html 
@t fabs, fabsf, fabsl - absolute value function  
=fabs, fabsf, fabsl - absolute value function 
@f /functions/faccessat.html 
@t faccessat - determine accessibility of a file relative to directory file descriptor  
=faccessat - determine accessibility of a file relative to directory file descriptor 
@f /functions/fattach.html 
@t fattach - attach a STREAMS-based file descriptor to a file in the file system name space (STREAMS)  
=fattach - attach a STREAMS-based file descriptor to a file in the file system name space (STREAMS) 
@f /functions/fchdir.html 
@t fchdir - change working directory  
=fchdir - change working directory 
@f /functions/fchmod.html 
@t fchmod - change mode of a file  
=fchmod - change mode of a file 
@f /functions/fchmodat.html 
@t fchmodat - change mode of a file relative to directory file descriptor  
=fchmodat - change mode of a file relative to directory file descriptor 
@f /functions/fchown.html 
@t fchown - change owner and group of a file  
=fchown - change owner and group of a file 
@f /functions/fchownat.html 
@t fchownat - change owner and group of a file relative to directory file descriptor  
=fchownat - change owner and group of a file relative to directory file descriptor 
@f /functions/fclose.html 
@t fclose - close a stream  
=fclose - close a stream 
@f /functions/fcntl.html 
@t fcntl - file control  
=fcntl - file control 
@f /functions/fdatasync.html 
@t fdatasync - synchronize the data of a file (REALTIME)  
=fdatasync - synchronize the data of a file (REALTIME) 
@f /functions/fdetach.html 
@t fdetach - detach a name from a STREAMS-based file descriptor (STREAMS)  
=fdetach - detach a name from a STREAMS-based file descriptor (STREAMS) 
@f /functions/fdim.html 
@t fdim, fdimf, fdiml - compute positive difference between two floating-point numbers  
=fdim, fdimf, fdiml - compute positive difference between two floating-point numbers 
@f /functions/fdopen.html 
@t fdopen - associate a stream with a file descriptor  
=fdopen - associate a stream with a file descriptor 
@f /functions/fdopendir.html 
@t fdopendir, opendir - open directory associated with file descriptor  
=fdopendir, opendir - open directory associated with file descriptor 
@f /functions/feclearexcept.html 
@t feclearexcept - clear floating-point exception  
=feclearexcept - clear floating-point exception 
@f /functions/fegetenv.html 
@t fegetenv, fesetenv - get and set current floating-point environment  
=fegetenv, fesetenv - get and set current floating-point environment 
@f /functions/fegetexceptflag.html 
@t fegetexceptflag, fesetexceptflag - get and set floating-point status flags  
=fegetexceptflag, fesetexceptflag - get and set floating-point status flags 
@f /functions/fegetround.html 
@t fegetround, fesetround - get and set current rounding direction  
=fegetround, fesetround - get and set current rounding direction 
@f /functions/feholdexcept.html 
@t feholdexcept - save current floating-point environment  
=feholdexcept - save current floating-point environment 
@f /functions/feof.html 
@t feof - test end-of-file indicator on a stream  
=feof - test end-of-file indicator on a stream 
@f /functions/feraiseexcept.html 
@t feraiseexcept - raise floating-point exception  
=feraiseexcept - raise floating-point exception 
@f /functions/ferror.html 
@t ferror - test error indicator on a stream  
=ferror - test error indicator on a stream 
@f /functions/fesetenv.html 
@t fesetenv - set current floating-point environment  
=fesetenv - set current floating-point environment 
@f /functions/fesetexceptflag.html 
@t fesetexceptflag - set floating-point status flags  
=fesetexceptflag - set floating-point status flags 
@f /functions/fesetround.html 
@t fesetround - set current rounding direction  
=fesetround - set current rounding direction 
@f /functions/fetestexcept.html 
@t fetestexcept - test floating-point exception flags  
=fetestexcept - test floating-point exception flags 
@f /functions/feupdateenv.html 
@t feupdateenv - update floating-point environment  
=feupdateenv - update floating-point environment 
@f /functions/fexecve.html 
@t fexecve - execute a file  
=fexecve - execute a file 
@f /functions/fflush.html 
@t fflush - flush a stream  
=fflush - flush a stream 
@f /functions/ffs.html 
@t ffs - find first set bit  
=ffs - find first set bit 
@f /functions/fgetc.html 
@t fgetc - get a byte from a stream  
=fgetc - get a byte from a stream 
@f /functions/fgetpos.html 
@t fgetpos - get current file position information  
=fgetpos - get current file position information 
@f /functions/fgets.html 
@t fgets - get a string from a stream  
=fgets - get a string from a stream 
@f /functions/fgetwc.html 
@t fgetwc - get a wide-character code from a stream  
=fgetwc - get a wide-character code from a stream 
@f /functions/fgetws.html 
@t fgetws - get a wide-character string from a stream  
=fgetws - get a wide-character string from a stream 
@f /functions/fileno.html 
@t fileno - map a stream pointer to a file descriptor  
=fileno - map a stream pointer to a file descriptor 
@f /functions/flockfile.html 
@t flockfile, ftrylockfile, funlockfile - stdio locking functions  
=flockfile, ftrylockfile, funlockfile - stdio locking functions 
@f /functions/floor.html 
@t floor, floorf, floorl - floor function  
=floor, floorf, floorl - floor function 
@f /functions/fma.html 
@t fma, fmaf, fmal - floating-point multiply-add  
=fma, fmaf, fmal - floating-point multiply-add 
@f /functions/fmax.html 
@t fmax, fmaxf, fmaxl - determine maximum numeric value of two floating-point numbers  
=fmax, fmaxf, fmaxl - determine maximum numeric value of two floating-point numbers 
@f /functions/fmemopen.html 
@t fmemopen - open a memory buffer stream  
=fmemopen - open a memory buffer stream 
@f /functions/fmin.html 
@t fmin, fminf, fminl - determine minimum numeric value of two floating-point numbers  
=fmin, fminf, fminl - determine minimum numeric value of two floating-point numbers 
@f /functions/fmod.html 
@t fmod, fmodf, fmodl - floating-point remainder value function  
=fmod, fmodf, fmodl - floating-point remainder value function 
@f /functions/fmtmsg.html 
@t fmtmsg - display a message in the specified format on standard error and/or a system console  
=fmtmsg - display a message in the specified format on standard error and/or a system console 
@f /functions/fnmatch.html 
@t fnmatch - match a filename or a pathname  
=fnmatch - match a filename or a pathname 
@f /functions/fopen.html 
@t fopen - open a stream  
=fopen - open a stream 
@f /functions/fork.html 
@t fork - create a new process  
=fork - create a new process 
@f /functions/fpathconf.html 
@t fpathconf, pathconf - get configurable pathname variables  
=fpathconf, pathconf - get configurable pathname variables 
@f /functions/fpclassify.html 
@t fpclassify - classify real floating type  
=fpclassify - classify real floating type 
@f /functions/fprintf.html 
@t dprintf, fprintf, printf, snprintf, sprintf - print formatted output  
=dprintf, fprintf, printf, snprintf, sprintf - print formatted output 
@f /functions/fputc.html 
@t fputc - put a byte on a stream  
=fputc - put a byte on a stream 
@f /functions/fputs.html 
@t fputs - put a string on a stream  
=fputs - put a string on a stream 
@f /functions/fputwc.html 
@t fputwc - put a wide-character code on a stream  
=fputwc - put a wide-character code on a stream 
@f /functions/fputws.html 
@t fputws - put a wide-character string on a stream  
=fputws - put a wide-character string on a stream 
@f /functions/fread.html 
@t fread - binary input  
=fread - binary input 
@f /functions/free.html 
@t free - free allocated memory  
=free - free allocated memory 
@f /functions/freeaddrinfo.html 
@t freeaddrinfo, getaddrinfo - get address information  
=freeaddrinfo, getaddrinfo - get address information 
@f /functions/freelocale.html 
@t freelocale - free resources allocated for a locale object  
=freelocale - free resources allocated for a locale object 
@f /functions/freopen.html 
@t freopen - open a stream  
=freopen - open a stream 
@f /functions/frexp.html 
@t frexp, frexpf, frexpl - extract mantissa and exponent from a double precision number  
=frexp, frexpf, frexpl - extract mantissa and exponent from a double precision number 
@f /functions/fscanf.html 
@t fscanf, scanf, sscanf - convert formatted input  
=fscanf, scanf, sscanf - convert formatted input 
@f /functions/fseek.html 
@t fseek, fseeko - reposition a file-position indicator in a stream  
=fseek, fseeko - reposition a file-position indicator in a stream 
@f /functions/fsetpos.html 
@t fsetpos - set current file position  
=fsetpos - set current file position 
@f /functions/fstat.html 
@t fstat - get file status  
=fstat - get file status 
@f /functions/fstatat.html 
@t fstatat, lstat, stat - get file status  
=fstatat, lstat, stat - get file status 
@f /functions/fstatvfs.html 
@t fstatvfs, statvfs - get file system information  
=fstatvfs, statvfs - get file system information 
@f /functions/fsync.html 
@t fsync - synchronize changes to a file  
=fsync - synchronize changes to a file 
@f /functions/ftell.html 
@t ftell, ftello - return a file offset in a stream  
=ftell, ftello - return a file offset in a stream 
@f /functions/ftok.html 
@t ftok - generate an IPC key  
=ftok - generate an IPC key 
@f /functions/ftruncate.html 
@t ftruncate - truncate a file to a specified length  
=ftruncate - truncate a file to a specified length 
@f /functions/ftrylockfile.html 
@t ftrylockfile - stdio locking functions  
=ftrylockfile - stdio locking functions 
@f /functions/ftw.html 
@t ftw - traverse (walk) a file tree  
=ftw - traverse (walk) a file tree 
@f /functions/funlockfile.html 
@t funlockfile - stdio locking functions  
=funlockfile - stdio locking functions 
@f /functions/futimens.html 
@t futimens, utimensat, utimes - set file access and modification times  
=futimens, utimensat, utimes - set file access and modification times 
@f /functions/fwide.html 
@t fwide - set stream orientation  
=fwide - set stream orientation 
@f /functions/fwprintf.html 
@t fwprintf, swprintf, wprintf - print formatted wide-character output  
=fwprintf, swprintf, wprintf - print formatted wide-character output 
@f /functions/fwrite.html 
@t fwrite - binary output  
=fwrite - binary output 
@f /functions/fwscanf.html 
@t fwscanf, swscanf, wscanf - convert formatted wide-character input  
=fwscanf, swscanf, wscanf - convert formatted wide-character input 
@f /functions/gai_strerror.html 
@t gai_strerror - address and name information error description  
=gai_strerror - address and name information error description 
@f /functions/getaddrinfo.html 
@t getaddrinfo - get address information  
=getaddrinfo - get address information 
@f /functions/getc.html 
@t getc - get a byte from a stream  
=getc - get a byte from a stream 
@f /functions/getc_unlocked.html 
@t getc_unlocked, getchar_unlocked, putc_unlocked, putchar_unlocked - stdio with explicit client locking  
=getc_unlocked, getchar_unlocked, putc_unlocked, putchar_unlocked - stdio with explicit client locking 
@f /functions/getchar.html 
@t getchar - get a byte from a stdin stream  
=getchar - get a byte from a stdin stream 
@f /functions/getchar_unlocked.html 
@t getchar_unlocked - stdio with explicit client locking  
=getchar_unlocked - stdio with explicit client locking 
@f /functions/getcwd.html 
@t getcwd - get the pathname of the current working directory  
=getcwd - get the pathname of the current working directory 
@f /functions/getdate.html 
@t getdate - convert user format date and time  
=getdate - convert user format date and time 
@f /functions/getdelim.html 
@t getdelim, getline - read a delimited record from stream  
=getdelim, getline - read a delimited record from stream 
@f /functions/getegid.html 
@t getegid - get the effective group ID  
=getegid - get the effective group ID 
@f /functions/getenv.html 
@t getenv - get value of an environment variable  
=getenv - get value of an environment variable 
@f /functions/geteuid.html 
@t geteuid - get the effective user ID  
=geteuid - get the effective user ID 
@f /functions/getgid.html 
@t getgid - get the real group ID  
=getgid - get the real group ID 
@f /functions/getgrent.html 
@t getgrent - get the group database entry  
=getgrent - get the group database entry 
@f /functions/getgrgid.html 
@t getgrgid, getgrgid_r - get group database entry for a group ID  
=getgrgid, getgrgid_r - get group database entry for a group ID 
@f /functions/getgrnam.html 
@t getgrnam, getgrnam_r - search group database for a name  
=getgrnam, getgrnam_r - search group database for a name 
@f /functions/getgroups.html 
@t getgroups - get supplementary group IDs  
=getgroups - get supplementary group IDs 
@f /functions/gethostent.html 
@t gethostent - network host database functions  
=gethostent - network host database functions 
@f /functions/gethostid.html 
@t gethostid - get an identifier for the current host  
=gethostid - get an identifier for the current host 
@f /functions/gethostname.html 
@t gethostname - get name of current host  
=gethostname - get name of current host 
@f /functions/getitimer.html 
@t getitimer, setitimer - get and set value of interval timer  
=getitimer, setitimer - get and set value of interval timer 
@f /functions/getline.html 
@t getline - read a delimited record from stream  
=getline - read a delimited record from stream 
@f /functions/getlogin.html 
@t getlogin, getlogin_r - get login name  
=getlogin, getlogin_r - get login name 
@f /functions/getmsg.html 
@t getmsg, getpmsg - receive next message from a STREAMS file (STREAMS)  
=getmsg, getpmsg - receive next message from a STREAMS file (STREAMS) 
@f /functions/getnameinfo.html 
@t getnameinfo - get name information  
=getnameinfo - get name information 
@f /functions/getnetbyaddr.html 
@t getnetbyaddr, getnetbyname, getnetent - network database functions  
=getnetbyaddr, getnetbyname, getnetent - network database functions 
@f /functions/getopt.html 
@t getopt, optarg, opterr, optind, optopt - command option parsing  
=getopt, optarg, opterr, optind, optopt - command option parsing 
@f /functions/getpeername.html 
@t getpeername - get the name of the peer socket  
=getpeername - get the name of the peer socket 
@f /functions/getpgid.html 
@t getpgid - get the process group ID for a process  
=getpgid - get the process group ID for a process 
@f /functions/getpgrp.html 
@t getpgrp - get the process group ID of the calling process  
=getpgrp - get the process group ID of the calling process 
@f /functions/getpid.html 
@t getpid - get the process ID  
=getpid - get the process ID 
@f /functions/getpmsg.html 
@t getpmsg - receive next message from a STREAMS file  
=getpmsg - receive next message from a STREAMS file 
@f /functions/getppid.html 
@t getppid - get the parent process ID  
=getppid - get the parent process ID 
@f /functions/getpriority.html 
@t getpriority, setpriority - get and set the nice value  
=getpriority, setpriority - get and set the nice value 
@f /functions/getprotobyname.html 
@t getprotobyname, getprotobynumber, getprotent - network protocol database functions  
=getprotobyname, getprotobynumber, getprotent - network protocol database functions 
@f /functions/getpwent.html 
@t getpwent - get user database entry  
=getpwent - get user database entry 
@f /functions/getpwnam.html 
@t getpwnam, getpwnam_r - search user database for a name  
=getpwnam, getpwnam_r - search user database for a name 
@f /functions/getpwuid.html 
@t getpwuid, getpwuid_r - search user database for a user ID  
=getpwuid, getpwuid_r - search user database for a user ID 
@f /functions/getrlimit.html 
@t getrlimit, setrlimit - control maximum resource consumption  
=getrlimit, setrlimit - control maximum resource consumption 
@f /functions/getrusage.html 
@t getrusage - get information about resource utilization  
=getrusage - get information about resource utilization 
@f /functions/gets.html 
@t gets - get a string from a stdin stream  
=gets - get a string from a stdin stream 
@f /functions/getservbyname.html 
@t getservbyname, getservbyport, getservent - network services database functions  
=getservbyname, getservbyport, getservent - network services database functions 
@f /functions/getsid.html 
@t getsid - get the process group ID of a session leader  
=getsid - get the process group ID of a session leader 
@f /functions/getsockname.html 
@t getsockname - get the socket name  
=getsockname - get the socket name 
@f /functions/getsockopt.html 
@t getsockopt - get the socket options  
=getsockopt - get the socket options 
@f /functions/getsubopt.html 
@t getsubopt - parse suboption arguments from a string  
=getsubopt - parse suboption arguments from a string 
@f /functions/gettimeofday.html 
@t gettimeofday - get the date and time  
=gettimeofday - get the date and time 
@f /functions/getuid.html 
@t getuid - get a real user ID  
=getuid - get a real user ID 
@f /functions/getutxent.html 
@t getutxent, getutxid, getutxline - get user accounting database entries  
=getutxent, getutxid, getutxline - get user accounting database entries 
@f /functions/getwc.html 
@t getwc - get a wide character from a stream  
=getwc - get a wide character from a stream 
@f /functions/getwchar.html 
@t getwchar - get a wide character from a stdin stream  
=getwchar - get a wide character from a stdin stream 
@f /functions/glob.html 
@t glob, globfree - generate pathnames matching a pattern  
=glob, globfree - generate pathnames matching a pattern 
@f /functions/gmtime.html 
@t gmtime, gmtime_r - convert a time value to a broken-down UTC time  
=gmtime, gmtime_r - convert a time value to a broken-down UTC time 
@f /functions/grantpt.html 
@t grantpt - grant access to the slave pseudo-terminal device  
=grantpt - grant access to the slave pseudo-terminal device 
@f /functions/hcreate.html 
@t hcreate, hdestroy, hsearch - manage hash search table  
=hcreate, hdestroy, hsearch - manage hash search table 
@f /functions/htonl.html 
@t htonl, htons, ntohl, ntohs - convert values between host and network byte order  
=htonl, htons, ntohl, ntohs - convert values between host and network byte order 
@f /functions/hypot.html 
@t hypot, hypotf, hypotl - Euclidean distance function  
=hypot, hypotf, hypotl - Euclidean distance function 
@f /functions/iconv.html 
@t iconv - codeset conversion function  
=iconv - codeset conversion function 
@f /functions/iconv_close.html 
@t iconv_close - codeset conversion deallocation function  
=iconv_close - codeset conversion deallocation function 
@f /functions/iconv_open.html 
@t iconv_open - codeset conversion allocation function  
=iconv_open - codeset conversion allocation function 
@f /functions/if_freenameindex.html 
@t if_freenameindex - free memory allocated by if_nameindex  
=if_freenameindex - free memory allocated by if_nameindex 
@f /functions/if_indextoname.html 
@t if_indextoname - map a network interface index to its corresponding name  
=if_indextoname - map a network interface index to its corresponding name 
@f /functions/if_nameindex.html 
@t if_nameindex - return all network interface names and indexes  
=if_nameindex - return all network interface names and indexes 
@f /functions/if_nametoindex.html 
@t if_nametoindex - map a network interface name to its corresponding index  
=if_nametoindex - map a network interface name to its corresponding index 
@f /functions/ilogb.html 
@t ilogb, ilogbf, ilogbl - return an unbiased exponent  
=ilogb, ilogbf, ilogbl - return an unbiased exponent 
@f /functions/imaxabs.html 
@t imaxabs - return absolute value  
=imaxabs - return absolute value 
@f /functions/imaxdiv.html 
@t imaxdiv - return quotient and remainder  
=imaxdiv - return quotient and remainder 
@f /functions/inet_addr.html 
@t inet_addr, inet_ntoa - IPv4 address manipulation  
=inet_addr, inet_ntoa - IPv4 address manipulation 
@f /functions/inet_ntop.html 
@t inet_ntop, inet_pton - convert IPv4 and IPv6 addresses between binary and text form  
=inet_ntop, inet_pton - convert IPv4 and IPv6 addresses between binary and text form 
@f /functions/initstate.html 
@t initstate, random, setstate, srandom - pseudo-random number functions  
=initstate, random, setstate, srandom - pseudo-random number functions 
@f /functions/insque.html 
@t insque, remque - insert or remove an element in a queue  
=insque, remque - insert or remove an element in a queue 
@f /functions/ioctl.html 
@t ioctl - control a STREAMS device (STREAMS)  
=ioctl - control a STREAMS device (STREAMS) 
@f /functions/isalnum.html 
@t isalnum, isalnum_l - test for an alphanumeric character  
=isalnum, isalnum_l - test for an alphanumeric character 
@f /functions/isalpha.html 
@t isalpha, isalpha_l - test for an alphabetic character  
=isalpha, isalpha_l - test for an alphabetic character 
@f /functions/isascii.html 
@t isascii - test for a 7-bit US-ASCII character  
=isascii - test for a 7-bit US-ASCII character 
@f /functions/isastream.html 
@t isastream - test a file descriptor (STREAMS)  
=isastream - test a file descriptor (STREAMS) 
@f /functions/isatty.html 
@t isatty - test for a terminal device  
=isatty - test for a terminal device 
@f /functions/isblank.html 
@t isblank, isblank_l - test for a blank character  
=isblank, isblank_l - test for a blank character 
@f /functions/iscntrl.html 
@t iscntrl, iscntrl_l - test for a control character  
=iscntrl, iscntrl_l - test for a control character 
@f /functions/isdigit.html 
@t isdigit, isdigit_l - test for a decimal digit  
=isdigit, isdigit_l - test for a decimal digit 
@f /functions/isfinite.html 
@t isfinite - test for finite value  
=isfinite - test for finite value 
@f /functions/isgraph.html 
@t isgraph, isgraph_l - test for a visible character  
=isgraph, isgraph_l - test for a visible character 
@f /functions/isgreater.html 
@t isgreater - test if x greater than y  
=isgreater - test if x greater than y 
@f /functions/isgreaterequal.html 
@t isgreaterequal - test if x is greater than or equal to y  
=isgreaterequal - test if x is greater than or equal to y 
@f /functions/isinf.html 
@t isinf - test for infinity  
=isinf - test for infinity 
@f /functions/isless.html 
@t isless - test if x is less than y  
=isless - test if x is less than y 
@f /functions/islessequal.html 
@t islessequal - test if x is less than or equal to y  
=islessequal - test if x is less than or equal to y 
@f /functions/islessgreater.html 
@t islessgreater - test if x is less than or greater than y  
=islessgreater - test if x is less than or greater than y 
@f /functions/islower.html 
@t islower, islower_l - test for a lowercase letter  
=islower, islower_l - test for a lowercase letter 
@f /functions/isnan.html 
@t isnan - test for a NaN  
=isnan - test for a NaN 
@f /functions/isnormal.html 
@t isnormal - test for a normal value  
=isnormal - test for a normal value 
@f /functions/isprint.html 
@t isprint, isprint_l - test for a printable character  
=isprint, isprint_l - test for a printable character 
@f /functions/ispunct.html 
@t ispunct, ispunct_l - test for a punctuation character  
=ispunct, ispunct_l - test for a punctuation character 
@f /functions/isspace.html 
@t isspace, isspace_l - test for a white-space character  
=isspace, isspace_l - test for a white-space character 
@f /functions/isunordered.html 
@t isunordered - test if arguments are unordered  
=isunordered - test if arguments are unordered 
@f /functions/isupper.html 
@t isupper, isupper_l - test for an uppercase letter  
=isupper, isupper_l - test for an uppercase letter 
@f /functions/iswalnum.html 
@t iswalnum, iswalnum_l - test for an alphanumeric wide-character code  
=iswalnum, iswalnum_l - test for an alphanumeric wide-character code 
@f /functions/iswalpha.html 
@t iswalpha, iswalpha_l - test for an alphabetic wide-character code  
=iswalpha, iswalpha_l - test for an alphabetic wide-character code 
@f /functions/iswblank.html 
@t iswblank, iswblank_l - test for a blank wide-character code  
=iswblank, iswblank_l - test for a blank wide-character code 
@f /functions/iswcntrl.html 
@t iswcntrl, iswcntrl_l - test for a control wide-character code  
=iswcntrl, iswcntrl_l - test for a control wide-character code 
@f /functions/iswctype.html 
@t iswctype, iswctype_l - test character for a specified class  
=iswctype, iswctype_l - test character for a specified class 
@f /functions/iswdigit.html 
@t iswdigit, iswdigit_l - test for a decimal digit wide-character code  
=iswdigit, iswdigit_l - test for a decimal digit wide-character code 
@f /functions/iswgraph.html 
@t iswgraph, iswgraph_l - test for a visible wide-character code  
=iswgraph, iswgraph_l - test for a visible wide-character code 
@f /functions/iswlower.html 
@t iswlower, iswlower_l - test for a lowercase letter wide-character code  
=iswlower, iswlower_l - test for a lowercase letter wide-character code 
@f /functions/iswprint.html 
@t iswprint, iswprint_l - test for a printable wide-character code  
=iswprint, iswprint_l - test for a printable wide-character code 
@f /functions/iswpunct.html 
@t iswpunct, iswpunct_l - test for a punctuation wide-character code  
=iswpunct, iswpunct_l - test for a punctuation wide-character code 
@f /functions/iswspace.html 
@t iswspace, iswspace_l - test for a white-space wide-character code  
=iswspace, iswspace_l - test for a white-space wide-character code 
@f /functions/iswupper.html 
@t iswupper, iswupper_l - test for an uppercase letter wide-character code  
=iswupper, iswupper_l - test for an uppercase letter wide-character code 
@f /functions/iswxdigit.html 
@t iswxdigit, iswxdigit_l - test for a hexadecimal digit wide-character code  
=iswxdigit, iswxdigit_l - test for a hexadecimal digit wide-character code 
@f /functions/isxdigit.html 
@t isxdigit, isxdigit_l - test for a hexadecimal digit  
=isxdigit, isxdigit_l - test for a hexadecimal digit 
@f /functions/j0.html 
@t j0, j1, jn - Bessel functions of the first kind  
=j0, j1, jn - Bessel functions of the first kind 
@f /functions/jrand48.html 
@t jrand48 - generate a uniformly distributed pseudo-random long signed integer  
=jrand48 - generate a uniformly distributed pseudo-random long signed integer 
@f /functions/kill.html 
@t kill - send a signal to a process or a group of processes  
=kill - send a signal to a process or a group of processes 
@f /functions/killpg.html 
@t killpg - send a signal to a process group  
=killpg - send a signal to a process group 
@f /functions/l64a.html 
@t l64a - convert a 32-bit integer to a radix-64 ASCII string  
=l64a - convert a 32-bit integer to a radix-64 ASCII string 
@f /functions/labs.html 
@t labs, llabs - return a long integer absolute value  
=labs, llabs - return a long integer absolute value 
@f /functions/lchown.html 
@t lchown - change the owner and group of a symbolic link  
=lchown - change the owner and group of a symbolic link 
@f /functions/lcong48.html 
@t lcong48 - seed a uniformly distributed pseudo-random signed long integer generator  
=lcong48 - seed a uniformly distributed pseudo-random signed long integer generator 
@f /functions/ldexp.html 
@t ldexp, ldexpf, ldexpl - load exponent of a floating-point number  
=ldexp, ldexpf, ldexpl - load exponent of a floating-point number 
@f /functions/ldiv.html 
@t ldiv, lldiv - compute quotient and remainder of a long division  
=ldiv, lldiv - compute quotient and remainder of a long division 
@f /functions/lfind.html 
@t lfind - find entry in a linear search table  
=lfind - find entry in a linear search table 
@f /functions/lgamma.html 
@t lgamma, lgammaf, lgammal, signgam - log gamma function  
=lgamma, lgammaf, lgammal, signgam - log gamma function 
@f /functions/link.html 
@t link, linkat - link one file to another file relative to two directory file descriptors  
=link, linkat - link one file to another file relative to two directory file descriptors 
@f /functions/lio_listio.html 
@t lio_listio - list directed I/O  
=lio_listio - list directed I/O 
@f /functions/listen.html 
@t listen - listen for socket connections and limit the queue of incoming connections  
=listen - listen for socket connections and limit the queue of incoming connections 
@f /functions/llabs.html 
@t llabs - return a long integer absolute value  
=llabs - return a long integer absolute value 
@f /functions/lldiv.html 
@t lldiv - compute quotient and remainder of a long division  
=lldiv - compute quotient and remainder of a long division 
@f /functions/llrint.html 
@t llrint, llrintf, llrintl - round to the nearest integer value using current rounding direction  
=llrint, llrintf, llrintl - round to the nearest integer value using current rounding direction 
@f /functions/llround.html 
@t llround, llroundf, llroundl - round to nearest integer value  
=llround, llroundf, llroundl - round to nearest integer value 
@f /functions/localeconv.html 
@t localeconv - return locale-specific information  
=localeconv - return locale-specific information 
@f /functions/localtime.html 
@t localtime, localtime_r - convert a time value to a broken-down local time  
=localtime, localtime_r - convert a time value to a broken-down local time 
@f /functions/lockf.html 
@t lockf - record locking on files  
=lockf - record locking on files 
@f /functions/log.html 
@t log, logf, logl - natural logarithm function  
=log, logf, logl - natural logarithm function 
@f /functions/log10.html 
@t log10, log10f, log10l - base 10 logarithm function  
=log10, log10f, log10l - base 10 logarithm function 
@f /functions/log1p.html 
@t log1p, log1pf, log1pl - compute a natural logarithm  
=log1p, log1pf, log1pl - compute a natural logarithm 
@f /functions/log2.html 
@t log2, log2f, log2l - compute base 2 logarithm functions  
=log2, log2f, log2l - compute base 2 logarithm functions 
@f /functions/logb.html 
@t logb, logbf, logbl - radix-independent exponent  
=logb, logbf, logbl - radix-independent exponent 
@f /functions/logf.html 
@t logf, logl - natural logarithm function  
=logf, logl - natural logarithm function 
@f /functions/longjmp.html 
@t longjmp - non-local goto  
=longjmp - non-local goto 
@f /functions/lrand48.html 
@t lrand48 - generate uniformly distributed pseudo-random non-negative long integers  
=lrand48 - generate uniformly distributed pseudo-random non-negative long integers 
@f /functions/lrint.html 
@t lrint, lrintf, lrintl - round to nearest integer value using current rounding direction  
=lrint, lrintf, lrintl - round to nearest integer value using current rounding direction 
@f /functions/lround.html 
@t lround, lroundf, lroundl - round to nearest integer value  
=lround, lroundf, lroundl - round to nearest integer value 
@f /functions/lsearch.html 
@t lsearch, lfind - linear search and update  
=lsearch, lfind - linear search and update 
@f /functions/lseek.html 
@t lseek - move the read/write file offset  
=lseek - move the read/write file offset 
@f /functions/lstat.html 
@t lstat - get file status  
=lstat - get file status 
@f /functions/malloc.html 
@t malloc - a memory allocator  
=malloc - a memory allocator 
@f /functions/mblen.html 
@t mblen - get number of bytes in a character  
=mblen - get number of bytes in a character 
@f /functions/mbrlen.html 
@t mbrlen - get number of bytes in a character (restartable)  
=mbrlen - get number of bytes in a character (restartable) 
@f /functions/mbrtowc.html 
@t mbrtowc - convert a character to a wide-character code (restartable)  
=mbrtowc - convert a character to a wide-character code (restartable) 
@f /functions/mbsinit.html 
@t mbsinit - determine conversion object status  
=mbsinit - determine conversion object status 
@f /functions/mbsrtowcs.html 
@t mbsnrtowcs, mbsrtowcs - convert a character string to a wide-character string (restartable)  
=mbsnrtowcs, mbsrtowcs - convert a character string to a wide-character string (restartable) 
@f /functions/mbstowcs.html 
@t mbstowcs - convert a character string to a wide-character string  
=mbstowcs - convert a character string to a wide-character string 
@f /functions/mbtowc.html 
@t mbtowc - convert a character to a wide-character code  
=mbtowc - convert a character to a wide-character code 
@f /functions/memccpy.html 
@t memccpy - copy bytes in memory  
=memccpy - copy bytes in memory 
@f /functions/memchr.html 
@t memchr - find byte in memory  
=memchr - find byte in memory 
@f /functions/memcmp.html 
@t memcmp - compare bytes in memory  
=memcmp - compare bytes in memory 
@f /functions/memcpy.html 
@t memcpy - copy bytes in memory  
=memcpy - copy bytes in memory 
@f /functions/memmove.html 
@t memmove - copy bytes in memory with overlapping areas  
=memmove - copy bytes in memory with overlapping areas 
@f /functions/memset.html 
@t memset - set bytes in memory  
=memset - set bytes in memory 
@f /functions/mkdir.html 
@t mkdir, mkdirat - make a directory relative to directory file descriptor  
=mkdir, mkdirat - make a directory relative to directory file descriptor 
@f /functions/mkdtemp.html 
@t mkdtemp, mkstemp - create a unique directory or file  
=mkdtemp, mkstemp - create a unique directory or file 
@f /functions/mkfifo.html 
@t mkfifo, mkfifoat - make a FIFO special file relative to directory file descriptor  
=mkfifo, mkfifoat - make a FIFO special file relative to directory file descriptor 
@f /functions/mknod.html 
@t mknod, mknodat - make directory, special file, or regular file  
=mknod, mknodat - make directory, special file, or regular file 
@f /functions/mkstemp.html 
@t mkstemp - create a unique directory  
=mkstemp - create a unique directory 
@f /functions/mktime.html 
@t mktime - convert broken-down time into time since the Epoch  
=mktime - convert broken-down time into time since the Epoch 
@f /functions/mlock.html 
@t mlock, munlock - lock or unlock a range of process address space (REALTIME)  
=mlock, munlock - lock or unlock a range of process address space (REALTIME) 
@f /functions/mlockall.html 
@t mlockall, munlockall - lock/unlock the address space of a process (REALTIME)  
=mlockall, munlockall - lock/unlock the address space of a process (REALTIME) 
@f /functions/mmap.html 
@t mmap - map pages of memory  
=mmap - map pages of memory 
@f /functions/modf.html 
@t modf, modff, modfl - decompose a floating-point number  
=modf, modff, modfl - decompose a floating-point number 
@f /functions/mprotect.html 
@t mprotect - set protection of memory mapping  
=mprotect - set protection of memory mapping 
@f /functions/mq_close.html 
@t mq_close - close a message queue (REALTIME)  
=mq_close - close a message queue (REALTIME) 
@f /functions/mq_getattr.html 
@t mq_getattr - get message queue attributes (REALTIME)  
=mq_getattr - get message queue attributes (REALTIME) 
@f /functions/mq_notify.html 
@t mq_notify - notify process that a message is available (REALTIME)  
=mq_notify - notify process that a message is available (REALTIME) 
@f /functions/mq_open.html 
@t mq_open - open a message queue (REALTIME)  
=mq_open - open a message queue (REALTIME) 
@f /functions/mq_receive.html 
@t mq_receive, mq_timedreceive - receive a message from a message queue (REALTIME)  
=mq_receive, mq_timedreceive - receive a message from a message queue (REALTIME) 
@f /functions/mq_send.html 
@t mq_send, mq_timedsend - send a message to a message queue (REALTIME)  
=mq_send, mq_timedsend - send a message to a message queue (REALTIME) 
@f /functions/mq_setattr.html 
@t mq_setattr - set message queue attributes (REALTIME)  
=mq_setattr - set message queue attributes (REALTIME) 
@f /functions/mq_timedreceive.html 
@t mq_timedreceive - receive a message from a message queue (ADVANCED REALTIME)  
=mq_timedreceive - receive a message from a message queue (ADVANCED REALTIME) 
@f /functions/mq_timedsend.html 
@t mq_timedsend - send a message to a message queue (ADVANCED REALTIME)  
=mq_timedsend - send a message to a message queue (ADVANCED REALTIME) 
@f /functions/mq_unlink.html 
@t mq_unlink - remove a message queue (REALTIME)  
=mq_unlink - remove a message queue (REALTIME) 
@f /functions/mrand48.html 
@t mrand48 - generate uniformly distributed pseudo-random signed long integers  
=mrand48 - generate uniformly distributed pseudo-random signed long integers 
@f /functions/msgctl.html 
@t msgctl - XSI message control operations  
=msgctl - XSI message control operations 
@f /functions/msgget.html 
@t msgget - get the XSI message queue identifier  
=msgget - get the XSI message queue identifier 
@f /functions/msgrcv.html 
@t msgrcv - XSI message receive operation  
=msgrcv - XSI message receive operation 
@f /functions/msgsnd.html 
@t msgsnd - XSI message send operation  
=msgsnd - XSI message send operation 
@f /functions/msync.html 
@t msync - synchronize memory with physical storage  
=msync - synchronize memory with physical storage 
@f /functions/munlock.html 
@t munlock - unlock a range of process address space  
=munlock - unlock a range of process address space 
@f /functions/munlockall.html 
@t munlockall - unlock the address space of a process  
=munlockall - unlock the address space of a process 
@f /functions/munmap.html 
@t munmap - unmap pages of memory  
=munmap - unmap pages of memory 
@f /functions/nan.html 
@t nan, nanf, nanl - return quiet NaN  
=nan, nanf, nanl - return quiet NaN 
@f /functions/nanosleep.html 
@t nanosleep - high resolution sleep  
=nanosleep - high resolution sleep 
@f /functions/nearbyint.html 
@t nearbyint, nearbyintf, nearbyintl - floating-point rounding functions  
=nearbyint, nearbyintf, nearbyintl - floating-point rounding functions 
@f /functions/newlocale.html 
@t newlocale - create or modify a locale object  
=newlocale - create or modify a locale object 
@f /functions/nextafter.html 
@t nextafter, nextafterf, nextafterl, nexttoward, nexttowardf, nexttowardl - next representable floating-point number  
=nextafter, nextafterf, nextafterl, nexttoward, nexttowardf, nexttowardl - next representable floating-point number 
@f /functions/nftw.html 
@t nftw - walk a file tree  
=nftw - walk a file tree 
@f /functions/nice.html 
@t nice - change the nice value of a process  
=nice - change the nice value of a process 
@f /functions/nl_langinfo.html 
@t nl_langinfo, nl_langinfo_l - language information  
=nl_langinfo, nl_langinfo_l - language information 
@f /functions/nrand48.html 
@t nrand48 - generate uniformly distributed pseudo-random non-negative long integers  
=nrand48 - generate uniformly distributed pseudo-random non-negative long integers 
@f /functions/ntohl.html 
@t ntohl, ntohs - convert values between host and network byte order  
=ntohl, ntohs - convert values between host and network byte order 
@f /functions/open.html 
@t open, openat - open file relative to directory file descriptor  
=open, openat - open file relative to directory file descriptor 
@f /functions/open_memstream.html 
@t open_memstream, open_wmemstream - open a dynamic memory buffer stream  
=open_memstream, open_wmemstream - open a dynamic memory buffer stream 
@f /functions/openat.html 
@t openat - open file relative to directory file descriptor  
=openat - open file relative to directory file descriptor 
@f /functions/opendir.html 
@t opendir - open directory associated with file descriptor  
=opendir - open directory associated with file descriptor 
@f /functions/openlog.html 
@t openlog - open a connection to the logging facility  
=openlog - open a connection to the logging facility 
@f /functions/optarg.html 
@t optarg, opterr, optind, optopt - options parsing variables  
=optarg, opterr, optind, optopt - options parsing variables 
@f /functions/pathconf.html 
@t pathconf - get configurable pathname variables  
=pathconf - get configurable pathname variables 
@f /functions/pause.html 
@t pause - suspend the thread until a signal is received  
=pause - suspend the thread until a signal is received 
@f /functions/pclose.html 
@t pclose - close a pipe stream to or from a process  
=pclose - close a pipe stream to or from a process 
@f /functions/perror.html 
@t perror - write error messages to standard error  
=perror - write error messages to standard error 
@f /functions/pipe.html 
@t pipe - create an interprocess channel  
=pipe - create an interprocess channel 
@f /functions/poll.html 
@t poll - input/output multiplexing  
=poll - input/output multiplexing 
@f /functions/popen.html 
@t popen - initiate pipe streams to or from a process  
=popen - initiate pipe streams to or from a process 
@f /functions/posix_fadvise.html 
@t posix_fadvise - file advisory information (ADVANCED REALTIME)  
=posix_fadvise - file advisory information (ADVANCED REALTIME) 
@f /functions/posix_fallocate.html 
@t posix_fallocate - file space control (ADVANCED REALTIME)  
=posix_fallocate - file space control (ADVANCED REALTIME) 
@f /functions/posix_madvise.html 
@t posix_madvise - memory advisory information and alignment control (ADVANCED REALTIME)  
=posix_madvise - memory advisory information and alignment control (ADVANCED REALTIME) 
@f /functions/posix_mem_offset.html 
@t posix_mem_offset - find offset and length of a mapped typed memory block (ADVANCED REALTIME)  
=posix_mem_offset - find offset and length of a mapped typed memory block (ADVANCED REALTIME) 
@f /functions/posix_memalign.html 
@t posix_memalign - aligned memory allocation (ADVANCED REALTIME)  
=posix_memalign - aligned memory allocation (ADVANCED REALTIME) 
@f /functions/posix_openpt.html 
@t posix_openpt - open a pseudo-terminal device  
=posix_openpt - open a pseudo-terminal device 
@f /functions/posix_spawn.html 
@t posix_spawn, posix_spawnp - spawn a process (ADVANCED REALTIME)  
=posix_spawn, posix_spawnp - spawn a process (ADVANCED REALTIME) 
@f /functions/posix_spawn_file_actions_addclose.html 
@t posix_spawn_file_actions_addclose, posix_spawn_file_actions_addopen - add close or open action to spawn file actions object (ADVANCED REALTIME)  
=posix_spawn_file_actions_addclose, posix_spawn_file_actions_addopen - add close or open action to spawn file actions object (ADVANCED REALTIME) 
@f /functions/posix_spawn_file_actions_adddup2.html 
@t posix_spawn_file_actions_adddup2 - add dup2 action to spawn file actions object (ADVANCED REALTIME)  
=posix_spawn_file_actions_adddup2 - add dup2 action to spawn file actions object (ADVANCED REALTIME) 
@f /functions/posix_spawn_file_actions_addopen.html 
@t posix_spawn_file_actions_addopen - add open action to spawn file actions object (ADVANCED REALTIME)  
=posix_spawn_file_actions_addopen - add open action to spawn file actions object (ADVANCED REALTIME) 
@f /functions/posix_spawn_file_actions_destroy.html 
@t posix_spawn_file_actions_destroy, posix_spawn_file_actions_init - destroy and initialize spawn file actions object (ADVANCED REALTIME)  
=posix_spawn_file_actions_destroy, posix_spawn_file_actions_init - destroy and initialize spawn file actions object (ADVANCED REALTIME) 
@f /functions/posix_spawnattr_destroy.html 
@t posix_spawnattr_destroy, posix_spawnattr_init - destroy and initialize spawn attributes object (ADVANCED REALTIME)  
=posix_spawnattr_destroy, posix_spawnattr_init - destroy and initialize spawn attributes object (ADVANCED REALTIME) 
@f /functions/posix_spawnattr_getflags.html 
@t posix_spawnattr_getflags, posix_spawnattr_setflags - get and set the spawn-flags attribute of a spawn attributes object (ADVANCED REALTIME)  
=posix_spawnattr_getflags, posix_spawnattr_setflags - get and set the spawn-flags attribute of a spawn attributes object (ADVANCED REALTIME) 
@f /functions/posix_spawnattr_getpgroup.html 
@t posix_spawnattr_getpgroup, posix_spawnattr_setpgroup - get and set the spawn-pgroup attribute of a spawn attributes object (ADVANCED REALTIME)  
=posix_spawnattr_getpgroup, posix_spawnattr_setpgroup - get and set the spawn-pgroup attribute of a spawn attributes object (ADVANCED REALTIME) 
@f /functions/posix_spawnattr_getschedparam.html 
@t posix_spawnattr_getschedparam, posix_spawnattr_setschedparam - get and set the spawn-schedparam attribute of a spawn attributes object (ADVANCED REALTIME)  
=posix_spawnattr_getschedparam, posix_spawnattr_setschedparam - get and set the spawn-schedparam attribute of a spawn attributes object (ADVANCED REALTIME) 
@f /functions/posix_spawnattr_getschedpolicy.html 
@t posix_spawnattr_getschedpolicy, posix_spawnattr_setschedpolicy - get and set the spawn-schedpolicy attribute of a spawn attributes object (ADVANCED REALTIME)  
=posix_spawnattr_getschedpolicy, posix_spawnattr_setschedpolicy - get and set the spawn-schedpolicy attribute of a spawn attributes object (ADVANCED REALTIME) 
@f /functions/posix_spawnattr_getsigdefault.html 
@t posix_spawnattr_getsigdefault, posix_spawnattr_setsigdefault - get and set the spawn-sigdefault attribute of a spawn attributes object (ADVANCED REALTIME)  
=posix_spawnattr_getsigdefault, posix_spawnattr_setsigdefault - get and set the spawn-sigdefault attribute of a spawn attributes object (ADVANCED REALTIME) 
@f /functions/posix_spawnattr_getsigmask.html 
@t posix_spawnattr_getsigmask, posix_spawnattr_setsigmask - get and set the spawn-sigmask attribute of a spawn attributes object (ADVANCED REALTIME)  
=posix_spawnattr_getsigmask, posix_spawnattr_setsigmask - get and set the spawn-sigmask attribute of a spawn attributes object (ADVANCED REALTIME) 
@f /functions/posix_spawnattr_init.html 
@t posix_spawnattr_init - initialize the spawn attributes object (ADVANCED REALTIME)  
=posix_spawnattr_init - initialize the spawn attributes object (ADVANCED REALTIME) 
@f /functions/posix_spawnattr_setflags.html 
@t posix_spawnattr_setflags - set the spawn-flags attribute of a spawn attributes object (ADVANCED REALTIME)  
=posix_spawnattr_setflags - set the spawn-flags attribute of a spawn attributes object (ADVANCED REALTIME) 
@f /functions/posix_spawnattr_setpgroup.html 
@t posix_spawnattr_setpgroup - set the spawn-pgroup attribute of a spawn attributes object (ADVANCED REALTIME)  
=posix_spawnattr_setpgroup - set the spawn-pgroup attribute of a spawn attributes object (ADVANCED REALTIME) 
@f /functions/posix_spawnattr_setschedparam.html 
@t posix_spawnattr_setschedparam - set the spawn-schedparam attribute of a spawn attributes object (ADVANCED REALTIME)  
=posix_spawnattr_setschedparam - set the spawn-schedparam attribute of a spawn attributes object (ADVANCED REALTIME) 
@f /functions/posix_spawnattr_setschedpolicy.html 
@t posix_spawnattr_setschedpolicy - set the spawn-schedpolicy attribute of a spawn attributes object (ADVANCED REALTIME)  
=posix_spawnattr_setschedpolicy - set the spawn-schedpolicy attribute of a spawn attributes object (ADVANCED REALTIME) 
@f /functions/posix_spawnattr_setsigdefault.html 
@t posix_spawnattr_setsigdefault - set the spawn-sigdefault attribute of a spawn attributes object (ADVANCED REALTIME)  
=posix_spawnattr_setsigdefault - set the spawn-sigdefault attribute of a spawn attributes object (ADVANCED REALTIME) 
@f /functions/posix_spawnattr_setsigmask.html 
@t posix_spawnattr_setsigmask - set the spawn-sigmask attribute of a spawn attributes object (ADVANCED REALTIME)  
=posix_spawnattr_setsigmask - set the spawn-sigmask attribute of a spawn attributes object (ADVANCED REALTIME) 
@f /functions/posix_spawnp.html 
@t posix_spawnp - spawn a process (ADVANCED REALTIME)  
=posix_spawnp - spawn a process (ADVANCED REALTIME) 
@f /functions/posix_trace_attr_destroy.html 
@t posix_trace_attr_destroy, posix_trace_attr_init - destroy and initialize the trace stream attributes object (TRACING)  
=posix_trace_attr_destroy, posix_trace_attr_init - destroy and initialize the trace stream attributes object (TRACING) 
@f /functions/posix_trace_attr_getclockres.html 
@t posix_trace_attr_getclockres, posix_trace_attr_getcreatetime, posix_trace_attr_getgenversion, posix_trace_attr_getname, posix_trace_attr_setname - retrieve and set information about a trace stream (TRACING)  
=posix_trace_attr_getclockres, posix_trace_attr_getcreatetime, posix_trace_attr_getgenversion, posix_trace_attr_getname, posix_trace_attr_setname - retrieve and set information about a trace stream (TRACING) 
@f /functions/posix_trace_attr_getinherited.html 
@t posix_trace_attr_getinherited, posix_trace_attr_getlogfullpolicy, posix_trace_attr_getstreamfullpolicy, posix_trace_attr_setinherited, posix_trace_attr_setlogfullpolicy, posix_trace_attr_setstreamfullpolicy - retrieve and set the behavior of a trace stream (TRACING)  
=posix_trace_attr_getinherited, posix_trace_attr_getlogfullpolicy, posix_trace_attr_getstreamfullpolicy, posix_trace_attr_setinherited, posix_trace_attr_setlogfullpolicy, posix_trace_attr_setstreamfullpolicy - retrieve and set the behavior of a trace stream (TRACING) 
@f /functions/posix_trace_attr_getlogsize.html 
@t posix_trace_attr_getlogsize, posix_trace_attr_getmaxdatasize, posix_trace_attr_getmaxsystemeventsize, posix_trace_attr_getmaxusereventsize, posix_trace_attr_getstreamsize, posix_trace_attr_setlogsize, posix_trace_attr_setmaxdatasize, posix_trace_attr_setstreamsize - retrieve and set trace stream size attributes (TRACING)  
=posix_trace_attr_getlogsize, posix_trace_attr_getmaxdatasize, posix_trace_attr_getmaxsystemeventsize, posix_trace_attr_getmaxusereventsize, posix_trace_attr_getstreamsize, posix_trace_attr_setlogsize, posix_trace_attr_setmaxdatasize, posix_trace_attr_setstreamsize - retrieve and set trace stream size attributes (TRACING) 
@f /functions/posix_trace_attr_getname.html 
@t posix_trace_attr_getname - retrieve and set information about a trace stream (TRACING)  
=posix_trace_attr_getname - retrieve and set information about a trace stream (TRACING) 
@f /functions/posix_trace_attr_getstreamfullpolicy.html 
@t posix_trace_attr_getstreamfullpolicy - retrieve and set the behavior of a trace stream (TRACING)  
=posix_trace_attr_getstreamfullpolicy - retrieve and set the behavior of a trace stream (TRACING) 
@f /functions/posix_trace_attr_getstreamsize.html 
@t posix_trace_attr_getstreamsize - retrieve and set trace stream size attributes (TRACING)  
=posix_trace_attr_getstreamsize - retrieve and set trace stream size attributes (TRACING) 
@f /functions/posix_trace_attr_init.html 
@t posix_trace_attr_init - initialize the trace stream attributes object (TRACING)  
=posix_trace_attr_init - initialize the trace stream attributes object (TRACING) 
@f /functions/posix_trace_attr_setinherited.html 
@t posix_trace_attr_setinherited, posix_trace_attr_setlogfullpolicy - retrieve and set the behavior of a trace stream (TRACING)  
=posix_trace_attr_setinherited, posix_trace_attr_setlogfullpolicy - retrieve and set the behavior of a trace stream (TRACING) 
@f /functions/posix_trace_attr_setlogsize.html 
@t posix_trace_attr_setlogsize, posix_trace_attr_setmaxdatasize - retrieve and set trace stream size attributes (TRACING)  
=posix_trace_attr_setlogsize, posix_trace_attr_setmaxdatasize - retrieve and set trace stream size attributes (TRACING) 
@f /functions/posix_trace_attr_setname.html 
@t posix_trace_attr_setname - retrieve and set information about a trace stream (TRACING)  
=posix_trace_attr_setname - retrieve and set information about a trace stream (TRACING) 
@f /functions/posix_trace_attr_setstreamfullpolicy.html 
@t posix_trace_attr_setstreamfullpolicy - retrieve and set the behavior of a trace stream (TRACING)  
=posix_trace_attr_setstreamfullpolicy - retrieve and set the behavior of a trace stream (TRACING) 
@f /functions/posix_trace_attr_setstreamsize.html 
@t posix_trace_attr_setstreamsize - retrieve and set trace stream size attributes (TRACING)  
=posix_trace_attr_setstreamsize - retrieve and set trace stream size attributes (TRACING) 
@f /functions/posix_trace_clear.html 
@t posix_trace_clear - clear trace stream and trace log (TRACING)  
=posix_trace_clear - clear trace stream and trace log (TRACING) 
@f /functions/posix_trace_close.html 
@t posix_trace_close, posix_trace_open, posix_trace_rewind - trace log management (TRACING)  
=posix_trace_close, posix_trace_open, posix_trace_rewind - trace log management (TRACING) 
@f /functions/posix_trace_create.html 
@t posix_trace_create, posix_trace_create_withlog, posix_trace_flush, posix_trace_shutdown - trace stream initialization, flush, and shutdown from a process (TRACING)  
=posix_trace_create, posix_trace_create_withlog, posix_trace_flush, posix_trace_shutdown - trace stream initialization, flush, and shutdown from a process (TRACING) 
@f /functions/posix_trace_event.html 
@t posix_trace_event, posix_trace_eventid_open - trace functions for instrumenting application code (TRACING)  
=posix_trace_event, posix_trace_eventid_open - trace functions for instrumenting application code (TRACING) 
@f /functions/posix_trace_eventid_equal.html 
@t posix_trace_eventid_equal, posix_trace_eventid_get_name, posix_trace_trid_eventid_open - manipulate the trace event type identifier (TRACING)  
=posix_trace_eventid_equal, posix_trace_eventid_get_name, posix_trace_trid_eventid_open - manipulate the trace event type identifier (TRACING) 
@f /functions/posix_trace_eventid_open.html 
@t posix_trace_eventid_open - trace functions for instrumenting application code (TRACING)  
=posix_trace_eventid_open - trace functions for instrumenting application code (TRACING) 
@f /functions/posix_trace_eventset_add.html 
@t posix_trace_eventset_add, posix_trace_eventset_del, posix_trace_eventset_empty, posix_trace_eventset_fill, posix_trace_eventset_ismember - manipulate trace event type sets (TRACING)  
=posix_trace_eventset_add, posix_trace_eventset_del, posix_trace_eventset_empty, posix_trace_eventset_fill, posix_trace_eventset_ismember - manipulate trace event type sets (TRACING) 
@f /functions/posix_trace_eventtypelist_getnext_id.html 
@t posix_trace_eventtypelist_getnext_id, posix_trace_eventtypelist_rewind - iterate over a mapping of trace event types (TRACING)  
=posix_trace_eventtypelist_getnext_id, posix_trace_eventtypelist_rewind - iterate over a mapping of trace event types (TRACING) 
@f /functions/posix_trace_flush.html 
@t posix_trace_flush - trace stream flush from a process (TRACING)  
=posix_trace_flush - trace stream flush from a process (TRACING) 
@f /functions/posix_trace_get_attr.html 
@t posix_trace_get_attr, posix_trace_get_status - retrieve the trace attributes or trace status (TRACING)  
=posix_trace_get_attr, posix_trace_get_status - retrieve the trace attributes or trace status (TRACING) 
@f /functions/posix_trace_get_filter.html 
@t posix_trace_get_filter, posix_trace_set_filter - retrieve and set the filter of an initialized trace stream (TRACING)  
=posix_trace_get_filter, posix_trace_set_filter - retrieve and set the filter of an initialized trace stream (TRACING) 
@f /functions/posix_trace_get_status.html 
@t posix_trace_get_status - retrieve the trace status (TRACING)  
=posix_trace_get_status - retrieve the trace status (TRACING) 
@f /functions/posix_trace_getnext_event.html 
@t posix_trace_getnext_event, posix_trace_timedgetnext_event, posix_trace_trygetnext_event - retrieve a trace event (TRACING)  
=posix_trace_getnext_event, posix_trace_timedgetnext_event, posix_trace_trygetnext_event - retrieve a trace event (TRACING) 
@f /functions/posix_trace_open.html 
@t posix_trace_open, posix_trace_rewind - trace log management (TRACING)  
=posix_trace_open, posix_trace_rewind - trace log management (TRACING) 
@f /functions/posix_trace_set_filter.html 
@t posix_trace_set_filter - set filter of an initialized trace stream (TRACING)  
=posix_trace_set_filter - set filter of an initialized trace stream (TRACING) 
@f /functions/posix_trace_shutdown.html 
@t posix_trace_shutdown - trace stream shutdown from a process (TRACING)  
=posix_trace_shutdown - trace stream shutdown from a process (TRACING) 
@f /functions/posix_trace_start.html 
@t posix_trace_start, posix_trace_stop - trace start and stop (TRACING)  
=posix_trace_start, posix_trace_stop - trace start and stop (TRACING) 
@f /functions/posix_trace_timedgetnext_event.html 
@t posix_trace_timedgetnext_event - retrieve a trace event (TRACING)  
=posix_trace_timedgetnext_event - retrieve a trace event (TRACING) 
@f /functions/posix_trace_trid_eventid_open.html 
@t posix_trace_trid_eventid_open - open a trace event type identifier (TRACING)  
=posix_trace_trid_eventid_open - open a trace event type identifier (TRACING) 
@f /functions/posix_trace_trygetnext_event.html 
@t posix_trace_trygetnext_event - retrieve a trace event (TRACING)  
=posix_trace_trygetnext_event - retrieve a trace event (TRACING) 
@f /functions/posix_typed_mem_get_info.html 
@t posix_typed_mem_get_info - query typed memory information (ADVANCED REALTIME)  
=posix_typed_mem_get_info - query typed memory information (ADVANCED REALTIME) 
@f /functions/posix_typed_mem_open.html 
@t posix_typed_mem_open - open a typed memory object (ADVANCED REALTIME)  
=posix_typed_mem_open - open a typed memory object (ADVANCED REALTIME) 
@f /functions/pow.html 
@t pow, powf, powl - power function  
=pow, powf, powl - power function 
@f /functions/pread.html 
@t pread - read from a file  
=pread - read from a file 
@f /functions/printf.html 
@t printf - print formatted output  
=printf - print formatted output 
@f /functions/pselect.html 
@t pselect, select - synchronous I/O multiplexing  
=pselect, select - synchronous I/O multiplexing 
@f /functions/psiginfo.html 
@t psiginfo, psignal - print signal information to standard error  
=psiginfo, psignal - print signal information to standard error 
@f /functions/pthread_atfork.html 
@t pthread_atfork - register fork handlers  
=pthread_atfork - register fork handlers 
@f /functions/pthread_attr_destroy.html 
@t pthread_attr_destroy, pthread_attr_init - destroy and initialize the thread attributes object  
=pthread_attr_destroy, pthread_attr_init - destroy and initialize the thread attributes object 
@f /functions/pthread_attr_getdetachstate.html 
@t pthread_attr_getdetachstate, pthread_attr_setdetachstate - get and set the detachstate attribute  
=pthread_attr_getdetachstate, pthread_attr_setdetachstate - get and set the detachstate attribute 
@f /functions/pthread_attr_getguardsize.html 
@t pthread_attr_getguardsize, pthread_attr_setguardsize - get and set the thread guardsize attribute  
=pthread_attr_getguardsize, pthread_attr_setguardsize - get and set the thread guardsize attribute 
@f /functions/pthread_attr_getinheritsched.html 
@t pthread_attr_getinheritsched, pthread_attr_setinheritsched - get and set the inheritsched attribute (REALTIME THREADS)  
=pthread_attr_getinheritsched, pthread_attr_setinheritsched - get and set the inheritsched attribute (REALTIME THREADS) 
@f /functions/pthread_attr_getschedparam.html 
@t pthread_attr_getschedparam, pthread_attr_setschedparam - get and set the schedparam attribute  
=pthread_attr_getschedparam, pthread_attr_setschedparam - get and set the schedparam attribute 
@f /functions/pthread_attr_getschedpolicy.html 
@t pthread_attr_getschedpolicy, pthread_attr_setschedpolicy - get and set the schedpolicy attribute (REALTIME THREADS)  
=pthread_attr_getschedpolicy, pthread_attr_setschedpolicy - get and set the schedpolicy attribute (REALTIME THREADS) 
@f /functions/pthread_attr_getscope.html 
@t pthread_attr_getscope, pthread_attr_setscope - get and set the contentionscope attribute (REALTIME THREADS)  
=pthread_attr_getscope, pthread_attr_setscope - get and set the contentionscope attribute (REALTIME THREADS) 
@f /functions/pthread_attr_getstack.html 
@t pthread_attr_getstack, pthread_attr_setstack - get and set stack attributes  
=pthread_attr_getstack, pthread_attr_setstack - get and set stack attributes 
@f /functions/pthread_attr_getstacksize.html 
@t pthread_attr_getstacksize, pthread_attr_setstacksize - get and set the stacksize attribute  
=pthread_attr_getstacksize, pthread_attr_setstacksize - get and set the stacksize attribute 
@f /functions/pthread_attr_init.html 
@t pthread_attr_init - initialize the thread attributes object  
=pthread_attr_init - initialize the thread attributes object 
@f /functions/pthread_attr_setdetachstate.html 
@t pthread_attr_setdetachstate - set the detachstate attribute  
=pthread_attr_setdetachstate - set the detachstate attribute 
@f /functions/pthread_attr_setguardsize.html 
@t pthread_attr_setguardsize - set the thread guardsize attribute  
=pthread_attr_setguardsize - set the thread guardsize attribute 
@f /functions/pthread_attr_setinheritsched.html 
@t pthread_attr_setinheritsched - set the inheritsched attribute (REALTIME THREADS)  
=pthread_attr_setinheritsched - set the inheritsched attribute (REALTIME THREADS) 
@f /functions/pthread_attr_setschedparam.html 
@t pthread_attr_setschedparam - set the schedparam attribute  
=pthread_attr_setschedparam - set the schedparam attribute 
@f /functions/pthread_attr_setschedpolicy.html 
@t pthread_attr_setschedpolicy - set the schedpolicy attribute (REALTIME THREADS)  
=pthread_attr_setschedpolicy - set the schedpolicy attribute (REALTIME THREADS) 
@f /functions/pthread_attr_setscope.html 
@t pthread_attr_setscope - set the contentionscope attribute (REALTIME THREADS)  
=pthread_attr_setscope - set the contentionscope attribute (REALTIME THREADS) 
@f /functions/pthread_attr_setstack.html 
@t pthread_attr_setstack - set the stack attribute  
=pthread_attr_setstack - set the stack attribute 
@f /functions/pthread_attr_setstacksize.html 
@t pthread_attr_setstacksize - set the stacksize attribute  
=pthread_attr_setstacksize - set the stacksize attribute 
@f /functions/pthread_barrier_destroy.html 
@t pthread_barrier_destroy, pthread_barrier_init - destroy and initialize a barrier object  
=pthread_barrier_destroy, pthread_barrier_init - destroy and initialize a barrier object 
@f /functions/pthread_barrier_wait.html 
@t pthread_barrier_wait - synchronize at a barrier  
=pthread_barrier_wait - synchronize at a barrier 
@f /functions/pthread_barrierattr_destroy.html 
@t pthread_barrierattr_destroy, pthread_barrierattr_init - destroy and initialize the barrier attributes object  
=pthread_barrierattr_destroy, pthread_barrierattr_init - destroy and initialize the barrier attributes object 
@f /functions/pthread_barrierattr_getpshared.html 
@t pthread_barrierattr_getpshared, pthread_barrierattr_setpshared - get and set the process-shared attribute of the barrier attributes object  
=pthread_barrierattr_getpshared, pthread_barrierattr_setpshared - get and set the process-shared attribute of the barrier attributes object 
@f /functions/pthread_barrierattr_init.html 
@t pthread_barrierattr_init - initialize the barrier attributes object  
=pthread_barrierattr_init - initialize the barrier attributes object 
@f /functions/pthread_barrierattr_setpshared.html 
@t pthread_barrierattr_setpshared - set the process-shared attribute of the barrier attributes object  
=pthread_barrierattr_setpshared - set the process-shared attribute of the barrier attributes object 
@f /functions/pthread_cancel.html 
@t pthread_cancel - cancel execution of a thread  
=pthread_cancel - cancel execution of a thread 
@f /functions/pthread_cleanup_pop.html 
@t pthread_cleanup_pop, pthread_cleanup_push - establish cancellation handlers  
=pthread_cleanup_pop, pthread_cleanup_push - establish cancellation handlers 
@f /functions/pthread_cond_broadcast.html 
@t pthread_cond_broadcast, pthread_cond_signal - broadcast or signal a condition  
=pthread_cond_broadcast, pthread_cond_signal - broadcast or signal a condition 
@f /functions/pthread_cond_destroy.html 
@t pthread_cond_destroy, pthread_cond_init - destroy and initialize condition variables  
=pthread_cond_destroy, pthread_cond_init - destroy and initialize condition variables 
@f /functions/pthread_cond_signal.html 
@t pthread_cond_signal - signal a condition  
=pthread_cond_signal - signal a condition 
@f /functions/pthread_cond_timedwait.html 
@t pthread_cond_timedwait, pthread_cond_wait - wait on a condition  
=pthread_cond_timedwait, pthread_cond_wait - wait on a condition 
@f /functions/pthread_condattr_destroy.html 
@t pthread_condattr_destroy, pthread_condattr_init - destroy and initialize the condition variable attributes object  
=pthread_condattr_destroy, pthread_condattr_init - destroy and initialize the condition variable attributes object 
@f /functions/pthread_condattr_getclock.html 
@t pthread_condattr_getclock, pthread_condattr_setclock - get and set the clock selection condition variable attribute  
=pthread_condattr_getclock, pthread_condattr_setclock - get and set the clock selection condition variable attribute 
@f /functions/pthread_condattr_getpshared.html 
@t pthread_condattr_getpshared, pthread_condattr_setpshared - get and set the process-shared condition variable attributes  
=pthread_condattr_getpshared, pthread_condattr_setpshared - get and set the process-shared condition variable attributes 
@f /functions/pthread_condattr_init.html 
@t pthread_condattr_init - initialize the condition variable attributes object  
=pthread_condattr_init - initialize the condition variable attributes object 
@f /functions/pthread_condattr_setclock.html 
@t pthread_condattr_setclock - set the clock selection condition variable attribute  
=pthread_condattr_setclock - set the clock selection condition variable attribute 
@f /functions/pthread_condattr_setpshared.html 
@t pthread_condattr_setpshared - set the process-shared condition variable attribute  
=pthread_condattr_setpshared - set the process-shared condition variable attribute 
@f /functions/pthread_create.html 
@t pthread_create - thread creation  
=pthread_create - thread creation 
@f /functions/pthread_detach.html 
@t pthread_detach - detach a thread  
=pthread_detach - detach a thread 
@f /functions/pthread_equal.html 
@t pthread_equal - compare thread IDs  
=pthread_equal - compare thread IDs 
@f /functions/pthread_exit.html 
@t pthread_exit - thread termination  
=pthread_exit - thread termination 
@f /functions/pthread_getconcurrency.html 
@t pthread_getconcurrency, pthread_setconcurrency - get and set the level of concurrency  
=pthread_getconcurrency, pthread_setconcurrency - get and set the level of concurrency 
@f /functions/pthread_getcpuclockid.html 
@t pthread_getcpuclockid - access a thread CPU-time clock (ADVANCED REALTIME THREADS)  
=pthread_getcpuclockid - access a thread CPU-time clock (ADVANCED REALTIME THREADS) 
@f /functions/pthread_getschedparam.html 
@t pthread_getschedparam, pthread_setschedparam - dynamic thread scheduling parameters access (REALTIME THREADS)  
=pthread_getschedparam, pthread_setschedparam - dynamic thread scheduling parameters access (REALTIME THREADS) 
@f /functions/pthread_getspecific.html 
@t pthread_getspecific, pthread_setspecific - thread-specific data management  
=pthread_getspecific, pthread_setspecific - thread-specific data management 
@f /functions/pthread_join.html 
@t pthread_join - wait for thread termination  
=pthread_join - wait for thread termination 
@f /functions/pthread_key_create.html 
@t pthread_key_create - thread-specific data key creation  
=pthread_key_create - thread-specific data key creation 
@f /functions/pthread_key_delete.html 
@t pthread_key_delete - thread-specific data key deletion  
=pthread_key_delete - thread-specific data key deletion 
@f /functions/pthread_kill.html 
@t pthread_kill - send a signal to a thread  
=pthread_kill - send a signal to a thread 
@f /functions/pthread_mutex_consistent.html 
@t pthread_mutex_consistent - mark state protected by robust mutex as consistent  
=pthread_mutex_consistent - mark state protected by robust mutex as consistent 
@f /functions/pthread_mutex_destroy.html 
@t pthread_mutex_destroy, pthread_mutex_init - destroy and initialize a mutex  
=pthread_mutex_destroy, pthread_mutex_init - destroy and initialize a mutex 
@f /functions/pthread_mutex_getprioceiling.html 
@t pthread_mutex_getprioceiling, pthread_mutex_setprioceiling - get and set the priority ceiling of a mutex (REALTIME THREADS)  
=pthread_mutex_getprioceiling, pthread_mutex_setprioceiling - get and set the priority ceiling of a mutex (REALTIME THREADS) 
@f /functions/pthread_mutex_init.html 
@t pthread_mutex_init - destroy and initialize a mutex  
=pthread_mutex_init - destroy and initialize a mutex 
@f /functions/pthread_mutex_lock.html 
@t pthread_mutex_lock, pthread_mutex_trylock, pthread_mutex_unlock - lock and unlock a mutex  
=pthread_mutex_lock, pthread_mutex_trylock, pthread_mutex_unlock - lock and unlock a mutex 
@f /functions/pthread_mutex_setprioceiling.html 
@t pthread_mutex_setprioceiling - change the priority ceiling of a mutex (REALTIME THREADS)  
=pthread_mutex_setprioceiling - change the priority ceiling of a mutex (REALTIME THREADS) 
@f /functions/pthread_mutex_timedlock.html 
@t pthread_mutex_timedlock - lock a mutex  
=pthread_mutex_timedlock - lock a mutex 
@f /functions/pthread_mutex_trylock.html 
@t pthread_mutex_trylock, pthread_mutex_unlock - lock and unlock a mutex  
=pthread_mutex_trylock, pthread_mutex_unlock - lock and unlock a mutex 
@f /functions/pthread_mutexattr_destroy.html 
@t pthread_mutexattr_destroy, pthread_mutexattr_init - destroy and initialize the mutex attributes object  
=pthread_mutexattr_destroy, pthread_mutexattr_init - destroy and initialize the mutex attributes object 
@f /functions/pthread_mutexattr_getprioceiling.html 
@t pthread_mutexattr_getprioceiling, pthread_mutexattr_setprioceiling - get and set the prioceiling attribute of the mutex attributes object (REALTIME THREADS)  
=pthread_mutexattr_getprioceiling, pthread_mutexattr_setprioceiling - get and set the prioceiling attribute of the mutex attributes object (REALTIME THREADS) 
@f /functions/pthread_mutexattr_getprotocol.html 
@t pthread_mutexattr_getprotocol, pthread_mutexattr_setprotocol - get and set the protocol attribute of the mutex attributes object (REALTIME THREADS)  
=pthread_mutexattr_getprotocol, pthread_mutexattr_setprotocol - get and set the protocol attribute of the mutex attributes object (REALTIME THREADS) 
@f /functions/pthread_mutexattr_getpshared.html 
@t pthread_mutexattr_getpshared, pthread_mutexattr_setpshared - get and set the process-shared attribute  
=pthread_mutexattr_getpshared, pthread_mutexattr_setpshared - get and set the process-shared attribute 
@f /functions/pthread_mutexattr_getrobust.html 
@t pthread_mutexattr_getrobust, pthread_mutexattr_setrobust - get and set the mutex robust attribute  
=pthread_mutexattr_getrobust, pthread_mutexattr_setrobust - get and set the mutex robust attribute 
@f /functions/pthread_mutexattr_gettype.html 
@t pthread_mutexattr_gettype, pthread_mutexattr_settype - get and set the mutex type attribute  
=pthread_mutexattr_gettype, pthread_mutexattr_settype - get and set the mutex type attribute 
@f /functions/pthread_mutexattr_init.html 
@t pthread_mutexattr_init - initialize the mutex attributes object  
=pthread_mutexattr_init - initialize the mutex attributes object 
@f /functions/pthread_mutexattr_setprioceiling.html 
@t pthread_mutexattr_setprioceiling - set the prioceiling attribute of the mutex attributes object (REALTIME THREADS)  
=pthread_mutexattr_setprioceiling - set the prioceiling attribute of the mutex attributes object (REALTIME THREADS) 
@f /functions/pthread_mutexattr_setprotocol.html 
@t pthread_mutexattr_setprotocol - set the protocol attribute of the mutex attributes object (REALTIME THREADS)  
=pthread_mutexattr_setprotocol - set the protocol attribute of the mutex attributes object (REALTIME THREADS) 
@f /functions/pthread_mutexattr_setpshared.html 
@t pthread_mutexattr_setpshared - set the process-shared attribute  
=pthread_mutexattr_setpshared - set the process-shared attribute 
@f /functions/pthread_mutexattr_setrobust.html 
@t pthread_mutexattr_setrobust - get and set the mutex robust attribute  
=pthread_mutexattr_setrobust - get and set the mutex robust attribute 
@f /functions/pthread_mutexattr_settype.html 
@t pthread_mutexattr_settype - set the mutex type attribute  
=pthread_mutexattr_settype - set the mutex type attribute 
@f /functions/pthread_once.html 
@t pthread_once - dynamic package initialization  
=pthread_once - dynamic package initialization 
@f /functions/pthread_rwlock_destroy.html 
@t pthread_rwlock_destroy, pthread_rwlock_init - destroy and initialize a read-write lock object  
=pthread_rwlock_destroy, pthread_rwlock_init - destroy and initialize a read-write lock object 
@f /functions/pthread_rwlock_rdlock.html 
@t pthread_rwlock_rdlock, pthread_rwlock_tryrdlock - lock a read-write lock object for reading  
=pthread_rwlock_rdlock, pthread_rwlock_tryrdlock - lock a read-write lock object for reading 
@f /functions/pthread_rwlock_timedrdlock.html 
@t pthread_rwlock_timedrdlock - lock a read-write lock for reading  
=pthread_rwlock_timedrdlock - lock a read-write lock for reading 
@f /functions/pthread_rwlock_timedwrlock.html 
@t pthread_rwlock_timedwrlock - lock a read-write lock for writing  
=pthread_rwlock_timedwrlock - lock a read-write lock for writing 
@f /functions/pthread_rwlock_tryrdlock.html 
@t pthread_rwlock_tryrdlock - lock a read-write lock object for reading  
=pthread_rwlock_tryrdlock - lock a read-write lock object for reading 
@f /functions/pthread_rwlock_trywrlock.html 
@t pthread_rwlock_trywrlock, pthread_rwlock_wrlock - lock a read-write lock object for writing  
=pthread_rwlock_trywrlock, pthread_rwlock_wrlock - lock a read-write lock object for writing 
@f /functions/pthread_rwlock_unlock.html 
@t pthread_rwlock_unlock - unlock a read-write lock object  
=pthread_rwlock_unlock - unlock a read-write lock object 
@f /functions/pthread_rwlock_wrlock.html 
@t pthread_rwlock_wrlock - lock a read-write lock object for writing  
=pthread_rwlock_wrlock - lock a read-write lock object for writing 
@f /functions/pthread_rwlockattr_destroy.html 
@t pthread_rwlockattr_destroy, pthread_rwlockattr_init - destroy and initialize the read-write lock attributes object  
=pthread_rwlockattr_destroy, pthread_rwlockattr_init - destroy and initialize the read-write lock attributes object 
@f /functions/pthread_rwlockattr_getpshared.html 
@t pthread_rwlockattr_getpshared, pthread_rwlockattr_setpshared - get and set the process-shared attribute of the read-write lock attributes object  
=pthread_rwlockattr_getpshared, pthread_rwlockattr_setpshared - get and set the process-shared attribute of the read-write lock attributes object 
@f /functions/pthread_rwlockattr_init.html 
@t pthread_rwlockattr_init - initialize the read-write lock attributes object  
=pthread_rwlockattr_init - initialize the read-write lock attributes object 
@f /functions/pthread_rwlockattr_setpshared.html 
@t pthread_rwlockattr_setpshared - set the process-shared attribute of the read-write lock attributes object  
=pthread_rwlockattr_setpshared - set the process-shared attribute of the read-write lock attributes object 
@f /functions/pthread_self.html 
@t pthread_self - get the calling thread ID  
=pthread_self - get the calling thread ID 
@f /functions/pthread_setcancelstate.html 
@t pthread_setcancelstate, pthread_setcanceltype, pthread_testcancel - set cancelability state  
=pthread_setcancelstate, pthread_setcanceltype, pthread_testcancel - set cancelability state 
@f /functions/pthread_setconcurrency.html 
@t pthread_setconcurrency - set the level of concurrency  
=pthread_setconcurrency - set the level of concurrency 
@f /functions/pthread_setschedparam.html 
@t pthread_setschedparam - dynamic thread scheduling parameters access (REALTIME THREADS)  
=pthread_setschedparam - dynamic thread scheduling parameters access (REALTIME THREADS) 
@f /functions/pthread_setschedprio.html 
@t pthread_setschedprio - dynamic thread scheduling parameters access (REALTIME THREADS)  
=pthread_setschedprio - dynamic thread scheduling parameters access (REALTIME THREADS) 
@f /functions/pthread_setspecific.html 
@t pthread_setspecific - thread-specific data management  
=pthread_setspecific - thread-specific data management 
@f /functions/pthread_sigmask.html 
@t pthread_sigmask, sigprocmask - examine and change blocked signals  
=pthread_sigmask, sigprocmask - examine and change blocked signals 
@f /functions/pthread_spin_destroy.html 
@t pthread_spin_destroy, pthread_spin_init - destroy or initialize a spin lock object  
=pthread_spin_destroy, pthread_spin_init - destroy or initialize a spin lock object 
@f /functions/pthread_spin_lock.html 
@t pthread_spin_lock, pthread_spin_trylock - lock a spin lock object  
=pthread_spin_lock, pthread_spin_trylock - lock a spin lock object 
@f /functions/pthread_spin_unlock.html 
@t pthread_spin_unlock - unlock a spin lock object  
=pthread_spin_unlock - unlock a spin lock object 
@f /functions/pthread_testcancel.html 
@t pthread_testcancel - set cancelability state  
=pthread_testcancel - set cancelability state 
@f /functions/ptsname.html 
@t ptsname - get name of the slave pseudo-terminal device  
=ptsname - get name of the slave pseudo-terminal device 
@f /functions/putc.html 
@t putc - put a byte on a stream  
=putc - put a byte on a stream 
@f /functions/putc_unlocked.html 
@t putc_unlocked - stdio with explicit client locking  
=putc_unlocked - stdio with explicit client locking 
@f /functions/putchar.html 
@t putchar - put a byte on a stdout stream  
=putchar - put a byte on a stdout stream 
@f /functions/putchar_unlocked.html 
@t putchar_unlocked - stdio with explicit client locking  
=putchar_unlocked - stdio with explicit client locking 
@f /functions/putenv.html 
@t putenv - change or add a value to an environment  
=putenv - change or add a value to an environment 
@f /functions/putmsg.html 
@t putmsg, putpmsg - send a message on a STREAM (STREAMS)  
=putmsg, putpmsg - send a message on a STREAM (STREAMS) 
@f /functions/puts.html 
@t puts - put a string on standard output  
=puts - put a string on standard output 
@f /functions/pututxline.html 
@t pututxline - put an entry into the user accounting database  
=pututxline - put an entry into the user accounting database 
@f /functions/putwc.html 
@t putwc - put a wide character on a stream  
=putwc - put a wide character on a stream 
@f /functions/putwchar.html 
@t putwchar - put a wide character on a stdout stream  
=putwchar - put a wide character on a stdout stream 
@f /functions/pwrite.html 
@t pwrite - write on a file  
=pwrite - write on a file 
@f /functions/qsort.html 
@t qsort - sort a table of data  
=qsort - sort a table of data 
@f /functions/raise.html 
@t raise - send a signal to the executing process  
=raise - send a signal to the executing process 
@f /functions/rand.html 
@t rand, rand_r, srand - pseudo-random number generator  
=rand, rand_r, srand - pseudo-random number generator 
@f /functions/random.html 
@t random - generate pseudo-random number  
=random - generate pseudo-random number 
@f /functions/read.html 
@t pread, read - read from a file  
=pread, read - read from a file 
@f /functions/readdir.html 
@t readdir, readdir_r - read a directory  
=readdir, readdir_r - read a directory 
@f /functions/readlink.html 
@t readlink, readlinkat - read the contents of a symbolic link relative to a directory file descriptor  
=readlink, readlinkat - read the contents of a symbolic link relative to a directory file descriptor 
@f /functions/readv.html 
@t readv - read a vector  
=readv - read a vector 
@f /functions/realloc.html 
@t realloc - memory reallocator  
=realloc - memory reallocator 
@f /functions/realpath.html 
@t realpath - resolve a pathname  
=realpath - resolve a pathname 
@f /functions/recv.html 
@t recv - receive a message from a connected socket  
=recv - receive a message from a connected socket 
@f /functions/recvfrom.html 
@t recvfrom - receive a message from a socket  
=recvfrom - receive a message from a socket 
@f /functions/recvmsg.html 
@t recvmsg - receive a message from a socket  
=recvmsg - receive a message from a socket 
@f /functions/regcomp.html 
@t regcomp, regerror, regexec, regfree - regular expression matching  
=regcomp, regerror, regexec, regfree - regular expression matching 
@f /functions/remainder.html 
@t remainder, remainderf, remainderl - remainder function  
=remainder, remainderf, remainderl - remainder function 
@f /functions/remove.html 
@t remove - remove a file  
=remove - remove a file 
@f /functions/remque.html 
@t remque - remove an element from a queue  
=remque - remove an element from a queue 
@f /functions/remquo.html 
@t remquo, remquof, remquol - remainder functions  
=remquo, remquof, remquol - remainder functions 
@f /functions/rename.html 
@t rename, renameat - rename file relative to directory file descriptor  
=rename, renameat - rename file relative to directory file descriptor 
@f /functions/rewind.html 
@t rewind - reset the file position indicator in a stream  
=rewind - reset the file position indicator in a stream 
@f /functions/rewinddir.html 
@t rewinddir - reset the position of a directory stream to the beginning of a directory  
=rewinddir - reset the position of a directory stream to the beginning of a directory 
@f /functions/rint.html 
@t rint, rintf, rintl - round-to-nearest integral value  
=rint, rintf, rintl - round-to-nearest integral value 
@f /functions/rmdir.html 
@t rmdir - remove a directory  
=rmdir - remove a directory 
@f /functions/round.html 
@t round, roundf, roundl - round to the nearest integer value in a floating-point format  
=round, roundf, roundl - round to the nearest integer value in a floating-point format 
@f /functions/scalbln.html 
@t scalbln, scalblnf, scalblnl, scalbn, scalbnf, scalbnl - compute exponent using FLT_RADIX  
=scalbln, scalblnf, scalblnl, scalbn, scalbnf, scalbnl - compute exponent using FLT_RADIX 
@f /functions/scandir.html 
@t scandir - scan a directory  
=scandir - scan a directory 
@f /functions/scanf.html 
@t scanf - convert formatted input  
=scanf - convert formatted input 
@f /functions/sched_get_priority_max.html 
@t sched_get_priority_max, sched_get_priority_min - get priority limits (REALTIME)  
=sched_get_priority_max, sched_get_priority_min - get priority limits (REALTIME) 
@f /functions/sched_getparam.html 
@t sched_getparam - get scheduling parameters (REALTIME)  
=sched_getparam - get scheduling parameters (REALTIME) 
@f /functions/sched_getscheduler.html 
@t sched_getscheduler - get scheduling policy (REALTIME)  
=sched_getscheduler - get scheduling policy (REALTIME) 
@f /functions/sched_rr_get_interval.html 
@t sched_rr_get_interval - get execution time limits (REALTIME)  
=sched_rr_get_interval - get execution time limits (REALTIME) 
@f /functions/sched_setparam.html 
@t sched_setparam - set scheduling parameters (REALTIME)  
=sched_setparam - set scheduling parameters (REALTIME) 
@f /functions/sched_setscheduler.html 
@t sched_setscheduler - set scheduling policy and parameters (REALTIME)  
=sched_setscheduler - set scheduling policy and parameters (REALTIME) 
@f /functions/sched_yield.html 
@t sched_yield - yield the processor  
=sched_yield - yield the processor 
@f /functions/seed48.html 
@t seed48 - seed a uniformly distributed pseudo-random non-negative long integer generator  
=seed48 - seed a uniformly distributed pseudo-random non-negative long integer generator 
@f /functions/seekdir.html 
@t seekdir - set the position of a directory stream  
=seekdir - set the position of a directory stream 
@f /functions/select.html 
@t select - synchronous I/O multiplexing  
=select - synchronous I/O multiplexing 
@f /functions/sem_close.html 
@t sem_close - close a named semaphore  
=sem_close - close a named semaphore 
@f /functions/sem_destroy.html 
@t sem_destroy - destroy an unnamed semaphore  
=sem_destroy - destroy an unnamed semaphore 
@f /functions/sem_getvalue.html 
@t sem_getvalue - get the value of a semaphore  
=sem_getvalue - get the value of a semaphore 
@f /functions/sem_init.html 
@t sem_init - initialize an unnamed semaphore  
=sem_init - initialize an unnamed semaphore 
@f /functions/sem_open.html 
@t sem_open - initialize and open a named semaphore  
=sem_open - initialize and open a named semaphore 
@f /functions/sem_post.html 
@t sem_post - unlock a semaphore  
=sem_post - unlock a semaphore 
@f /functions/sem_timedwait.html 
@t sem_timedwait - lock a semaphore  
=sem_timedwait - lock a semaphore 
@f /functions/sem_trywait.html 
@t sem_trywait, sem_wait - lock a semaphore  
=sem_trywait, sem_wait - lock a semaphore 
@f /functions/sem_unlink.html 
@t sem_unlink - remove a named semaphore  
=sem_unlink - remove a named semaphore 
@f /functions/sem_wait.html 
@t sem_wait - lock a semaphore  
=sem_wait - lock a semaphore 
@f /functions/semctl.html 
@t semctl - XSI semaphore control operations  
=semctl - XSI semaphore control operations 
@f /functions/semget.html 
@t semget - get set of XSI semaphores  
=semget - get set of XSI semaphores 
@f /functions/semop.html 
@t semop - XSI semaphore operations  
=semop - XSI semaphore operations 
@f /functions/send.html 
@t send - send a message on a socket  
=send - send a message on a socket 
@f /functions/sendmsg.html 
@t sendmsg - send a message on a socket using a message structure  
=sendmsg - send a message on a socket using a message structure 
@f /functions/sendto.html 
@t sendto - send a message on a socket  
=sendto - send a message on a socket 
@f /functions/setbuf.html 
@t setbuf - assign buffering to a stream  
=setbuf - assign buffering to a stream 
@f /functions/setegid.html 
@t setegid - set the effective group ID  
=setegid - set the effective group ID 
@f /functions/setenv.html 
@t setenv - add or change environment variable  
=setenv - add or change environment variable 
@f /functions/seteuid.html 
@t seteuid - set effective user ID  
=seteuid - set effective user ID 
@f /functions/setgid.html 
@t setgid - set-group-ID  
=setgid - set-group-ID 
@f /functions/setgrent.html 
@t setgrent - reset the group database to the first entry  
=setgrent - reset the group database to the first entry 
@f /functions/sethostent.html 
@t sethostent - network host database functions  
=sethostent - network host database functions 
@f /functions/setitimer.html 
@t setitimer - set the value of an interval timer  
=setitimer - set the value of an interval timer 
@f /functions/setjmp.html 
@t setjmp - set jump point for a non-local goto  
=setjmp - set jump point for a non-local goto 
@f /functions/setkey.html 
@t setkey - set encoding key (CRYPT)  
=setkey - set encoding key (CRYPT) 
@f /functions/setlocale.html 
@t setlocale - set program locale  
=setlocale - set program locale 
@f /functions/setlogmask.html 
@t setlogmask - set the log priority mask  
=setlogmask - set the log priority mask 
@f /functions/setnetent.html 
@t setnetent - network database function  
=setnetent - network database function 
@f /functions/setpgid.html 
@t setpgid - set process group ID for job control  
=setpgid - set process group ID for job control 
@f /functions/setpgrp.html 
@t setpgrp - set the process group ID  
=setpgrp - set the process group ID 
@f /functions/setpriority.html 
@t setpriority - set the nice value  
=setpriority - set the nice value 
@f /functions/setprotoent.html 
@t setprotoent - network protocol database functions  
=setprotoent - network protocol database functions 
@f /functions/setpwent.html 
@t setpwent - user database function  
=setpwent - user database function 
@f /functions/setregid.html 
@t setregid - set real and effective group IDs  
=setregid - set real and effective group IDs 
@f /functions/setreuid.html 
@t setreuid - set real and effective user IDs  
=setreuid - set real and effective user IDs 
@f /functions/setrlimit.html 
@t setrlimit - control maximum resource consumption  
=setrlimit - control maximum resource consumption 
@f /functions/setservent.html 
@t setservent - network services database functions  
=setservent - network services database functions 
@f /functions/setsid.html 
@t setsid - create session and set process group ID  
=setsid - create session and set process group ID 
@f /functions/setsockopt.html 
@t setsockopt - set the socket options  
=setsockopt - set the socket options 
@f /functions/setstate.html 
@t setstate - switch pseudo-random number generator state arrays  
=setstate - switch pseudo-random number generator state arrays 
@f /functions/setuid.html 
@t setuid - set user ID  
=setuid - set user ID 
@f /functions/setutxent.html 
@t setutxent - reset the user accounting database to the first entry  
=setutxent - reset the user accounting database to the first entry 
@f /functions/setvbuf.html 
@t setvbuf - assign buffering to a stream  
=setvbuf - assign buffering to a stream 
@f /functions/shm_open.html 
@t shm_open - open a shared memory object (REALTIME)  
=shm_open - open a shared memory object (REALTIME) 
@f /functions/shm_unlink.html 
@t shm_unlink - remove a shared memory object (REALTIME)  
=shm_unlink - remove a shared memory object (REALTIME) 
@f /functions/shmat.html 
@t shmat - XSI shared memory attach operation  
=shmat - XSI shared memory attach operation 
@f /functions/shmctl.html 
@t shmctl - XSI shared memory control operations  
=shmctl - XSI shared memory control operations 
@f /functions/shmdt.html 
@t shmdt - XSI shared memory detach operation  
=shmdt - XSI shared memory detach operation 
@f /functions/shmget.html 
@t shmget - get an XSI shared memory segment  
=shmget - get an XSI shared memory segment 
@f /functions/shutdown.html 
@t shutdown - shut down socket send and receive operations  
=shutdown - shut down socket send and receive operations 
@f /functions/sigaction.html 
@t sigaction - examine and change a signal action  
=sigaction - examine and change a signal action 
@f /functions/sigaddset.html 
@t sigaddset - add a signal to a signal set  
=sigaddset - add a signal to a signal set 
@f /functions/sigaltstack.html 
@t sigaltstack - set and get signal alternate stack context  
=sigaltstack - set and get signal alternate stack context 
@f /functions/sigdelset.html 
@t sigdelset - delete a signal from a signal set  
=sigdelset - delete a signal from a signal set 
@f /functions/sigemptyset.html 
@t sigemptyset - initialize and empty a signal set  
=sigemptyset - initialize and empty a signal set 
@f /functions/sigfillset.html 
@t sigfillset - initialize and fill a signal set  
=sigfillset - initialize and fill a signal set 
@f /functions/sighold.html 
@t sighold, sigignore, sigpause, sigrelse, sigset - signal management  
=sighold, sigignore, sigpause, sigrelse, sigset - signal management 
@f /functions/siginterrupt.html 
@t siginterrupt - allow signals to interrupt functions  
=siginterrupt - allow signals to interrupt functions 
@f /functions/sigismember.html 
@t sigismember - test for a signal in a signal set  
=sigismember - test for a signal in a signal set 
@f /functions/siglongjmp.html 
@t siglongjmp - non-local goto with signal handling  
=siglongjmp - non-local goto with signal handling 
@f /functions/signal.html 
@t signal - signal management  
=signal - signal management 
@f /functions/signbit.html 
@t signbit - test sign  
=signbit - test sign 
@f /functions/signgam.html 
@t signgam - log gamma function  
=signgam - log gamma function 
@f /functions/sigpause.html 
@t sigpause - remove a signal from the signal mask and suspend the thread  
=sigpause - remove a signal from the signal mask and suspend the thread 
@f /functions/sigpending.html 
@t sigpending - examine pending signals  
=sigpending - examine pending signals 
@f /functions/sigprocmask.html 
@t sigprocmask - examine and change blocked signals  
=sigprocmask - examine and change blocked signals 
@f /functions/sigqueue.html 
@t sigqueue - queue a signal to a process  
=sigqueue - queue a signal to a process 
@f /functions/sigrelse.html 
@t sigrelse, sigset - signal management  
=sigrelse, sigset - signal management 
@f /functions/sigsetjmp.html 
@t sigsetjmp - set jump point for a non-local goto  
=sigsetjmp - set jump point for a non-local goto 
@f /functions/sigsuspend.html 
@t sigsuspend - wait for a signal  
=sigsuspend - wait for a signal 
@f /functions/sigtimedwait.html 
@t sigtimedwait, sigwaitinfo - wait for queued signals  
=sigtimedwait, sigwaitinfo - wait for queued signals 
@f /functions/sigwait.html 
@t sigwait - wait for queued signals  
=sigwait - wait for queued signals 
@f /functions/sigwaitinfo.html 
@t sigwaitinfo - wait for queued signals  
=sigwaitinfo - wait for queued signals 
@f /functions/sin.html 
@t sin, sinf, sinl - sine function  
=sin, sinf, sinl - sine function 
@f /functions/sinh.html 
@t sinh, sinhf, sinhl - hyperbolic sine functions  
=sinh, sinhf, sinhl - hyperbolic sine functions 
@f /functions/sinl.html 
@t sinl - sine function  
=sinl - sine function 
@f /functions/sleep.html 
@t sleep - suspend execution for an interval of time  
=sleep - suspend execution for an interval of time 
@f /functions/snprintf.html 
@t snprintf - print formatted output  
=snprintf - print formatted output 
@f /functions/sockatmark.html 
@t sockatmark - determine whether a socket is at the out-of-band mark  
=sockatmark - determine whether a socket is at the out-of-band mark 
@f /functions/socket.html 
@t socket - create an endpoint for communication  
=socket - create an endpoint for communication 
@f /functions/socketpair.html 
@t socketpair - create a pair of connected sockets  
=socketpair - create a pair of connected sockets 
@f /functions/sprintf.html 
@t sprintf - print formatted output  
=sprintf - print formatted output 
@f /functions/sqrt.html 
@t sqrt, sqrtf, sqrtl - square root function  
=sqrt, sqrtf, sqrtl - square root function 
@f /functions/srand.html 
@t srand - pseudo-random number generator  
=srand - pseudo-random number generator 
@f /functions/srand48.html 
@t srand48 - seed the uniformly distributed double-precision pseudo-random number generator  
=srand48 - seed the uniformly distributed double-precision pseudo-random number generator 
@f /functions/srandom.html 
@t srandom - seed pseudo-random number generator  
=srandom - seed pseudo-random number generator 
@f /functions/sscanf.html 
@t sscanf - convert formatted input  
=sscanf - convert formatted input 
@f /functions/stat.html 
@t stat - get file status  
=stat - get file status 
@f /functions/statvfs.html 
@t statvfs - get file system information  
=statvfs - get file system information 
@f /functions/stdin.html 
@t stderr, stdin, stdout - standard I/O streams  
=stderr, stdin, stdout - standard I/O streams 
@f /functions/stpcpy.html 
@t stpcpy - copy a string and return a pointer to the end of the result  
=stpcpy - copy a string and return a pointer to the end of the result 
@f /functions/stpncpy.html 
@t stpncpy - copy fixed length string, returning a pointer to the array end  
=stpncpy - copy fixed length string, returning a pointer to the array end 
@f /functions/strcasecmp.html 
@t strcasecmp, strcasecmp_l, strncasecmp, strncasecmp_l - case-insensitive string comparisons  
=strcasecmp, strcasecmp_l, strncasecmp, strncasecmp_l - case-insensitive string comparisons 
@f /functions/strcat.html 
@t strcat - concatenate two strings  
=strcat - concatenate two strings 
@f /functions/strchr.html 
@t strchr - string scanning operation  
=strchr - string scanning operation 
@f /functions/strcmp.html 
@t strcmp - compare two strings  
=strcmp - compare two strings 
@f /functions/strcoll.html 
@t strcoll, strcoll_l - string comparison using collating information  
=strcoll, strcoll_l - string comparison using collating information 
@f /functions/strcpy.html 
@t stpcpy, strcpy - copy a string and return a pointer to the end of the result  
=stpcpy, strcpy - copy a string and return a pointer to the end of the result 
@f /functions/strcspn.html 
@t strcspn - get the length of a complementary substring  
=strcspn - get the length of a complementary substring 
@f /functions/strdup.html 
@t strdup, strndup - duplicate a specific number of bytes from a string  
=strdup, strndup - duplicate a specific number of bytes from a string 
@f /functions/strerror.html 
@t strerror, strerror_l, strerror_r - get error message string  
=strerror, strerror_l, strerror_r - get error message string 
@f /functions/strfmon.html 
@t strfmon, strfmon_l - convert monetary value to a string  
=strfmon, strfmon_l - convert monetary value to a string 
@f /functions/strftime.html 
@t strftime, strftime_l - convert date and time to a string  
=strftime, strftime_l - convert date and time to a string 
@f /functions/strlen.html 
@t strlen, strnlen - get length of fixed size string  
=strlen, strnlen - get length of fixed size string 
@f /functions/strncasecmp.html 
@t strncasecmp, strncasecmp_l - case-insensitive string comparisons  
=strncasecmp, strncasecmp_l - case-insensitive string comparisons 
@f /functions/strncat.html 
@t strncat - concatenate a string with part of another  
=strncat - concatenate a string with part of another 
@f /functions/strncmp.html 
@t strncmp - compare part of two strings  
=strncmp - compare part of two strings 
@f /functions/strncpy.html 
@t stpncpy, strncpy - copy fixed length string, returning a pointer to the array end  
=stpncpy, strncpy - copy fixed length string, returning a pointer to the array end 
@f /functions/strndup.html 
@t strndup - duplicate a specific number of bytes from a string  
=strndup - duplicate a specific number of bytes from a string 
@f /functions/strnlen.html 
@t strnlen - get length of fixed size string  
=strnlen - get length of fixed size string 
@f /functions/strpbrk.html 
@t strpbrk - scan a string for a byte  
=strpbrk - scan a string for a byte 
@f /functions/strptime.html 
@t strptime - date and time conversion  
=strptime - date and time conversion 
@f /functions/strrchr.html 
@t strrchr - string scanning operation  
=strrchr - string scanning operation 
@f /functions/strsignal.html 
@t strsignal - get name of signal  
=strsignal - get name of signal 
@f /functions/strspn.html 
@t strspn - get length of a substring  
=strspn - get length of a substring 
@f /functions/strstr.html 
@t strstr - find a substring  
=strstr - find a substring 
@f /functions/strtod.html 
@t strtod, strtof, strtold - convert a string to a double-precision number  
=strtod, strtof, strtold - convert a string to a double-precision number 
@f /functions/strtoimax.html 
@t strtoimax, strtoumax - convert string to integer type  
=strtoimax, strtoumax - convert string to integer type 
@f /functions/strtok.html 
@t strtok, strtok_r - split string into tokens  
=strtok, strtok_r - split string into tokens 
@f /functions/strtol.html 
@t strtol, strtoll - convert a string to a long integer  
=strtol, strtoll - convert a string to a long integer 
@f /functions/strtold.html 
@t strtold - convert a string to a double-precision number  
=strtold - convert a string to a double-precision number 
@f /functions/strtoll.html 
@t strtoll - convert a string to a long integer  
=strtoll - convert a string to a long integer 
@f /functions/strtoul.html 
@t strtoul, strtoull - convert a string to an unsigned long  
=strtoul, strtoull - convert a string to an unsigned long 
@f /functions/strtoumax.html 
@t strtoumax - convert a string to an integer type  
=strtoumax - convert a string to an integer type 
@f /functions/strxfrm.html 
@t strxfrm, strxfrm_l - string transformation  
=strxfrm, strxfrm_l - string transformation 
@f /functions/swab.html 
@t swab - swap bytes  
=swab - swap bytes 
@f /functions/swprintf.html 
@t swprintf - print formatted wide-character output  
=swprintf - print formatted wide-character output 
@f /functions/swscanf.html 
@t swscanf - convert formatted wide-character input  
=swscanf - convert formatted wide-character input 
@f /functions/symlink.html 
@t symlink, symlinkat - make a symbolic link relative to directory file descriptor  
=symlink, symlinkat - make a symbolic link relative to directory file descriptor 
@f /functions/sync.html 
@t sync - schedule file system updates  
=sync - schedule file system updates 
@f /functions/sysconf.html 
@t sysconf - get configurable system variables  
=sysconf - get configurable system variables 
@f /functions/syslog.html 
@t syslog - log a message  
=syslog - log a message 
@f /functions/system.html 
@t system - issue a command  
=system - issue a command 
@f /functions/tan.html 
@t tan, tanf, tanl - tangent function  
=tan, tanf, tanl - tangent function 
@f /functions/tanh.html 
@t tanh, tanhf, tanhl - hyperbolic tangent functions  
=tanh, tanhf, tanhl - hyperbolic tangent functions 
@f /functions/tanl.html 
@t tanl - tangent function  
=tanl - tangent function 
@f /functions/tcdrain.html 
@t tcdrain - wait for transmission of output  
=tcdrain - wait for transmission of output 
@f /functions/tcflow.html 
@t tcflow - suspend or restart the transmission or reception of data  
=tcflow - suspend or restart the transmission or reception of data 
@f /functions/tcflush.html 
@t tcflush - flush non-transmitted output data, non-read input data, or both  
=tcflush - flush non-transmitted output data, non-read input data, or both 
@f /functions/tcgetattr.html 
@t tcgetattr - get the parameters associated with the terminal  
=tcgetattr - get the parameters associated with the terminal 
@f /functions/tcgetpgrp.html 
@t tcgetpgrp - get the foreground process group ID  
=tcgetpgrp - get the foreground process group ID 
@f /functions/tcgetsid.html 
@t tcgetsid - get the process group ID for the session leader for the controlling terminal  
=tcgetsid - get the process group ID for the session leader for the controlling terminal 
@f /functions/tcsendbreak.html 
@t tcsendbreak - send a break for a specific duration  
=tcsendbreak - send a break for a specific duration 
@f /functions/tcsetattr.html 
@t tcsetattr - set the parameters associated with the terminal  
=tcsetattr - set the parameters associated with the terminal 
@f /functions/tcsetpgrp.html 
@t tcsetpgrp - set the foreground process group ID  
=tcsetpgrp - set the foreground process group ID 
@f /functions/tdelete.html 
@t tdelete, tfind, tsearch, twalk - manage a binary search tree  
=tdelete, tfind, tsearch, twalk - manage a binary search tree 
@f /functions/telldir.html 
@t telldir - current location of a named directory stream  
=telldir - current location of a named directory stream 
@f /functions/tempnam.html 
@t tempnam - create a name for a temporary file  
=tempnam - create a name for a temporary file 
@f /functions/tfind.html 
@t tfind - search binary search tree  
=tfind - search binary search tree 
@f /functions/tgamma.html 
@t tgamma, tgammaf, tgammal - compute gamma() function  
=tgamma, tgammaf, tgammal - compute gamma() function 
@f /functions/time.html 
@t time - get time  
=time - get time 
@f /functions/timer_create.html 
@t timer_create - create a per-process timer  
=timer_create - create a per-process timer 
@f /functions/timer_delete.html 
@t timer_delete - delete a per-process timer  
=timer_delete - delete a per-process timer 
@f /functions/timer_getoverrun.html 
@t timer_getoverrun, timer_gettime, timer_settime - per-process timers  
=timer_getoverrun, timer_gettime, timer_settime - per-process timers 
@f /functions/times.html 
@t times - get process and waited-for child process times  
=times - get process and waited-for child process times 
@f /functions/timezone.html 
@t timezone - difference from UTC and local standard time  
=timezone - difference from UTC and local standard time 
@f /functions/tmpfile.html 
@t tmpfile - create a temporary file  
=tmpfile - create a temporary file 
@f /functions/tmpnam.html 
@t tmpnam - create a name for a temporary file  
=tmpnam - create a name for a temporary file 
@f /functions/toascii.html 
@t toascii - translate an integer to a 7-bit ASCII character  
=toascii - translate an integer to a 7-bit ASCII character 
@f /functions/tolower.html 
@t tolower, tolower_l - transliterate uppercase characters to lowercase  
=tolower, tolower_l - transliterate uppercase characters to lowercase 
@f /functions/toupper.html 
@t toupper, toupper_l - transliterate lowercase characters to uppercase  
=toupper, toupper_l - transliterate lowercase characters to uppercase 
@f /functions/towctrans.html 
@t towctrans, towctrans_l - wide-character transliteration  
=towctrans, towctrans_l - wide-character transliteration 
@f /functions/towlower.html 
@t towlower, towlower_l - transliterate uppercase wide-character code to lowercase  
=towlower, towlower_l - transliterate uppercase wide-character code to lowercase 
@f /functions/towupper.html 
@t towupper, towupper_l - transliterate lowercase wide-character code to uppercase  
=towupper, towupper_l - transliterate lowercase wide-character code to uppercase 
@f /functions/trunc.html 
@t trunc, truncf, truncl - round to truncated integer value  
=trunc, truncf, truncl - round to truncated integer value 
@f /functions/truncate.html 
@t truncate - truncate a file to a specified length  
=truncate - truncate a file to a specified length 
@f /functions/truncf.html 
@t truncf, truncl - round to truncated integer value  
=truncf, truncl - round to truncated integer value 
@f /functions/tsearch.html 
@t tsearch - search a binary search tree  
=tsearch - search a binary search tree 
@f /functions/ttyname.html 
@t ttyname, ttyname_r - find the pathname of a terminal  
=ttyname, ttyname_r - find the pathname of a terminal 
@f /functions/twalk.html 
@t twalk - traverse a binary search tree  
=twalk - traverse a binary search tree 
@f /functions/tzset.html 
@t daylight, timezone, tzname, tzset - set timezone conversion information  
=daylight, timezone, tzname, tzset - set timezone conversion information 
@f /functions/ulimit.html 
@t ulimit - get and set process limits  
=ulimit - get and set process limits 
@f /functions/umask.html 
@t umask - set and get the file mode creation mask  
=umask - set and get the file mode creation mask 
@f /functions/uname.html 
@t uname - get the name of the current system  
=uname - get the name of the current system 
@f /functions/ungetc.html 
@t ungetc - push byte back into input stream  
=ungetc - push byte back into input stream 
@f /functions/ungetwc.html 
@t ungetwc - push wide-character code back into the input stream  
=ungetwc - push wide-character code back into the input stream 
@f /functions/unlink.html 
@t unlink, unlinkat - remove a directory entry relative to directory file descriptor  
=unlink, unlinkat - remove a directory entry relative to directory file descriptor 
@f /functions/unlockpt.html 
@t unlockpt - unlock a pseudo-terminal master/slave pair  
=unlockpt - unlock a pseudo-terminal master/slave pair 
@f /functions/unsetenv.html 
@t unsetenv - remove an environment variable  
=unsetenv - remove an environment variable 
@f /functions/uselocale.html 
@t uselocale - use locale in current thread  
=uselocale - use locale in current thread 
@f /functions/utime.html 
@t utime - set file access and modification times  
=utime - set file access and modification times 
@f /functions/utimensat.html 
@t utimensat, utimes - set file access and modification times relative to directory file descriptor  
=utimensat, utimes - set file access and modification times relative to directory file descriptor 
@f /functions/va_arg.html 
@t va_arg, va_copy, va_end, va_start - handle variable argument list  
=va_arg, va_copy, va_end, va_start - handle variable argument list 
@f /functions/vfprintf.html 
@t vdprintf, vfprintf, vprintf, vsnprintf, vsprintf - format output of a stdarg argument list  
=vdprintf, vfprintf, vprintf, vsnprintf, vsprintf - format output of a stdarg argument list 
@f /functions/vfscanf.html 
@t vfscanf, vscanf, vsscanf - format input of a stdarg argument list  
=vfscanf, vscanf, vsscanf - format input of a stdarg argument list 
@f /functions/vfwprintf.html 
@t vfwprintf, vswprintf, vwprintf - wide-character formatted output of a stdarg argument list  
=vfwprintf, vswprintf, vwprintf - wide-character formatted output of a stdarg argument list 
@f /functions/vfwscanf.html 
@t vfwscanf, vswscanf, vwscanf - wide-character formatted input of a stdarg argument list  
=vfwscanf, vswscanf, vwscanf - wide-character formatted input of a stdarg argument list 
@f /functions/vprintf.html 
@t vprintf - format the output of a stdarg argument list  
=vprintf - format the output of a stdarg argument list 
@f /functions/vscanf.html 
@t vscanf - format input of a stdarg argument list  
=vscanf - format input of a stdarg argument list 
@f /functions/vsnprintf.html 
@t vsnprintf, vsprintf - format output of a stdarg argument list  
=vsnprintf, vsprintf - format output of a stdarg argument list 
@f /functions/vsscanf.html 
@t vsscanf - format input of a stdarg argument list  
=vsscanf - format input of a stdarg argument list 
@f /functions/vswprintf.html 
@t vswprintf - wide-character formatted output of a stdarg argument list  
=vswprintf - wide-character formatted output of a stdarg argument list 
@f /functions/vswscanf.html 
@t vswscanf - wide-character formatted input of a stdarg argument list  
=vswscanf - wide-character formatted input of a stdarg argument list 
@f /functions/vwprintf.html 
@t vwprintf - wide-character formatted output of a stdarg argument list  
=vwprintf - wide-character formatted output of a stdarg argument list 
@f /functions/vwscanf.html 
@t vwscanf - wide-character formatted input of a stdarg argument list  
=vwscanf - wide-character formatted input of a stdarg argument list 
@f /functions/wait.html 
@t wait, waitpid - wait for a child process to stop or terminate  
=wait, waitpid - wait for a child process to stop or terminate 
@f /functions/waitid.html 
@t waitid - wait for a child process to change state  
=waitid - wait for a child process to change state 
@f /functions/waitpid.html 
@t waitpid - wait for a child process to stop or terminate  
=waitpid - wait for a child process to stop or terminate 
@f /functions/wcpcpy.html 
@t wcpcpy - copy a wide-character string, returning a pointer to its end  
=wcpcpy - copy a wide-character string, returning a pointer to its end 
@f /functions/wcpncpy.html 
@t wcpncpy - copy a fixed-size wide-character string, returning a pointer to its end  
=wcpncpy - copy a fixed-size wide-character string, returning a pointer to its end 
@f /functions/wcrtomb.html 
@t wcrtomb - convert a wide-character code to a character (restartable)  
=wcrtomb - convert a wide-character code to a character (restartable) 
@f /functions/wcscasecmp.html 
@t wcscasecmp, wcscasecmp_l, wcsncasecmp, wcsncasecmp_l - case-insensitive wide-character string comparison  
=wcscasecmp, wcscasecmp_l, wcsncasecmp, wcsncasecmp_l - case-insensitive wide-character string comparison 
@f /functions/wcscat.html 
@t wcscat - concatenate two wide-character strings  
=wcscat - concatenate two wide-character strings 
@f /functions/wcschr.html 
@t wcschr - wide-character string scanning operation  
=wcschr - wide-character string scanning operation 
@f /functions/wcscmp.html 
@t wcscmp - compare two wide-character strings  
=wcscmp - compare two wide-character strings 
@f /functions/wcscoll.html 
@t wcscoll, wcscoll_l - wide-character string comparison using collating information  
=wcscoll, wcscoll_l - wide-character string comparison using collating information 
@f /functions/wcscpy.html 
@t wcpcpy, wcscpy - copy a wide-character string, returning a pointer to its end  
=wcpcpy, wcscpy - copy a wide-character string, returning a pointer to its end 
@f /functions/wcscspn.html 
@t wcscspn - get the length of a complementary wide substring  
=wcscspn - get the length of a complementary wide substring 
@f /functions/wcsdup.html 
@t wcsdup - duplicate a wide-character string  
=wcsdup - duplicate a wide-character string 
@f /functions/wcsftime.html 
@t wcsftime - convert date and time to a wide-character string  
=wcsftime - convert date and time to a wide-character string 
@f /functions/wcslen.html 
@t wcslen, wcsnlen - get length of a fixed-sized wide-character string  
=wcslen, wcsnlen - get length of a fixed-sized wide-character string 
@f /functions/wcsncasecmp.html 
@t wcsncasecmp, wcsncasecmp_l - case-insensitive wide-character string comparison  
=wcsncasecmp, wcsncasecmp_l - case-insensitive wide-character string comparison 
@f /functions/wcsncat.html 
@t wcsncat - concatenate a wide-character string with part of another  
=wcsncat - concatenate a wide-character string with part of another 
@f /functions/wcsncmp.html 
@t wcsncmp - compare part of two wide-character strings  
=wcsncmp - compare part of two wide-character strings 
@f /functions/wcsncpy.html 
@t wcpncpy, wcsncpy - copy a fixed-size wide-character string, returning a pointer to its end  
=wcpncpy, wcsncpy - copy a fixed-size wide-character string, returning a pointer to its end 
@f /functions/wcsnlen.html 
@t wcsnlen - get length of a fixed-sized wide-character string  
=wcsnlen - get length of a fixed-sized wide-character string 
@f /functions/wcsnrtombs.html 
@t wcsnrtombs - convert wide-character string to multi-byte string  
=wcsnrtombs - convert wide-character string to multi-byte string 
@f /functions/wcspbrk.html 
@t wcspbrk - scan a wide-character string for a wide-character code  
=wcspbrk - scan a wide-character string for a wide-character code 
@f /functions/wcsrchr.html 
@t wcsrchr - wide-character string scanning operation  
=wcsrchr - wide-character string scanning operation 
@f /functions/wcsrtombs.html 
@t wcsnrtombs, wcsrtombs - convert a wide-character string to a character string (restartable)  
=wcsnrtombs, wcsrtombs - convert a wide-character string to a character string (restartable) 
@f /functions/wcsspn.html 
@t wcsspn - get the length of a wide substring  
=wcsspn - get the length of a wide substring 
@f /functions/wcsstr.html 
@t wcsstr - find a wide-character substring  
=wcsstr - find a wide-character substring 
@f /functions/wcstod.html 
@t wcstod, wcstof, wcstold - convert a wide-character string to a double-precision number  
=wcstod, wcstof, wcstold - convert a wide-character string to a double-precision number 
@f /functions/wcstoimax.html 
@t wcstoimax, wcstoumax - convert a wide-character string to an integer type  
=wcstoimax, wcstoumax - convert a wide-character string to an integer type 
@f /functions/wcstok.html 
@t wcstok - split a wide-character string into tokens  
=wcstok - split a wide-character string into tokens 
@f /functions/wcstol.html 
@t wcstol, wcstoll - convert a wide-character string to a long integer  
=wcstol, wcstoll - convert a wide-character string to a long integer 
@f /functions/wcstold.html 
@t wcstold - convert a wide-character string to a double-precision number  
=wcstold - convert a wide-character string to a double-precision number 
@f /functions/wcstoll.html 
@t wcstoll - convert a wide-character string to a long integer  
=wcstoll - convert a wide-character string to a long integer 
@f /functions/wcstombs.html 
@t wcstombs - convert a wide-character string to a character string  
=wcstombs - convert a wide-character string to a character string 
@f /functions/wcstoul.html 
@t wcstoul, wcstoull - convert a wide-character string to an unsigned long  
=wcstoul, wcstoull - convert a wide-character string to an unsigned long 
@f /functions/wcstoumax.html 
@t wcstoumax - convert a wide-character string to an integer type  
=wcstoumax - convert a wide-character string to an integer type 
@f /functions/wcswidth.html 
@t wcswidth - number of column positions of a wide-character string  
=wcswidth - number of column positions of a wide-character string 
@f /functions/wcsxfrm.html 
@t wcsxfrm, wcsxfrm_l - wide-character string transformation  
=wcsxfrm, wcsxfrm_l - wide-character string transformation 
@f /functions/wctob.html 
@t wctob - wide-character to single-byte conversion  
=wctob - wide-character to single-byte conversion 
@f /functions/wctomb.html 
@t wctomb - convert a wide-character code to a character  
=wctomb - convert a wide-character code to a character 
@f /functions/wctrans.html 
@t wctrans, wctrans_l - define character mapping  
=wctrans, wctrans_l - define character mapping 
@f /functions/wctype.html 
@t wctype, wctype_l - define character class  
=wctype, wctype_l - define character class 
@f /functions/wcwidth.html 
@t wcwidth - number of column positions of a wide-character code  
=wcwidth - number of column positions of a wide-character code 
@f /functions/wmemchr.html 
@t wmemchr - find a wide character in memory  
=wmemchr - find a wide character in memory 
@f /functions/wmemcmp.html 
@t wmemcmp - compare wide characters in memory  
=wmemcmp - compare wide characters in memory 
@f /functions/wmemcpy.html 
@t wmemcpy - copy wide characters in memory  
=wmemcpy - copy wide characters in memory 
@f /functions/wmemmove.html 
@t wmemmove - copy wide characters in memory with overlapping areas  
=wmemmove - copy wide characters in memory with overlapping areas 
@f /functions/wmemset.html 
@t wmemset - set wide characters in memory  
=wmemset - set wide characters in memory 
@f /functions/wordexp.html 
@t wordexp, wordfree - perform word expansions  
=wordexp, wordfree - perform word expansions 
@f /functions/wprintf.html 
@t wprintf - print formatted wide-character output  
=wprintf - print formatted wide-character output 
@f /functions/write.html 
@t pwrite, write - write on a file  
=pwrite, write - write on a file 
@f /functions/writev.html 
@t writev - write a vector  
=writev - write a vector 
@f /functions/wscanf.html 
@t wscanf - convert formatted wide-character input  
=wscanf - convert formatted wide-character input 
@f /functions/y0.html 
@t y0, y1, yn - Bessel functions of the second kind  
=y0, y1, yn - Bessel functions of the second kind 
@f /basedefs/aio.h.html
@t aio.h - asynchronous input and output  
=aio.h - asynchronous input and output 
@f /basedefs/arpa_inet.h.html
@t arpa/inet.h - definitions for internet operations  
=arpa/inet.h - definitions for internet operations 
@f /basedefs/assert.h.html 
@t assert.h - verify program assertion  
=assert.h - verify program assertion 
@f /basedefs/complex.h.html 
@t complex.h - complex arithmetic  
=complex.h - complex arithmetic 
@f /basedefs/cpio.h.html 
@t cpio.h - cpio archive values  
=cpio.h - cpio archive values 
@f /basedefs/ctype.h.html 
@t ctype.h - character types  
=ctype.h - character types 
@f /basedefs/dirent.h.html 
@t dirent.h - format of directory entries  
=dirent.h - format of directory entries 
@f /basedefs/dlfcn.h.html 
@t dlfcn.h - dynamic linking  
=dlfcn.h - dynamic linking 
@f /basedefs/errno.h.html 
@t errno.h - system error numbers  
=errno.h - system error numbers 
@f /basedefs/fcntl.h.html 
@t fcntl.h - file control options  
=fcntl.h - file control options 
@f /basedefs/fenv.h.html 
@t fenv.h - floating-point environment  
=fenv.h - floating-point environment 
@f /basedefs/float.h.html 
@t float.h - floating types  
=float.h - floating types 
@f /basedefs/fmtmsg.h.html 
@t fmtmsg.h - message display structures  
=fmtmsg.h - message display structures 
@f /basedefs/fnmatch.h.html 
@t fnmatch.h - filename-matching types  
=fnmatch.h - filename-matching types 
@f /basedefs/ftw.h.html 
@t ftw.h - file tree traversal  
=ftw.h - file tree traversal 
@f /basedefs/glob.h.html 
@t glob.h - pathname pattern-matching types  
=glob.h - pathname pattern-matching types 
@f /basedefs/grp.h.html 
@t grp.h - group structure  
=grp.h - group structure 
@f /basedefs/iconv.h.html 
@t iconv.h - codeset conversion facility  
=iconv.h - codeset conversion facility 
@f /basedefs/inttypes.h.html 
@t inttypes.h - fixed size integer types  
=inttypes.h - fixed size integer types 
@f /basedefs/iso646.h.html 
@t iso646.h - alternative spellings  
=iso646.h - alternative spellings 
@f /basedefs/langinfo.h.html 
@t langinfo.h - language information constants  
=langinfo.h - language information constants 
@f /basedefs/libgen.h.html 
@t libgen.h - definitions for pattern matching functions  
=libgen.h - definitions for pattern matching functions 
@f /basedefs/limits.h.html 
@t limits.h - implementation-defined constants  
=limits.h - implementation-defined constants 
@f /basedefs/locale.h.html 
@t locale.h - category macros  
=locale.h - category macros 
@f /basedefs/math.h.html 
@t math.h - mathematical declarations  
=math.h - mathematical declarations 
@f /basedefs/monetary.h.html 
@t monetary.h - monetary types  
=monetary.h - monetary types 
@f /basedefs/mqueue.h.html 
@t mqueue.h - message queues (REALTIME)  
=mqueue.h - message queues (REALTIME) 
@f /basedefs/ndbm.h.html 
@t ndbm.h - definitions for ndbm database operations  
=ndbm.h - definitions for ndbm database operations 
@f /basedefs/net_if.h.html 
@t net/if.h - sockets local interfaces  
=net/if.h - sockets local interfaces 
@f /basedefs/netdb.h.html 
@t netdb.h - definitions for network database operations  
=netdb.h - definitions for network database operations 
@f /basedefs/netinet_in.h.html
@t netinet/in.h - Internet address family  
=netinet/in.h - Internet address family 
@f /basedefs/netinet_tcp.h.html
@t netinet/tcp.h - definitions for the Internet Transmission Control Protocol (TCP)  
=netinet/tcp.h - definitions for the Internet Transmission Control Protocol (TCP) 
@f /basedefs/nl_types.h.html
@t nl_types.h - data types  
=nl_types.h - data types 
@f /basedefs/poll.h.html 
@t poll.h - definitions for the poll() function  
=poll.h - definitions for the poll() function 
@f /basedefs/pthread.h.html 
@t pthread.h - threads  
=pthread.h - threads 
@f /basedefs/pwd.h.html 
@t pwd.h - password structure  
=pwd.h - password structure 
@f /basedefs/regex.h.html 
@t regex.h - regular expression matching types  
=regex.h - regular expression matching types 
@f /basedefs/sched.h.html 
@t sched.h - execution scheduling  
=sched.h - execution scheduling 
@f /basedefs/search.h.html 
@t search.h - search tables  
=search.h - search tables 
@f /basedefs/semaphore.h.html 
@t semaphore.h - semaphores  
=semaphore.h - semaphores 
@f /basedefs/setjmp.h.html 
@t setjmp.h - stack environment declarations  
=setjmp.h - stack environment declarations 
@f /basedefs/signal.h.html 
@t signal.h - signals  
=signal.h - signals 
@f /basedefs/spawn.h.html 
@t spawn.h - spawn (ADVANCED REALTIME)  
=spawn.h - spawn (ADVANCED REALTIME) 
@f /basedefs/stdarg.h.html 
@t stdarg.h - handle variable argument list  
=stdarg.h - handle variable argument list 
@f /basedefs/stdbool.h.html 
@t stdbool.h - boolean type and values  
=stdbool.h - boolean type and values 
@f /basedefs/stddef.h.html 
@t stddef.h - standard type definitions  
=stddef.h - standard type definitions 
@f /basedefs/stdint.h.html 
@t stdint.h - integer types  
=stdint.h - integer types 
@f /basedefs/stdio.h.html 
@t stdio.h - standard buffered input/output  
=stdio.h - standard buffered input/output 
@f /basedefs/stdlib.h.html 
@t stdlib.h - standard library definitions  
=stdlib.h - standard library definitions 
@f /basedefs/string.h.html 
@t string.h - string operations  
=string.h - string operations 
@f /basedefs/strings.h.html 
@t strings.h - string operations  
=strings.h - string operations 
@f /basedefs/stropts.h.html 
@t stropts.h - STREAMS interface (STREAMS)  
=stropts.h - STREAMS interface (STREAMS) 
@f /basedefs/sys_ipc.h.html 
@t sys/ipc.h - XSI interprocess communication access structure  
=sys/ipc.h - XSI interprocess communication access structure 
@f /basedefs/sys_mman.h.html 
@t sys/mman.h - memory management declarations  
=sys/mman.h - memory management declarations 
@f /basedefs/sys_msg.h.html 
@t sys/msg.h - XSI message queue structures  
=sys/msg.h - XSI message queue structures 
@f /basedefs/sys_resource.h.html
@t sys/resource.h - definitions for XSI resource operations  
=sys/resource.h - definitions for XSI resource operations 
@f /basedefs/sys_select.h.html
@t sys/select.h - select types  
=sys/select.h - select types 
@f /basedefs/sys_sem.h.html 
@t sys/sem.h - XSI semaphore facility  
=sys/sem.h - XSI semaphore facility 
@f /basedefs/sys_shm.h.html 
@t sys/shm.h - XSI shared memory facility  
=sys/shm.h - XSI shared memory facility 
@f /basedefs/sys_socket.h.html 
@t sys/socket.h - main sockets header  
=sys/socket.h - main sockets header 
@f /basedefs/sys_stat.h.html 
@t sys/stat.h - data returned by the stat() function  
=sys/stat.h - data returned by the stat() function 
@f /basedefs/sys_statvfs.h.html 
@t sys/statvfs.h - VFS File System information structure  
=sys/statvfs.h - VFS File System information structure 
@f /basedefs/sys_time.h.html 
@t sys/time.h - time types  
=sys/time.h - time types 
@f /basedefs/sys_times.h.html 
@t sys/times.h - file access and modification times structure  
=sys/times.h - file access and modification times structure 
@f /basedefs/sys_types.h.html 
@t sys/types.h - data types  
=sys/types.h - data types 
@f /basedefs/sys_uio.h.html 
@t sys/uio.h - definitions for vector I/O operations  
=sys/uio.h - definitions for vector I/O operations 
@f /basedefs/sys_un.h.html 
@t sys/un.h - definitions for UNIX domain sockets  
=sys/un.h - definitions for UNIX domain sockets 
@f /basedefs/sys_utsname.h.html
@t sys/utsname.h - system name structure  
=sys/utsname.h - system name structure 
@f /basedefs/sys_wait.h.html 
@t sys/wait.h - declarations for waiting  
=sys/wait.h - declarations for waiting 
@f /basedefs/syslog.h.html 
@t syslog.h - definitions for system error logging  
=syslog.h - definitions for system error logging 
@f /basedefs/tar.h.html 
@t tar.h - extended tar definitions  
=tar.h - extended tar definitions 
@f /basedefs/termios.h.html 
@t termios.h - define values for termios  
=termios.h - define values for termios 
@f /basedefs/tgmath.h.html 
@t tgmath.h - type-generic macros  
=tgmath.h - type-generic macros 
@f /basedefs/time.h.html 
@t time.h - time types  
=time.h - time types 
@f /basedefs/trace.h.html 
@t trace.h - tracing  
=trace.h - tracing 
@f /basedefs/ulimit.h.html 
@t ulimit.h - ulimit commands  
=ulimit.h - ulimit commands 
@f /basedefs/unistd.h.html 
@t unistd.h - standard symbolic constants and types  
=unistd.h - standard symbolic constants and types 
@f /basedefs/utime.h.html 
@t utime.h - access and modification times structure  
=utime.h - access and modification times structure 
@f /basedefs/utmpx.h.html 
@t utmpx.h - user accounting database definitions  
=utmpx.h - user accounting database definitions 
@f /basedefs/wchar.h.html 
@t wchar.h - wide-character handling  
=wchar.h - wide-character handling 
@f /basedefs/wctype.h.html 
@t wctype.h - wide-character classification and mapping utilities  
=wctype.h - wide-character classification and mapping utilities 
@f /basedefs/wordexp.h.html 
@t wordexp.h - word-expansion types  
=wordexp.h - word-expansion types 
@f /utilities/admin.html 
@t admin - create and administer SCCS files (DEVELOPMENT)  
=admin - create and administer SCCS files (DEVELOPMENT) 
@f /utilities/alias.html 
@t alias - define or display aliases  
=alias - define or display aliases 
@f /utilities/ar.html 
@t ar - create and maintain library archives  
=ar - create and maintain library archives 
@f /utilities/asa.html 
@t asa - interpret carriage-control characters  
=asa - interpret carriage-control characters 
@f /utilities/at.html 
@t at - execute commands at a later time  
=at - execute commands at a later time 
@f /utilities/awk.html 
@t awk - pattern scanning and processing language  
=awk - pattern scanning and processing language 
@f /utilities/basename.html 
@t basename - return non-directory portion of a pathname  
=basename - return non-directory portion of a pathname 
@f /utilities/batch.html 
@t batch - schedule commands to be executed in a batch queue  
=batch - schedule commands to be executed in a batch queue 
@f /utilities/bc.html 
@t bc - arbitrary-precision arithmetic language  
=bc - arbitrary-precision arithmetic language 
@f /utilities/bg.html 
@t bg - run jobs in the background  
=bg - run jobs in the background 
@f /utilities/c99.html 
@t c99 - compile standard C programs  
=c99 - compile standard C programs 
@f /utilities/cal.html 
@t cal - print a calendar  
=cal - print a calendar 
@f /utilities/cat.html 
@t cat - concatenate and print files  
=cat - concatenate and print files 
@f /utilities/cd.html 
@t cd - change the working directory  
=cd - change the working directory 
@f /utilities/cflow.html 
@t cflow - generate a C-language flowgraph (DEVELOPMENT)  
=cflow - generate a C-language flowgraph (DEVELOPMENT) 
@f /utilities/chgrp.html 
@t chgrp - change the file group ownership  
=chgrp - change the file group ownership 
@f /utilities/chmod.html 
@t chmod - change the file modes  
=chmod - change the file modes 
@f /utilities/chown.html 
@t chown - change the file ownership  
=chown - change the file ownership 
@f /utilities/cksum.html 
@t cksum - write file checksums and sizes  
=cksum - write file checksums and sizes 
@f /utilities/cmp.html 
@t cmp - compare two files  
=cmp - compare two files 
@f /utilities/comm.html 
@t comm - select or reject lines common to two files  
=comm - select or reject lines common to two files 
@f /utilities/command.html 
@t command - execute a simple command  
=command - execute a simple command 
@f /utilities/compress.html 
@t compress - compress data  
=compress - compress data 
@f /utilities/cp.html 
@t cp - copy files  
=cp - copy files 
@f /utilities/crontab.html 
@t crontab - schedule periodic background work  
=crontab - schedule periodic background work 
@f /utilities/csplit.html 
@t csplit - split files based on context  
=csplit - split files based on context 
@f /utilities/ctags.html 
@t ctags - create a tags file (DEVELOPMENT, FORTRAN)  
=ctags - create a tags file (DEVELOPMENT, FORTRAN) 
@f /utilities/cut.html 
@t cut - cut out selected fields of each line of a file  
=cut - cut out selected fields of each line of a file 
@f /utilities/cxref.html 
@t cxref - generate a C-language program cross-reference table (DEVELOPMENT)  
=cxref - generate a C-language program cross-reference table (DEVELOPMENT) 
@f /utilities/date.html 
@t date - write the date and time  
=date - write the date and time 
@f /utilities/dd.html 
@t dd - convert and copy a file  
=dd - convert and copy a file 
@f /utilities/delta.html 
@t delta - make a delta (change) to an SCCS file (DEVELOPMENT)  
=delta - make a delta (change) to an SCCS file (DEVELOPMENT) 
@f /utilities/df.html 
@t df - report free disk space  
=df - report free disk space 
@f /utilities/diff.html 
@t diff - compare two files  
=diff - compare two files 
@f /utilities/dirname.html 
@t dirname - return the directory portion of a pathname  
=dirname - return the directory portion of a pathname 
@f /utilities/du.html 
@t du - estimate file space usage  
=du - estimate file space usage 
@f /utilities/echo.html 
@t echo - write arguments to standard output  
=echo - write arguments to standard output 
@f /utilities/ed.html 
@t ed - edit text  
=ed - edit text 
@f /utilities/env.html 
@t env - set the environment for command invocation  
=env - set the environment for command invocation 
@f /utilities/ex.html 
@t ex - text editor  
=ex - text editor 
@f /utilities/expand.html 
@t expand - convert tabs to spaces  
=expand - convert tabs to spaces 
@f /utilities/expr.html 
@t expr - evaluate arguments as an expression  
=expr - evaluate arguments as an expression 
@f /utilities/false.html 
@t false - return false value  
=false - return false value 
@f /utilities/fc.html 
@t fc - process the command history list  
=fc - process the command history list 
@f /utilities/fg.html 
@t fg - run jobs in the foreground  
=fg - run jobs in the foreground 
@f /utilities/file.html 
@t file - determine file type  
=file - determine file type 
@f /utilities/find.html 
@t find - find files  
=find - find files 
@f /utilities/fold.html 
@t fold - filter for folding lines  
=fold - filter for folding lines 
@f /utilities/fort77.html 
@t fort77 - FORTRAN compiler (FORTRAN)  
=fort77 - FORTRAN compiler (FORTRAN) 
@f /utilities/fuser.html 
@t fuser - list process IDs of all processes that have one or more files open  
=fuser - list process IDs of all processes that have one or more files open 
@f /utilities/gencat.html 
@t gencat - generate a formatted message catalog  
=gencat - generate a formatted message catalog 
@f /utilities/get.html 
@t get - get a version of an SCCS file (DEVELOPMENT)  
=get - get a version of an SCCS file (DEVELOPMENT) 
@f /utilities/getconf.html 
@t getconf - get configuration values  
=getconf - get configuration values 
@f /utilities/getopts.html 
@t getopts - parse utility options  
=getopts - parse utility options 
@f /utilities/grep.html 
@t grep - search a file for a pattern  
=grep - search a file for a pattern 
@f /utilities/hash.html 
@t hash - remember or report utility locations  
=hash - remember or report utility locations 
@f /utilities/head.html 
@t head - copy the first part of files  
=head - copy the first part of files 
@f /utilities/iconv.html 
@t iconv - codeset conversion  
=iconv - codeset conversion 
@f /utilities/id.html 
@t id - return user identity  
=id - return user identity 
@f /utilities/ipcrm.html 
@t ipcrm - remove an XSI message queue, semaphore set, or shared memory segment identifier  
=ipcrm - remove an XSI message queue, semaphore set, or shared memory segment identifier 
@f /utilities/ipcs.html 
@t ipcs - report XSI interprocess communication facilities status  
=ipcs - report XSI interprocess communication facilities status 
@f /utilities/jobs.html 
@t jobs - display status of jobs in the current session  
=jobs - display status of jobs in the current session 
@f /utilities/join.html 
@t join - relational database operator  
=join - relational database operator 
@f /utilities/kill.html 
@t kill - terminate or signal processes  
=kill - terminate or signal processes 
@f /utilities/lex.html 
@t lex - generate programs for lexical tasks (DEVELOPMENT)  
=lex - generate programs for lexical tasks (DEVELOPMENT) 
@f /utilities/link.html 
@t link - call link function  
=link - call link function 
@f /utilities/ln.html 
@t ln - link files  
=ln - link files 
@f /utilities/locale.html 
@t locale - get locale-specific information  
=locale - get locale-specific information 
@f /utilities/localedef.html 
@t localedef - define locale environment  
=localedef - define locale environment 
@f /utilities/logger.html 
@t logger - log messages  
=logger - log messages 
@f /utilities/logname.html 
@t logname - return the user's login name  
=logname - return the user's login name 
@f /utilities/lp.html 
@t lp - send files to a printer  
=lp - send files to a printer 
@f /utilities/ls.html 
@t ls - list directory contents  
=ls - list directory contents 
@f /utilities/m4.html 
@t m4 - macro processor  
=m4 - macro processor 
@f /utilities/mailx.html 
@t mailx - process messages  
=mailx - process messages 
@f /utilities/make.html 
@t make - maintain, update, and regenerate groups of programs (DEVELOPMENT)  
=make - maintain, update, and regenerate groups of programs (DEVELOPMENT) 
@f /utilities/man.html 
@t man - display system documentation  
=man - display system documentation 
@f /utilities/mesg.html 
@t mesg - permit or deny messages  
=mesg - permit or deny messages 
@f /utilities/mkdir.html 
@t mkdir - make directories  
=mkdir - make directories 
@f /utilities/mkfifo.html 
@t mkfifo - make FIFO special files  
=mkfifo - make FIFO special files 
@f /utilities/more.html 
@t more - display files on a page-by-page basis  
=more - display files on a page-by-page basis 
@f /utilities/mv.html 
@t mv - move files  
=mv - move files 
@f /utilities/newgrp.html 
@t newgrp - change to a new group  
=newgrp - change to a new group 
@f /utilities/nice.html 
@t nice - invoke a utility with an altered nice value  
=nice - invoke a utility with an altered nice value 
@f /utilities/nl.html 
@t nl - line numbering filter  
=nl - line numbering filter 
@f /utilities/nm.html 
@t nm - write the name list of an object file (DEVELOPMENT)  
=nm - write the name list of an object file (DEVELOPMENT) 
@f /utilities/nohup.html 
@t nohup - invoke a utility immune to hangups  
=nohup - invoke a utility immune to hangups 
@f /utilities/od.html 
@t od - dump files in various formats  
=od - dump files in various formats 
@f /utilities/paste.html 
@t paste - merge corresponding or subsequent lines of files  
=paste - merge corresponding or subsequent lines of files 
@f /utilities/patch.html 
@t patch - apply changes to files  
=patch - apply changes to files 
@f /utilities/pathchk.html 
@t pathchk - check pathnames  
=pathchk - check pathnames 
@f /utilities/pax.html 
@t pax - portable archive interchange  
=pax - portable archive interchange 
@f /utilities/pr.html 
@t pr - print files  
=pr - print files 
@f /utilities/printf.html 
@t printf - write formatted output  
=printf - write formatted output 
@f /utilities/prs.html 
@t prs - print an SCCS file (DEVELOPMENT)  
=prs - print an SCCS file (DEVELOPMENT) 
@f /utilities/ps.html 
@t ps - report process status  
=ps - report process status 
@f /utilities/pwd.html 
@t pwd - return working directory name  
=pwd - return working directory name 
@f /utilities/qalter.html 
@t qalter - alter batch job  
=qalter - alter batch job 
@f /utilities/qdel.html 
@t qdel - delete batch jobs  
=qdel - delete batch jobs 
@f /utilities/qhold.html 
@t qhold - hold batch jobs  
=qhold - hold batch jobs 
@f /utilities/qmove.html 
@t qmove - move batch jobs  
=qmove - move batch jobs 
@f /utilities/qmsg.html 
@t qmsg - send message to batch jobs  
=qmsg - send message to batch jobs 
@f /utilities/qrerun.html 
@t qrerun - rerun batch jobs  
=qrerun - rerun batch jobs 
@f /utilities/qrls.html 
@t qrls - release batch jobs  
=qrls - release batch jobs 
@f /utilities/qselect.html 
@t qselect - select batch jobs  
=qselect - select batch jobs 
@f /utilities/qsig.html 
@t qsig - signal batch jobs  
=qsig - signal batch jobs 
@f /utilities/qstat.html 
@t qstat - show status of batch jobs  
=qstat - show status of batch jobs 
@f /utilities/qsub.html 
@t qsub - submit a script  
=qsub - submit a script 
@f /utilities/read.html 
@t read - read a line from standard input  
=read - read a line from standard input 
@f /utilities/renice.html 
@t renice - set nice values of running processes  
=renice - set nice values of running processes 
@f /utilities/rm.html 
@t rm - remove directory entries  
=rm - remove directory entries 
@f /utilities/rmdel.html 
@t rmdel - remove a delta from an SCCS file (DEVELOPMENT)  
=rmdel - remove a delta from an SCCS file (DEVELOPMENT) 
@f /utilities/rmdir.html 
@t rmdir - remove directories  
=rmdir - remove directories 
@f /utilities/sact.html 
@t sact - print current SCCS file-editing activity (DEVELOPMENT)  
=sact - print current SCCS file-editing activity (DEVELOPMENT) 
@f /utilities/sccs.html 
@t sccs - front end for the SCCS subsystem (DEVELOPMENT)  
=sccs - front end for the SCCS subsystem (DEVELOPMENT) 
@f /utilities/sed.html 
@t sed - stream editor  
=sed - stream editor 
@f /utilities/sh.html 
@t sh - shell, the standard command language interpreter  
=sh - shell, the standard command language interpreter 
@f /utilities/sleep.html 
@t sleep - suspend execution for an interval  
=sleep - suspend execution for an interval 
@f /utilities/sort.html 
@t sort - sort, merge, or sequence check text files  
=sort - sort, merge, or sequence check text files 
@f /utilities/split.html 
@t split - split files into pieces  
=split - split files into pieces 
@f /utilities/strings.html 
@t strings - find printable strings in files  
=strings - find printable strings in files 
@f /utilities/strip.html 
@t strip - remove unnecessary information from strippable files (DEVELOPMENT)  
=strip - remove unnecessary information from strippable files (DEVELOPMENT) 
@f /utilities/stty.html 
@t stty - set the options for a terminal  
=stty - set the options for a terminal 
@f /utilities/tabs.html 
@t tabs - set terminal tabs  
=tabs - set terminal tabs 
@f /utilities/tail.html 
@t tail - copy the last part of a file  
=tail - copy the last part of a file 
@f /utilities/talk.html 
@t talk - talk to another user  
=talk - talk to another user 
@f /utilities/tee.html 
@t tee - duplicate standard input  
=tee - duplicate standard input 
@f /utilities/test.html 
@t test - evaluate expression  
=test - evaluate expression 
@f /utilities/time.html 
@t time - time a simple command  
=time - time a simple command 
@f /utilities/touch.html 
@t touch - change file access and modification times  
=touch - change file access and modification times 
@f /utilities/tput.html 
@t tput - change terminal characteristics  
=tput - change terminal characteristics 
@f /utilities/tr.html 
@t tr - translate characters  
=tr - translate characters 
@f /utilities/true.html 
@t true - return true value  
=true - return true value 
@f /utilities/tsort.html 
@t tsort - topological sort  
=tsort - topological sort 
@f /utilities/tty.html 
@t tty - return user's terminal name  
=tty - return user's terminal name 
@f /utilities/type.html 
@t type - write a description of command type  
=type - write a description of command type 
@f /utilities/ulimit.html 
@t ulimit - set or report file size limit  
=ulimit - set or report file size limit 
@f /utilities/umask.html 
@t umask - get or set the file mode creation mask  
=umask - get or set the file mode creation mask 
@f /utilities/unalias.html 
@t unalias - remove alias definitions  
=unalias - remove alias definitions 
@f /utilities/uname.html 
@t uname - return system name  
=uname - return system name 
@f /utilities/uncompress.html 
@t uncompress - expand compressed data  
=uncompress - expand compressed data 
@f /utilities/unexpand.html 
@t unexpand - convert spaces to tabs  
=unexpand - convert spaces to tabs 
@f /utilities/unget.html 
@t unget - undo a previous get of an SCCS file (DEVELOPMENT)  
=unget - undo a previous get of an SCCS file (DEVELOPMENT) 
@f /utilities/uniq.html 
@t uniq - report or filter out repeated lines in a file  
=uniq - report or filter out repeated lines in a file 
@f /utilities/unlink.html 
@t unlink - call the unlink function  
=unlink - call the unlink function 
@f /utilities/uucp.html 
@t uucp - system-to-system copy  
=uucp - system-to-system copy 
@f /utilities/uudecode.html 
@t uudecode - decode a binary file  
=uudecode - decode a binary file 
@f /utilities/uuencode.html 
@t uuencode - encode a binary file  
=uuencode - encode a binary file 
@f /utilities/uustat.html 
@t uustat - uucp status enquiry and job control  
=uustat - uucp status enquiry and job control 
@f /utilities/uux.html 
@t uux - remote command execution  
=uux - remote command execution 
@f /utilities/val.html 
@t val - validate SCCS files (DEVELOPMENT)  
=val - validate SCCS files (DEVELOPMENT) 
@f /utilities/vi.html 
@t vi - screen-oriented (visual) display editor  
=vi - screen-oriented (visual) display editor 
@f /utilities/wait.html 
@t wait - await process completion  
=wait - await process completion 
@f /utilities/wc.html 
@t wc - word, line, and byte or character count  
=wc - word, line, and byte or character count 
@f /utilities/what.html 
@t what - identify SCCS files (DEVELOPMENT)  
=what - identify SCCS files (DEVELOPMENT) 
@f /utilities/who.html 
@t who - display who is on the system  
=who - display who is on the system 
@f /utilities/write.html 
@t write - write to another user  
=write - write to another user 
@f /utilities/xargs.html 
@t xargs - construct argument lists and invoke utility  
=xargs - construct argument lists and invoke utility 
@f /utilities/yacc.html 
@t yacc - yet another compiler compiler (DEVELOPMENT)  
=yacc - yet another compiler compiler (DEVELOPMENT) 
@f /utilities/zcat.html 
@t zcat - expand and concatenate data  
=zcat - expand and concatenate data 
